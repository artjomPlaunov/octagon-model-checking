CONTROL AUTOMATON ErrorPath7

INITIAL STATE ARG0;

STATE USEFIRST ARG0 :
    MATCH "" -> GOTO ARG29;
    TRUE -> STOP;

STATE USEFIRST ARG29 :
    MATCH "extern void abort(void);" -> GOTO ARG30_1_1;
STATE USEFIRST ARG30_0_1 :
    MATCH "extern void abort(void);" -> GOTO ARG30_1_1;
STATE USEFIRST ARG30_1_1 :
    MATCH "void __VERIFIER_assert(int cond)" -> GOTO ARG30_2_1;
STATE USEFIRST ARG30_2_1 :
    MATCH "extern int __VERIFIER_nondet_int(void);" -> GOTO ARG30_3_1;
STATE USEFIRST ARG30_3_1 :
    MATCH "extern void __VERIFIER_assume(int);" -> GOTO ARG30_4_1;
STATE USEFIRST ARG30_4_1 :
    MATCH "extern void __VERIFIER_assert(int);" -> GOTO ARG30_5_1;
STATE USEFIRST ARG30_5_1 :
    MATCH "int main ()" -> GOTO ARG30_6_1;
STATE USEFIRST ARG30_6_1 :
    MATCH "" -> GOTO ARG30_7_1;
STATE USEFIRST ARG30_7_1 :
    MATCH "int x = 0;" -> GOTO ARG30_8_1;
STATE USEFIRST ARG30_8_1 :
    MATCH "int n = __VERIFIER_nondet_int();" -> GOTO ARG30_9_1;
STATE USEFIRST ARG30_9_1 :
    MATCH "int n = __VERIFIER_nondet_int();" -> GOTO ARG30;
    TRUE -> STOP;

STATE USEFIRST ARG30 :
    MATCH "[!(n < 100 || n > 1000000)]" -> GOTO ARG32;
    TRUE -> STOP;

STATE USEFIRST ARG32 :
    MATCH "[!(n < 100 || n > 1000000)]" -> GOTO ARG34;
    TRUE -> STOP;

STATE USEFIRST ARG34 :
    MATCH "int y = n;" -> GOTO ARG36_1_2;
STATE USEFIRST ARG36_0_2 :
    MATCH "int y = n;" -> GOTO ARG36_1_2;
STATE USEFIRST ARG36_1_2 :
    MATCH "int runtime_div;" -> GOTO ARG36;
    TRUE -> STOP;

STATE USEFIRST ARG36 :
    MATCH "" -> GOTO ARG358;
    TRUE -> STOP;

STATE USEFIRST ARG358 :
    MATCH "[x+y <= 999999]" -> GOTO ARG359;
    TRUE -> STOP;

STATE USEFIRST ARG359 :
    MATCH "x++;" -> GOTO ARG362_1_3;
STATE USEFIRST ARG362_0_3 :
    MATCH "x++;" -> GOTO ARG362_1_3;
STATE USEFIRST ARG362_1_3 :
    MATCH "x++;" -> GOTO ARG362_2_3;
STATE USEFIRST ARG362_2_3 :
    MATCH "x++;" -> GOTO ARG362_3_3;
STATE USEFIRST ARG362_3_3 :
    MATCH "y--;" -> GOTO ARG362_4_3;
STATE USEFIRST ARG362_4_3 :
    MATCH "y--;" -> GOTO ARG362_5_3;
STATE USEFIRST ARG362_5_3 :
    MATCH "y--;" -> GOTO ARG362_6_3;
STATE USEFIRST ARG362_6_3 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG362;
    TRUE -> STOP;

STATE USEFIRST ARG362 :
    MATCH "[100 <= x + n]" -> GOTO ARG363;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG367;
    TRUE -> STOP;

STATE USEFIRST ARG363 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG365;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG367;
    TRUE -> STOP;

STATE USEFIRST ARG365 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG370;
    TRUE -> STOP;

STATE USEFIRST ARG367 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG370;
    TRUE -> STOP;

STATE USEFIRST ARG370 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG371;
    TRUE -> STOP;

STATE USEFIRST ARG371 :
    MATCH "" -> GOTO ARG372;
    TRUE -> STOP;

STATE USEFIRST ARG372 :
    MATCH "[!(!(cond))]" -> GOTO ARG374;
    TRUE -> STOP;

STATE USEFIRST ARG374 :
    MATCH "" -> GOTO ARG376;
    TRUE -> STOP;

STATE USEFIRST ARG376 :
    MATCH "" -> GOTO ARG377;
    TRUE -> STOP;

STATE USEFIRST ARG377 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG378;
    TRUE -> STOP;

STATE USEFIRST ARG378 :
    MATCH "" -> GOTO ARG380;
    TRUE -> STOP;

STATE USEFIRST ARG380 :
    MATCH "[x+y <= 999999]" -> GOTO ARG381;
    TRUE -> STOP;

STATE USEFIRST ARG381 :
    MATCH "x++;" -> GOTO ARG384_1_4;
STATE USEFIRST ARG384_0_4 :
    MATCH "x++;" -> GOTO ARG384_1_4;
STATE USEFIRST ARG384_1_4 :
    MATCH "x++;" -> GOTO ARG384_2_4;
STATE USEFIRST ARG384_2_4 :
    MATCH "x++;" -> GOTO ARG384_3_4;
STATE USEFIRST ARG384_3_4 :
    MATCH "y--;" -> GOTO ARG384_4_4;
STATE USEFIRST ARG384_4_4 :
    MATCH "y--;" -> GOTO ARG384_5_4;
STATE USEFIRST ARG384_5_4 :
    MATCH "y--;" -> GOTO ARG384_6_4;
STATE USEFIRST ARG384_6_4 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG384;
    TRUE -> STOP;

STATE USEFIRST ARG384 :
    MATCH "[100 <= x + n]" -> GOTO ARG385;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG389;
    TRUE -> STOP;

STATE USEFIRST ARG385 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG387;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG389;
    TRUE -> STOP;

STATE USEFIRST ARG387 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG392;
    TRUE -> STOP;

STATE USEFIRST ARG389 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG392;
    TRUE -> STOP;

STATE USEFIRST ARG392 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG393;
    TRUE -> STOP;

STATE USEFIRST ARG393 :
    MATCH "" -> GOTO ARG394;
    TRUE -> STOP;

STATE USEFIRST ARG394 :
    MATCH "[!(!(cond))]" -> GOTO ARG396;
    TRUE -> STOP;

STATE USEFIRST ARG396 :
    MATCH "" -> GOTO ARG398;
    TRUE -> STOP;

STATE USEFIRST ARG398 :
    MATCH "" -> GOTO ARG399;
    TRUE -> STOP;

STATE USEFIRST ARG399 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG400;
    TRUE -> STOP;

STATE USEFIRST ARG400 :
    MATCH "" -> GOTO ARG402;
    TRUE -> STOP;

STATE USEFIRST ARG402 :
    MATCH "[x+y <= 999999]" -> GOTO ARG403;
    TRUE -> STOP;

STATE USEFIRST ARG403 :
    MATCH "x++;" -> GOTO ARG406_1_5;
STATE USEFIRST ARG406_0_5 :
    MATCH "x++;" -> GOTO ARG406_1_5;
STATE USEFIRST ARG406_1_5 :
    MATCH "x++;" -> GOTO ARG406_2_5;
STATE USEFIRST ARG406_2_5 :
    MATCH "x++;" -> GOTO ARG406_3_5;
STATE USEFIRST ARG406_3_5 :
    MATCH "y--;" -> GOTO ARG406_4_5;
STATE USEFIRST ARG406_4_5 :
    MATCH "y--;" -> GOTO ARG406_5_5;
STATE USEFIRST ARG406_5_5 :
    MATCH "y--;" -> GOTO ARG406_6_5;
STATE USEFIRST ARG406_6_5 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG406;
    TRUE -> STOP;

STATE USEFIRST ARG406 :
    MATCH "[100 <= x + n]" -> GOTO ARG407;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG411;
    TRUE -> STOP;

STATE USEFIRST ARG407 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG409;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG411;
    TRUE -> STOP;

STATE USEFIRST ARG409 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG414;
    TRUE -> STOP;

STATE USEFIRST ARG411 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG414;
    TRUE -> STOP;

STATE USEFIRST ARG414 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG415;
    TRUE -> STOP;

STATE USEFIRST ARG415 :
    MATCH "" -> GOTO ARG416;
    TRUE -> STOP;

STATE USEFIRST ARG416 :
    MATCH "[!(!(cond))]" -> GOTO ARG418;
    TRUE -> STOP;

STATE USEFIRST ARG418 :
    MATCH "" -> GOTO ARG420;
    TRUE -> STOP;

STATE USEFIRST ARG420 :
    MATCH "" -> GOTO ARG421;
    TRUE -> STOP;

STATE USEFIRST ARG421 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG422;
    TRUE -> STOP;

STATE USEFIRST ARG422 :
    MATCH "" -> GOTO ARG424;
    TRUE -> STOP;

STATE USEFIRST ARG424 :
    MATCH "[x+y <= 999999]" -> GOTO ARG425;
    TRUE -> STOP;

STATE USEFIRST ARG425 :
    MATCH "x++;" -> GOTO ARG428_1_6;
STATE USEFIRST ARG428_0_6 :
    MATCH "x++;" -> GOTO ARG428_1_6;
STATE USEFIRST ARG428_1_6 :
    MATCH "x++;" -> GOTO ARG428_2_6;
STATE USEFIRST ARG428_2_6 :
    MATCH "x++;" -> GOTO ARG428_3_6;
STATE USEFIRST ARG428_3_6 :
    MATCH "y--;" -> GOTO ARG428_4_6;
STATE USEFIRST ARG428_4_6 :
    MATCH "y--;" -> GOTO ARG428_5_6;
STATE USEFIRST ARG428_5_6 :
    MATCH "y--;" -> GOTO ARG428_6_6;
STATE USEFIRST ARG428_6_6 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG428;
    TRUE -> STOP;

STATE USEFIRST ARG428 :
    MATCH "[100 <= x + n]" -> GOTO ARG429;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG433;
    TRUE -> STOP;

STATE USEFIRST ARG429 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG431;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG433;
    TRUE -> STOP;

STATE USEFIRST ARG431 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG436;
    TRUE -> STOP;

STATE USEFIRST ARG433 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG436;
    TRUE -> STOP;

STATE USEFIRST ARG436 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG437;
    TRUE -> STOP;

STATE USEFIRST ARG437 :
    MATCH "" -> GOTO ARG438;
    TRUE -> STOP;

STATE USEFIRST ARG438 :
    MATCH "[!(!(cond))]" -> GOTO ARG440;
    TRUE -> STOP;

STATE USEFIRST ARG440 :
    MATCH "" -> GOTO ARG442;
    TRUE -> STOP;

STATE USEFIRST ARG442 :
    MATCH "" -> GOTO ARG443;
    TRUE -> STOP;

STATE USEFIRST ARG443 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG444;
    TRUE -> STOP;

STATE USEFIRST ARG444 :
    MATCH "" -> GOTO ARG446;
    TRUE -> STOP;

STATE USEFIRST ARG446 :
    MATCH "[x+y <= 999999]" -> GOTO ARG447;
    TRUE -> STOP;

STATE USEFIRST ARG447 :
    MATCH "x++;" -> GOTO ARG450_1_7;
STATE USEFIRST ARG450_0_7 :
    MATCH "x++;" -> GOTO ARG450_1_7;
STATE USEFIRST ARG450_1_7 :
    MATCH "x++;" -> GOTO ARG450_2_7;
STATE USEFIRST ARG450_2_7 :
    MATCH "x++;" -> GOTO ARG450_3_7;
STATE USEFIRST ARG450_3_7 :
    MATCH "y--;" -> GOTO ARG450_4_7;
STATE USEFIRST ARG450_4_7 :
    MATCH "y--;" -> GOTO ARG450_5_7;
STATE USEFIRST ARG450_5_7 :
    MATCH "y--;" -> GOTO ARG450_6_7;
STATE USEFIRST ARG450_6_7 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG450;
    TRUE -> STOP;

STATE USEFIRST ARG450 :
    MATCH "[100 <= x + n]" -> GOTO ARG451;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG455;
    TRUE -> STOP;

STATE USEFIRST ARG451 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG453;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG455;
    TRUE -> STOP;

STATE USEFIRST ARG453 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG458;
    TRUE -> STOP;

STATE USEFIRST ARG455 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG458;
    TRUE -> STOP;

STATE USEFIRST ARG458 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG459;
    TRUE -> STOP;

STATE USEFIRST ARG459 :
    MATCH "" -> GOTO ARG460;
    TRUE -> STOP;

STATE USEFIRST ARG460 :
    MATCH "[!(!(cond))]" -> GOTO ARG462;
    TRUE -> STOP;

STATE USEFIRST ARG462 :
    MATCH "" -> GOTO ARG464;
    TRUE -> STOP;

STATE USEFIRST ARG464 :
    MATCH "" -> GOTO ARG465;
    TRUE -> STOP;

STATE USEFIRST ARG465 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG466;
    TRUE -> STOP;

STATE USEFIRST ARG466 :
    MATCH "" -> GOTO ARG468;
    TRUE -> STOP;

STATE USEFIRST ARG468 :
    MATCH "[x+y <= 999999]" -> GOTO ARG469;
    TRUE -> STOP;

STATE USEFIRST ARG469 :
    MATCH "x++;" -> GOTO ARG472_1_8;
STATE USEFIRST ARG472_0_8 :
    MATCH "x++;" -> GOTO ARG472_1_8;
STATE USEFIRST ARG472_1_8 :
    MATCH "x++;" -> GOTO ARG472_2_8;
STATE USEFIRST ARG472_2_8 :
    MATCH "x++;" -> GOTO ARG472_3_8;
STATE USEFIRST ARG472_3_8 :
    MATCH "y--;" -> GOTO ARG472_4_8;
STATE USEFIRST ARG472_4_8 :
    MATCH "y--;" -> GOTO ARG472_5_8;
STATE USEFIRST ARG472_5_8 :
    MATCH "y--;" -> GOTO ARG472_6_8;
STATE USEFIRST ARG472_6_8 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG472;
    TRUE -> STOP;

STATE USEFIRST ARG472 :
    MATCH "[100 <= x + n]" -> GOTO ARG473;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG477;
    TRUE -> STOP;

STATE USEFIRST ARG473 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG475;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG477;
    TRUE -> STOP;

STATE USEFIRST ARG475 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG480;
    TRUE -> STOP;

STATE USEFIRST ARG477 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG480;
    TRUE -> STOP;

STATE USEFIRST ARG480 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG481;
    TRUE -> STOP;

STATE USEFIRST ARG481 :
    MATCH "" -> GOTO ARG482;
    TRUE -> STOP;

STATE USEFIRST ARG482 :
    MATCH "[!(cond)]" -> GOTO ARG483;
    TRUE -> STOP;

STATE USEFIRST ARG483 :
    MATCH "ERROR: {abort();}" -> ERROR;
    TRUE -> STOP;

STATE USEFIRST ARG486 :
    TRUE -> STOP;

END AUTOMATON
