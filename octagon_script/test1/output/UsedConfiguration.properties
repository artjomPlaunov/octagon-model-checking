analysis.algorithm.CEGAR = true
analysis.name = predicateAnalysis
analysis.programNames = test1.c
analysis.traversal.order = bfs
analysis.traversal.useCallstack = true
analysis.traversal.useReversePostorder = true
ARGCPA.cpa = cpa.composite.CompositeCPA
cegar.refiner = cpa.predicate.PredicateRefiner
CompositeCPA.cpas = cpa.location.LocationCPA, cpa.callstack.CallstackCPA, cpa.functionpointer.FunctionPointerCPA, cpa.predicate.PredicateCPA, $specification
counterexample.export.core = Counterexample.%d.core.txt
counterexample.export.enabled = true
counterexample.export.exportAllFoundErrorPaths = true
counterexample.export.exportImmediately = true
cpa = cpa.arg.ARGCPA
cpa.composite.aggregateBasicBlocks = true
cpa.predicate.abstractions.asExpressions = true
cpa.predicate.blk.alwaysAtFunctions = false
cpa.predicate.blk.alwaysAtLoops = true
cpa.predicate.refinement.performInitialStaticRefinement = true
limits.time.cpu = 900s
log.level = INFO
parser.usePreprocessor = true
specification = specification/default.spc
