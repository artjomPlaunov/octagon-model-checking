CONTROL AUTOMATON ErrorPath9

INITIAL STATE ARG0;

STATE USEFIRST ARG0 :
    MATCH "" -> GOTO ARG29;
    TRUE -> STOP;

STATE USEFIRST ARG29 :
    MATCH "extern void abort(void);" -> GOTO ARG30_1_1;
STATE USEFIRST ARG30_0_1 :
    MATCH "extern void abort(void);" -> GOTO ARG30_1_1;
STATE USEFIRST ARG30_1_1 :
    MATCH "void __VERIFIER_assert(int cond)" -> GOTO ARG30_2_1;
STATE USEFIRST ARG30_2_1 :
    MATCH "extern int __VERIFIER_nondet_int(void);" -> GOTO ARG30_3_1;
STATE USEFIRST ARG30_3_1 :
    MATCH "extern void __VERIFIER_assume(int);" -> GOTO ARG30_4_1;
STATE USEFIRST ARG30_4_1 :
    MATCH "extern void __VERIFIER_assert(int);" -> GOTO ARG30_5_1;
STATE USEFIRST ARG30_5_1 :
    MATCH "int main ()" -> GOTO ARG30_6_1;
STATE USEFIRST ARG30_6_1 :
    MATCH "" -> GOTO ARG30_7_1;
STATE USEFIRST ARG30_7_1 :
    MATCH "int x = 0;" -> GOTO ARG30_8_1;
STATE USEFIRST ARG30_8_1 :
    MATCH "int n = __VERIFIER_nondet_int();" -> GOTO ARG30_9_1;
STATE USEFIRST ARG30_9_1 :
    MATCH "int n = __VERIFIER_nondet_int();" -> GOTO ARG30;
    TRUE -> STOP;

STATE USEFIRST ARG30 :
    MATCH "[!(n < 100 || n > 1000000)]" -> GOTO ARG32;
    TRUE -> STOP;

STATE USEFIRST ARG32 :
    MATCH "[!(n < 100 || n > 1000000)]" -> GOTO ARG34;
    TRUE -> STOP;

STATE USEFIRST ARG34 :
    MATCH "int y = n;" -> GOTO ARG36_1_2;
STATE USEFIRST ARG36_0_2 :
    MATCH "int y = n;" -> GOTO ARG36_1_2;
STATE USEFIRST ARG36_1_2 :
    MATCH "int runtime_div;" -> GOTO ARG36;
    TRUE -> STOP;

STATE USEFIRST ARG36 :
    MATCH "" -> GOTO ARG640;
    TRUE -> STOP;

STATE USEFIRST ARG640 :
    MATCH "[x+y <= 999999]" -> GOTO ARG641;
    TRUE -> STOP;

STATE USEFIRST ARG641 :
    MATCH "x++;" -> GOTO ARG644_1_3;
STATE USEFIRST ARG644_0_3 :
    MATCH "x++;" -> GOTO ARG644_1_3;
STATE USEFIRST ARG644_1_3 :
    MATCH "x++;" -> GOTO ARG644_2_3;
STATE USEFIRST ARG644_2_3 :
    MATCH "x++;" -> GOTO ARG644_3_3;
STATE USEFIRST ARG644_3_3 :
    MATCH "y--;" -> GOTO ARG644_4_3;
STATE USEFIRST ARG644_4_3 :
    MATCH "y--;" -> GOTO ARG644_5_3;
STATE USEFIRST ARG644_5_3 :
    MATCH "y--;" -> GOTO ARG644_6_3;
STATE USEFIRST ARG644_6_3 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG644;
    TRUE -> STOP;

STATE USEFIRST ARG644 :
    MATCH "[100 <= x + n]" -> GOTO ARG645;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG649;
    TRUE -> STOP;

STATE USEFIRST ARG645 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG647;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG649;
    TRUE -> STOP;

STATE USEFIRST ARG647 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG652;
    TRUE -> STOP;

STATE USEFIRST ARG649 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG652;
    TRUE -> STOP;

STATE USEFIRST ARG652 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG653;
    TRUE -> STOP;

STATE USEFIRST ARG653 :
    MATCH "" -> GOTO ARG654;
    TRUE -> STOP;

STATE USEFIRST ARG654 :
    MATCH "[!(!(cond))]" -> GOTO ARG656;
    TRUE -> STOP;

STATE USEFIRST ARG656 :
    MATCH "" -> GOTO ARG658;
    TRUE -> STOP;

STATE USEFIRST ARG658 :
    MATCH "" -> GOTO ARG659;
    TRUE -> STOP;

STATE USEFIRST ARG659 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG660;
    TRUE -> STOP;

STATE USEFIRST ARG660 :
    MATCH "" -> GOTO ARG662;
    TRUE -> STOP;

STATE USEFIRST ARG662 :
    MATCH "[x+y <= 999999]" -> GOTO ARG663;
    TRUE -> STOP;

STATE USEFIRST ARG663 :
    MATCH "x++;" -> GOTO ARG666_1_4;
STATE USEFIRST ARG666_0_4 :
    MATCH "x++;" -> GOTO ARG666_1_4;
STATE USEFIRST ARG666_1_4 :
    MATCH "x++;" -> GOTO ARG666_2_4;
STATE USEFIRST ARG666_2_4 :
    MATCH "x++;" -> GOTO ARG666_3_4;
STATE USEFIRST ARG666_3_4 :
    MATCH "y--;" -> GOTO ARG666_4_4;
STATE USEFIRST ARG666_4_4 :
    MATCH "y--;" -> GOTO ARG666_5_4;
STATE USEFIRST ARG666_5_4 :
    MATCH "y--;" -> GOTO ARG666_6_4;
STATE USEFIRST ARG666_6_4 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG666;
    TRUE -> STOP;

STATE USEFIRST ARG666 :
    MATCH "[100 <= x + n]" -> GOTO ARG667;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG671;
    TRUE -> STOP;

STATE USEFIRST ARG667 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG669;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG671;
    TRUE -> STOP;

STATE USEFIRST ARG669 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG674;
    TRUE -> STOP;

STATE USEFIRST ARG671 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG674;
    TRUE -> STOP;

STATE USEFIRST ARG674 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG675;
    TRUE -> STOP;

STATE USEFIRST ARG675 :
    MATCH "" -> GOTO ARG676;
    TRUE -> STOP;

STATE USEFIRST ARG676 :
    MATCH "[!(!(cond))]" -> GOTO ARG678;
    TRUE -> STOP;

STATE USEFIRST ARG678 :
    MATCH "" -> GOTO ARG680;
    TRUE -> STOP;

STATE USEFIRST ARG680 :
    MATCH "" -> GOTO ARG681;
    TRUE -> STOP;

STATE USEFIRST ARG681 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG682;
    TRUE -> STOP;

STATE USEFIRST ARG682 :
    MATCH "" -> GOTO ARG684;
    TRUE -> STOP;

STATE USEFIRST ARG684 :
    MATCH "[x+y <= 999999]" -> GOTO ARG685;
    TRUE -> STOP;

STATE USEFIRST ARG685 :
    MATCH "x++;" -> GOTO ARG688_1_5;
STATE USEFIRST ARG688_0_5 :
    MATCH "x++;" -> GOTO ARG688_1_5;
STATE USEFIRST ARG688_1_5 :
    MATCH "x++;" -> GOTO ARG688_2_5;
STATE USEFIRST ARG688_2_5 :
    MATCH "x++;" -> GOTO ARG688_3_5;
STATE USEFIRST ARG688_3_5 :
    MATCH "y--;" -> GOTO ARG688_4_5;
STATE USEFIRST ARG688_4_5 :
    MATCH "y--;" -> GOTO ARG688_5_5;
STATE USEFIRST ARG688_5_5 :
    MATCH "y--;" -> GOTO ARG688_6_5;
STATE USEFIRST ARG688_6_5 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG688;
    TRUE -> STOP;

STATE USEFIRST ARG688 :
    MATCH "[100 <= x + n]" -> GOTO ARG689;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG693;
    TRUE -> STOP;

STATE USEFIRST ARG689 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG691;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG693;
    TRUE -> STOP;

STATE USEFIRST ARG691 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG696;
    TRUE -> STOP;

STATE USEFIRST ARG693 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG696;
    TRUE -> STOP;

STATE USEFIRST ARG696 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG697;
    TRUE -> STOP;

STATE USEFIRST ARG697 :
    MATCH "" -> GOTO ARG698;
    TRUE -> STOP;

STATE USEFIRST ARG698 :
    MATCH "[!(!(cond))]" -> GOTO ARG700;
    TRUE -> STOP;

STATE USEFIRST ARG700 :
    MATCH "" -> GOTO ARG702;
    TRUE -> STOP;

STATE USEFIRST ARG702 :
    MATCH "" -> GOTO ARG703;
    TRUE -> STOP;

STATE USEFIRST ARG703 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG704;
    TRUE -> STOP;

STATE USEFIRST ARG704 :
    MATCH "" -> GOTO ARG706;
    TRUE -> STOP;

STATE USEFIRST ARG706 :
    MATCH "[x+y <= 999999]" -> GOTO ARG707;
    TRUE -> STOP;

STATE USEFIRST ARG707 :
    MATCH "x++;" -> GOTO ARG710_1_6;
STATE USEFIRST ARG710_0_6 :
    MATCH "x++;" -> GOTO ARG710_1_6;
STATE USEFIRST ARG710_1_6 :
    MATCH "x++;" -> GOTO ARG710_2_6;
STATE USEFIRST ARG710_2_6 :
    MATCH "x++;" -> GOTO ARG710_3_6;
STATE USEFIRST ARG710_3_6 :
    MATCH "y--;" -> GOTO ARG710_4_6;
STATE USEFIRST ARG710_4_6 :
    MATCH "y--;" -> GOTO ARG710_5_6;
STATE USEFIRST ARG710_5_6 :
    MATCH "y--;" -> GOTO ARG710_6_6;
STATE USEFIRST ARG710_6_6 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG710;
    TRUE -> STOP;

STATE USEFIRST ARG710 :
    MATCH "[100 <= x + n]" -> GOTO ARG711;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG715;
    TRUE -> STOP;

STATE USEFIRST ARG711 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG713;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG715;
    TRUE -> STOP;

STATE USEFIRST ARG713 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG718;
    TRUE -> STOP;

STATE USEFIRST ARG715 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG718;
    TRUE -> STOP;

STATE USEFIRST ARG718 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG719;
    TRUE -> STOP;

STATE USEFIRST ARG719 :
    MATCH "" -> GOTO ARG720;
    TRUE -> STOP;

STATE USEFIRST ARG720 :
    MATCH "[!(!(cond))]" -> GOTO ARG722;
    TRUE -> STOP;

STATE USEFIRST ARG722 :
    MATCH "" -> GOTO ARG724;
    TRUE -> STOP;

STATE USEFIRST ARG724 :
    MATCH "" -> GOTO ARG725;
    TRUE -> STOP;

STATE USEFIRST ARG725 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG726;
    TRUE -> STOP;

STATE USEFIRST ARG726 :
    MATCH "" -> GOTO ARG728;
    TRUE -> STOP;

STATE USEFIRST ARG728 :
    MATCH "[x+y <= 999999]" -> GOTO ARG729;
    TRUE -> STOP;

STATE USEFIRST ARG729 :
    MATCH "x++;" -> GOTO ARG732_1_7;
STATE USEFIRST ARG732_0_7 :
    MATCH "x++;" -> GOTO ARG732_1_7;
STATE USEFIRST ARG732_1_7 :
    MATCH "x++;" -> GOTO ARG732_2_7;
STATE USEFIRST ARG732_2_7 :
    MATCH "x++;" -> GOTO ARG732_3_7;
STATE USEFIRST ARG732_3_7 :
    MATCH "y--;" -> GOTO ARG732_4_7;
STATE USEFIRST ARG732_4_7 :
    MATCH "y--;" -> GOTO ARG732_5_7;
STATE USEFIRST ARG732_5_7 :
    MATCH "y--;" -> GOTO ARG732_6_7;
STATE USEFIRST ARG732_6_7 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG732;
    TRUE -> STOP;

STATE USEFIRST ARG732 :
    MATCH "[100 <= x + n]" -> GOTO ARG733;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG737;
    TRUE -> STOP;

STATE USEFIRST ARG733 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG735;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG737;
    TRUE -> STOP;

STATE USEFIRST ARG735 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG740;
    TRUE -> STOP;

STATE USEFIRST ARG737 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG740;
    TRUE -> STOP;

STATE USEFIRST ARG740 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG741;
    TRUE -> STOP;

STATE USEFIRST ARG741 :
    MATCH "" -> GOTO ARG742;
    TRUE -> STOP;

STATE USEFIRST ARG742 :
    MATCH "[!(!(cond))]" -> GOTO ARG744;
    TRUE -> STOP;

STATE USEFIRST ARG744 :
    MATCH "" -> GOTO ARG746;
    TRUE -> STOP;

STATE USEFIRST ARG746 :
    MATCH "" -> GOTO ARG747;
    TRUE -> STOP;

STATE USEFIRST ARG747 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG748;
    TRUE -> STOP;

STATE USEFIRST ARG748 :
    MATCH "" -> GOTO ARG750;
    TRUE -> STOP;

STATE USEFIRST ARG750 :
    MATCH "[x+y <= 999999]" -> GOTO ARG751;
    TRUE -> STOP;

STATE USEFIRST ARG751 :
    MATCH "x++;" -> GOTO ARG754_1_8;
STATE USEFIRST ARG754_0_8 :
    MATCH "x++;" -> GOTO ARG754_1_8;
STATE USEFIRST ARG754_1_8 :
    MATCH "x++;" -> GOTO ARG754_2_8;
STATE USEFIRST ARG754_2_8 :
    MATCH "x++;" -> GOTO ARG754_3_8;
STATE USEFIRST ARG754_3_8 :
    MATCH "y--;" -> GOTO ARG754_4_8;
STATE USEFIRST ARG754_4_8 :
    MATCH "y--;" -> GOTO ARG754_5_8;
STATE USEFIRST ARG754_5_8 :
    MATCH "y--;" -> GOTO ARG754_6_8;
STATE USEFIRST ARG754_6_8 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG754;
    TRUE -> STOP;

STATE USEFIRST ARG754 :
    MATCH "[100 <= x + n]" -> GOTO ARG755;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG759;
    TRUE -> STOP;

STATE USEFIRST ARG755 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG757;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG759;
    TRUE -> STOP;

STATE USEFIRST ARG757 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG762;
    TRUE -> STOP;

STATE USEFIRST ARG759 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG762;
    TRUE -> STOP;

STATE USEFIRST ARG762 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG763;
    TRUE -> STOP;

STATE USEFIRST ARG763 :
    MATCH "" -> GOTO ARG764;
    TRUE -> STOP;

STATE USEFIRST ARG764 :
    MATCH "[!(!(cond))]" -> GOTO ARG766;
    TRUE -> STOP;

STATE USEFIRST ARG766 :
    MATCH "" -> GOTO ARG768;
    TRUE -> STOP;

STATE USEFIRST ARG768 :
    MATCH "" -> GOTO ARG769;
    TRUE -> STOP;

STATE USEFIRST ARG769 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG770;
    TRUE -> STOP;

STATE USEFIRST ARG770 :
    MATCH "" -> GOTO ARG772;
    TRUE -> STOP;

STATE USEFIRST ARG772 :
    MATCH "[x+y <= 999999]" -> GOTO ARG773;
    TRUE -> STOP;

STATE USEFIRST ARG773 :
    MATCH "x++;" -> GOTO ARG776_1_9;
STATE USEFIRST ARG776_0_9 :
    MATCH "x++;" -> GOTO ARG776_1_9;
STATE USEFIRST ARG776_1_9 :
    MATCH "x++;" -> GOTO ARG776_2_9;
STATE USEFIRST ARG776_2_9 :
    MATCH "x++;" -> GOTO ARG776_3_9;
STATE USEFIRST ARG776_3_9 :
    MATCH "y--;" -> GOTO ARG776_4_9;
STATE USEFIRST ARG776_4_9 :
    MATCH "y--;" -> GOTO ARG776_5_9;
STATE USEFIRST ARG776_5_9 :
    MATCH "y--;" -> GOTO ARG776_6_9;
STATE USEFIRST ARG776_6_9 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG776;
    TRUE -> STOP;

STATE USEFIRST ARG776 :
    MATCH "[100 <= x + n]" -> GOTO ARG777;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG781;
    TRUE -> STOP;

STATE USEFIRST ARG777 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG779;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG781;
    TRUE -> STOP;

STATE USEFIRST ARG779 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG784;
    TRUE -> STOP;

STATE USEFIRST ARG781 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG784;
    TRUE -> STOP;

STATE USEFIRST ARG784 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG785;
    TRUE -> STOP;

STATE USEFIRST ARG785 :
    MATCH "" -> GOTO ARG786;
    TRUE -> STOP;

STATE USEFIRST ARG786 :
    MATCH "[!(!(cond))]" -> GOTO ARG788;
    TRUE -> STOP;

STATE USEFIRST ARG788 :
    MATCH "" -> GOTO ARG790;
    TRUE -> STOP;

STATE USEFIRST ARG790 :
    MATCH "" -> GOTO ARG791;
    TRUE -> STOP;

STATE USEFIRST ARG791 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG792;
    TRUE -> STOP;

STATE USEFIRST ARG792 :
    MATCH "" -> GOTO ARG794;
    TRUE -> STOP;

STATE USEFIRST ARG794 :
    MATCH "[x+y <= 999999]" -> GOTO ARG795;
    TRUE -> STOP;

STATE USEFIRST ARG795 :
    MATCH "x++;" -> GOTO ARG798_1_10;
STATE USEFIRST ARG798_0_10 :
    MATCH "x++;" -> GOTO ARG798_1_10;
STATE USEFIRST ARG798_1_10 :
    MATCH "x++;" -> GOTO ARG798_2_10;
STATE USEFIRST ARG798_2_10 :
    MATCH "x++;" -> GOTO ARG798_3_10;
STATE USEFIRST ARG798_3_10 :
    MATCH "y--;" -> GOTO ARG798_4_10;
STATE USEFIRST ARG798_4_10 :
    MATCH "y--;" -> GOTO ARG798_5_10;
STATE USEFIRST ARG798_5_10 :
    MATCH "y--;" -> GOTO ARG798_6_10;
STATE USEFIRST ARG798_6_10 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG798;
    TRUE -> STOP;

STATE USEFIRST ARG798 :
    MATCH "[100 <= x + n]" -> GOTO ARG799;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG803;
    TRUE -> STOP;

STATE USEFIRST ARG799 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG801;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG803;
    TRUE -> STOP;

STATE USEFIRST ARG801 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG806;
    TRUE -> STOP;

STATE USEFIRST ARG803 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG806;
    TRUE -> STOP;

STATE USEFIRST ARG806 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG807;
    TRUE -> STOP;

STATE USEFIRST ARG807 :
    MATCH "" -> GOTO ARG808;
    TRUE -> STOP;

STATE USEFIRST ARG808 :
    MATCH "[!(cond)]" -> GOTO ARG809;
    TRUE -> STOP;

STATE USEFIRST ARG809 :
    MATCH "ERROR: {abort();}" -> ERROR;
    TRUE -> STOP;

STATE USEFIRST ARG812 :
    TRUE -> STOP;

END AUTOMATON
