CONTROL AUTOMATON ErrorPath8

INITIAL STATE ARG0;

STATE USEFIRST ARG0 :
    MATCH "" -> GOTO ARG29;
    TRUE -> STOP;

STATE USEFIRST ARG29 :
    MATCH "extern void abort(void);" -> GOTO ARG30_1_1;
STATE USEFIRST ARG30_0_1 :
    MATCH "extern void abort(void);" -> GOTO ARG30_1_1;
STATE USEFIRST ARG30_1_1 :
    MATCH "void __VERIFIER_assert(int cond)" -> GOTO ARG30_2_1;
STATE USEFIRST ARG30_2_1 :
    MATCH "extern int __VERIFIER_nondet_int(void);" -> GOTO ARG30_3_1;
STATE USEFIRST ARG30_3_1 :
    MATCH "extern void __VERIFIER_assume(int);" -> GOTO ARG30_4_1;
STATE USEFIRST ARG30_4_1 :
    MATCH "extern void __VERIFIER_assert(int);" -> GOTO ARG30_5_1;
STATE USEFIRST ARG30_5_1 :
    MATCH "int main ()" -> GOTO ARG30_6_1;
STATE USEFIRST ARG30_6_1 :
    MATCH "" -> GOTO ARG30_7_1;
STATE USEFIRST ARG30_7_1 :
    MATCH "int x = 0;" -> GOTO ARG30_8_1;
STATE USEFIRST ARG30_8_1 :
    MATCH "int n = __VERIFIER_nondet_int();" -> GOTO ARG30_9_1;
STATE USEFIRST ARG30_9_1 :
    MATCH "int n = __VERIFIER_nondet_int();" -> GOTO ARG30;
    TRUE -> STOP;

STATE USEFIRST ARG30 :
    MATCH "[!(n < 100 || n > 1000000)]" -> GOTO ARG32;
    TRUE -> STOP;

STATE USEFIRST ARG32 :
    MATCH "[!(n < 100 || n > 1000000)]" -> GOTO ARG34;
    TRUE -> STOP;

STATE USEFIRST ARG34 :
    MATCH "int y = n;" -> GOTO ARG36_1_2;
STATE USEFIRST ARG36_0_2 :
    MATCH "int y = n;" -> GOTO ARG36_1_2;
STATE USEFIRST ARG36_1_2 :
    MATCH "int runtime_div;" -> GOTO ARG36;
    TRUE -> STOP;

STATE USEFIRST ARG36 :
    MATCH "" -> GOTO ARG488;
    TRUE -> STOP;

STATE USEFIRST ARG488 :
    MATCH "[x+y <= 999999]" -> GOTO ARG489;
    TRUE -> STOP;

STATE USEFIRST ARG489 :
    MATCH "x++;" -> GOTO ARG492_1_3;
STATE USEFIRST ARG492_0_3 :
    MATCH "x++;" -> GOTO ARG492_1_3;
STATE USEFIRST ARG492_1_3 :
    MATCH "x++;" -> GOTO ARG492_2_3;
STATE USEFIRST ARG492_2_3 :
    MATCH "x++;" -> GOTO ARG492_3_3;
STATE USEFIRST ARG492_3_3 :
    MATCH "y--;" -> GOTO ARG492_4_3;
STATE USEFIRST ARG492_4_3 :
    MATCH "y--;" -> GOTO ARG492_5_3;
STATE USEFIRST ARG492_5_3 :
    MATCH "y--;" -> GOTO ARG492_6_3;
STATE USEFIRST ARG492_6_3 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG492;
    TRUE -> STOP;

STATE USEFIRST ARG492 :
    MATCH "[100 <= x + n]" -> GOTO ARG493;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG497;
    TRUE -> STOP;

STATE USEFIRST ARG493 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG495;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG497;
    TRUE -> STOP;

STATE USEFIRST ARG495 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG500;
    TRUE -> STOP;

STATE USEFIRST ARG497 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG500;
    TRUE -> STOP;

STATE USEFIRST ARG500 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG501;
    TRUE -> STOP;

STATE USEFIRST ARG501 :
    MATCH "" -> GOTO ARG502;
    TRUE -> STOP;

STATE USEFIRST ARG502 :
    MATCH "[!(!(cond))]" -> GOTO ARG504;
    TRUE -> STOP;

STATE USEFIRST ARG504 :
    MATCH "" -> GOTO ARG506;
    TRUE -> STOP;

STATE USEFIRST ARG506 :
    MATCH "" -> GOTO ARG507;
    TRUE -> STOP;

STATE USEFIRST ARG507 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG508;
    TRUE -> STOP;

STATE USEFIRST ARG508 :
    MATCH "" -> GOTO ARG510;
    TRUE -> STOP;

STATE USEFIRST ARG510 :
    MATCH "[x+y <= 999999]" -> GOTO ARG511;
    TRUE -> STOP;

STATE USEFIRST ARG511 :
    MATCH "x++;" -> GOTO ARG514_1_4;
STATE USEFIRST ARG514_0_4 :
    MATCH "x++;" -> GOTO ARG514_1_4;
STATE USEFIRST ARG514_1_4 :
    MATCH "x++;" -> GOTO ARG514_2_4;
STATE USEFIRST ARG514_2_4 :
    MATCH "x++;" -> GOTO ARG514_3_4;
STATE USEFIRST ARG514_3_4 :
    MATCH "y--;" -> GOTO ARG514_4_4;
STATE USEFIRST ARG514_4_4 :
    MATCH "y--;" -> GOTO ARG514_5_4;
STATE USEFIRST ARG514_5_4 :
    MATCH "y--;" -> GOTO ARG514_6_4;
STATE USEFIRST ARG514_6_4 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG514;
    TRUE -> STOP;

STATE USEFIRST ARG514 :
    MATCH "[100 <= x + n]" -> GOTO ARG515;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG519;
    TRUE -> STOP;

STATE USEFIRST ARG515 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG517;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG519;
    TRUE -> STOP;

STATE USEFIRST ARG517 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG522;
    TRUE -> STOP;

STATE USEFIRST ARG519 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG522;
    TRUE -> STOP;

STATE USEFIRST ARG522 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG523;
    TRUE -> STOP;

STATE USEFIRST ARG523 :
    MATCH "" -> GOTO ARG524;
    TRUE -> STOP;

STATE USEFIRST ARG524 :
    MATCH "[!(!(cond))]" -> GOTO ARG526;
    TRUE -> STOP;

STATE USEFIRST ARG526 :
    MATCH "" -> GOTO ARG528;
    TRUE -> STOP;

STATE USEFIRST ARG528 :
    MATCH "" -> GOTO ARG529;
    TRUE -> STOP;

STATE USEFIRST ARG529 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG530;
    TRUE -> STOP;

STATE USEFIRST ARG530 :
    MATCH "" -> GOTO ARG532;
    TRUE -> STOP;

STATE USEFIRST ARG532 :
    MATCH "[x+y <= 999999]" -> GOTO ARG533;
    TRUE -> STOP;

STATE USEFIRST ARG533 :
    MATCH "x++;" -> GOTO ARG536_1_5;
STATE USEFIRST ARG536_0_5 :
    MATCH "x++;" -> GOTO ARG536_1_5;
STATE USEFIRST ARG536_1_5 :
    MATCH "x++;" -> GOTO ARG536_2_5;
STATE USEFIRST ARG536_2_5 :
    MATCH "x++;" -> GOTO ARG536_3_5;
STATE USEFIRST ARG536_3_5 :
    MATCH "y--;" -> GOTO ARG536_4_5;
STATE USEFIRST ARG536_4_5 :
    MATCH "y--;" -> GOTO ARG536_5_5;
STATE USEFIRST ARG536_5_5 :
    MATCH "y--;" -> GOTO ARG536_6_5;
STATE USEFIRST ARG536_6_5 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG536;
    TRUE -> STOP;

STATE USEFIRST ARG536 :
    MATCH "[100 <= x + n]" -> GOTO ARG537;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG541;
    TRUE -> STOP;

STATE USEFIRST ARG537 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG539;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG541;
    TRUE -> STOP;

STATE USEFIRST ARG539 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG544;
    TRUE -> STOP;

STATE USEFIRST ARG541 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG544;
    TRUE -> STOP;

STATE USEFIRST ARG544 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG545;
    TRUE -> STOP;

STATE USEFIRST ARG545 :
    MATCH "" -> GOTO ARG546;
    TRUE -> STOP;

STATE USEFIRST ARG546 :
    MATCH "[!(!(cond))]" -> GOTO ARG548;
    TRUE -> STOP;

STATE USEFIRST ARG548 :
    MATCH "" -> GOTO ARG550;
    TRUE -> STOP;

STATE USEFIRST ARG550 :
    MATCH "" -> GOTO ARG551;
    TRUE -> STOP;

STATE USEFIRST ARG551 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG552;
    TRUE -> STOP;

STATE USEFIRST ARG552 :
    MATCH "" -> GOTO ARG554;
    TRUE -> STOP;

STATE USEFIRST ARG554 :
    MATCH "[x+y <= 999999]" -> GOTO ARG555;
    TRUE -> STOP;

STATE USEFIRST ARG555 :
    MATCH "x++;" -> GOTO ARG558_1_6;
STATE USEFIRST ARG558_0_6 :
    MATCH "x++;" -> GOTO ARG558_1_6;
STATE USEFIRST ARG558_1_6 :
    MATCH "x++;" -> GOTO ARG558_2_6;
STATE USEFIRST ARG558_2_6 :
    MATCH "x++;" -> GOTO ARG558_3_6;
STATE USEFIRST ARG558_3_6 :
    MATCH "y--;" -> GOTO ARG558_4_6;
STATE USEFIRST ARG558_4_6 :
    MATCH "y--;" -> GOTO ARG558_5_6;
STATE USEFIRST ARG558_5_6 :
    MATCH "y--;" -> GOTO ARG558_6_6;
STATE USEFIRST ARG558_6_6 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG558;
    TRUE -> STOP;

STATE USEFIRST ARG558 :
    MATCH "[100 <= x + n]" -> GOTO ARG559;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG563;
    TRUE -> STOP;

STATE USEFIRST ARG559 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG561;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG563;
    TRUE -> STOP;

STATE USEFIRST ARG561 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG566;
    TRUE -> STOP;

STATE USEFIRST ARG563 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG566;
    TRUE -> STOP;

STATE USEFIRST ARG566 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG567;
    TRUE -> STOP;

STATE USEFIRST ARG567 :
    MATCH "" -> GOTO ARG568;
    TRUE -> STOP;

STATE USEFIRST ARG568 :
    MATCH "[!(!(cond))]" -> GOTO ARG570;
    TRUE -> STOP;

STATE USEFIRST ARG570 :
    MATCH "" -> GOTO ARG572;
    TRUE -> STOP;

STATE USEFIRST ARG572 :
    MATCH "" -> GOTO ARG573;
    TRUE -> STOP;

STATE USEFIRST ARG573 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG574;
    TRUE -> STOP;

STATE USEFIRST ARG574 :
    MATCH "" -> GOTO ARG576;
    TRUE -> STOP;

STATE USEFIRST ARG576 :
    MATCH "[x+y <= 999999]" -> GOTO ARG577;
    TRUE -> STOP;

STATE USEFIRST ARG577 :
    MATCH "x++;" -> GOTO ARG580_1_7;
STATE USEFIRST ARG580_0_7 :
    MATCH "x++;" -> GOTO ARG580_1_7;
STATE USEFIRST ARG580_1_7 :
    MATCH "x++;" -> GOTO ARG580_2_7;
STATE USEFIRST ARG580_2_7 :
    MATCH "x++;" -> GOTO ARG580_3_7;
STATE USEFIRST ARG580_3_7 :
    MATCH "y--;" -> GOTO ARG580_4_7;
STATE USEFIRST ARG580_4_7 :
    MATCH "y--;" -> GOTO ARG580_5_7;
STATE USEFIRST ARG580_5_7 :
    MATCH "y--;" -> GOTO ARG580_6_7;
STATE USEFIRST ARG580_6_7 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG580;
    TRUE -> STOP;

STATE USEFIRST ARG580 :
    MATCH "[100 <= x + n]" -> GOTO ARG581;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG585;
    TRUE -> STOP;

STATE USEFIRST ARG581 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG583;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG585;
    TRUE -> STOP;

STATE USEFIRST ARG583 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG588;
    TRUE -> STOP;

STATE USEFIRST ARG585 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG588;
    TRUE -> STOP;

STATE USEFIRST ARG588 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG589;
    TRUE -> STOP;

STATE USEFIRST ARG589 :
    MATCH "" -> GOTO ARG590;
    TRUE -> STOP;

STATE USEFIRST ARG590 :
    MATCH "[!(!(cond))]" -> GOTO ARG592;
    TRUE -> STOP;

STATE USEFIRST ARG592 :
    MATCH "" -> GOTO ARG594;
    TRUE -> STOP;

STATE USEFIRST ARG594 :
    MATCH "" -> GOTO ARG595;
    TRUE -> STOP;

STATE USEFIRST ARG595 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG596;
    TRUE -> STOP;

STATE USEFIRST ARG596 :
    MATCH "" -> GOTO ARG598;
    TRUE -> STOP;

STATE USEFIRST ARG598 :
    MATCH "[x+y <= 999999]" -> GOTO ARG599;
    TRUE -> STOP;

STATE USEFIRST ARG599 :
    MATCH "x++;" -> GOTO ARG602_1_8;
STATE USEFIRST ARG602_0_8 :
    MATCH "x++;" -> GOTO ARG602_1_8;
STATE USEFIRST ARG602_1_8 :
    MATCH "x++;" -> GOTO ARG602_2_8;
STATE USEFIRST ARG602_2_8 :
    MATCH "x++;" -> GOTO ARG602_3_8;
STATE USEFIRST ARG602_3_8 :
    MATCH "y--;" -> GOTO ARG602_4_8;
STATE USEFIRST ARG602_4_8 :
    MATCH "y--;" -> GOTO ARG602_5_8;
STATE USEFIRST ARG602_5_8 :
    MATCH "y--;" -> GOTO ARG602_6_8;
STATE USEFIRST ARG602_6_8 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG602;
    TRUE -> STOP;

STATE USEFIRST ARG602 :
    MATCH "[100 <= x + n]" -> GOTO ARG603;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG607;
    TRUE -> STOP;

STATE USEFIRST ARG603 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG605;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG607;
    TRUE -> STOP;

STATE USEFIRST ARG605 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG610;
    TRUE -> STOP;

STATE USEFIRST ARG607 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG610;
    TRUE -> STOP;

STATE USEFIRST ARG610 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG611;
    TRUE -> STOP;

STATE USEFIRST ARG611 :
    MATCH "" -> GOTO ARG612;
    TRUE -> STOP;

STATE USEFIRST ARG612 :
    MATCH "[!(!(cond))]" -> GOTO ARG614;
    TRUE -> STOP;

STATE USEFIRST ARG614 :
    MATCH "" -> GOTO ARG616;
    TRUE -> STOP;

STATE USEFIRST ARG616 :
    MATCH "" -> GOTO ARG617;
    TRUE -> STOP;

STATE USEFIRST ARG617 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG618;
    TRUE -> STOP;

STATE USEFIRST ARG618 :
    MATCH "" -> GOTO ARG620;
    TRUE -> STOP;

STATE USEFIRST ARG620 :
    MATCH "[x+y <= 999999]" -> GOTO ARG621;
    TRUE -> STOP;

STATE USEFIRST ARG621 :
    MATCH "x++;" -> GOTO ARG624_1_9;
STATE USEFIRST ARG624_0_9 :
    MATCH "x++;" -> GOTO ARG624_1_9;
STATE USEFIRST ARG624_1_9 :
    MATCH "x++;" -> GOTO ARG624_2_9;
STATE USEFIRST ARG624_2_9 :
    MATCH "x++;" -> GOTO ARG624_3_9;
STATE USEFIRST ARG624_3_9 :
    MATCH "y--;" -> GOTO ARG624_4_9;
STATE USEFIRST ARG624_4_9 :
    MATCH "y--;" -> GOTO ARG624_5_9;
STATE USEFIRST ARG624_5_9 :
    MATCH "y--;" -> GOTO ARG624_6_9;
STATE USEFIRST ARG624_6_9 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG624;
    TRUE -> STOP;

STATE USEFIRST ARG624 :
    MATCH "[100 <= x + n]" -> GOTO ARG625;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG629;
    TRUE -> STOP;

STATE USEFIRST ARG625 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG627;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG629;
    TRUE -> STOP;

STATE USEFIRST ARG627 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG632;
    TRUE -> STOP;

STATE USEFIRST ARG629 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG632;
    TRUE -> STOP;

STATE USEFIRST ARG632 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG633;
    TRUE -> STOP;

STATE USEFIRST ARG633 :
    MATCH "" -> GOTO ARG634;
    TRUE -> STOP;

STATE USEFIRST ARG634 :
    MATCH "[!(cond)]" -> GOTO ARG635;
    TRUE -> STOP;

STATE USEFIRST ARG635 :
    MATCH "ERROR: {abort();}" -> ERROR;
    TRUE -> STOP;

STATE USEFIRST ARG638 :
    TRUE -> STOP;

END AUTOMATON
