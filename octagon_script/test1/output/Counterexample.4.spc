CONTROL AUTOMATON ErrorPath4

INITIAL STATE ARG0;

STATE USEFIRST ARG0 :
    MATCH "" -> GOTO ARG29;
    TRUE -> STOP;

STATE USEFIRST ARG29 :
    MATCH "extern void abort(void);" -> GOTO ARG30_1_1;
STATE USEFIRST ARG30_0_1 :
    MATCH "extern void abort(void);" -> GOTO ARG30_1_1;
STATE USEFIRST ARG30_1_1 :
    MATCH "void __VERIFIER_assert(int cond)" -> GOTO ARG30_2_1;
STATE USEFIRST ARG30_2_1 :
    MATCH "extern int __VERIFIER_nondet_int(void);" -> GOTO ARG30_3_1;
STATE USEFIRST ARG30_3_1 :
    MATCH "extern void __VERIFIER_assume(int);" -> GOTO ARG30_4_1;
STATE USEFIRST ARG30_4_1 :
    MATCH "extern void __VERIFIER_assert(int);" -> GOTO ARG30_5_1;
STATE USEFIRST ARG30_5_1 :
    MATCH "int main ()" -> GOTO ARG30_6_1;
STATE USEFIRST ARG30_6_1 :
    MATCH "" -> GOTO ARG30_7_1;
STATE USEFIRST ARG30_7_1 :
    MATCH "int x = 0;" -> GOTO ARG30_8_1;
STATE USEFIRST ARG30_8_1 :
    MATCH "int n = __VERIFIER_nondet_int();" -> GOTO ARG30_9_1;
STATE USEFIRST ARG30_9_1 :
    MATCH "int n = __VERIFIER_nondet_int();" -> GOTO ARG30;
    TRUE -> STOP;

STATE USEFIRST ARG30 :
    MATCH "[!(n < 100 || n > 1000000)]" -> GOTO ARG32;
    TRUE -> STOP;

STATE USEFIRST ARG32 :
    MATCH "[!(n < 100 || n > 1000000)]" -> GOTO ARG34;
    TRUE -> STOP;

STATE USEFIRST ARG34 :
    MATCH "int y = n;" -> GOTO ARG36_1_2;
STATE USEFIRST ARG36_0_2 :
    MATCH "int y = n;" -> GOTO ARG36_1_2;
STATE USEFIRST ARG36_1_2 :
    MATCH "int runtime_div;" -> GOTO ARG36;
    TRUE -> STOP;

STATE USEFIRST ARG36 :
    MATCH "" -> GOTO ARG100;
    TRUE -> STOP;

STATE USEFIRST ARG100 :
    MATCH "[x+y <= 999999]" -> GOTO ARG101;
    TRUE -> STOP;

STATE USEFIRST ARG101 :
    MATCH "x++;" -> GOTO ARG104_1_3;
STATE USEFIRST ARG104_0_3 :
    MATCH "x++;" -> GOTO ARG104_1_3;
STATE USEFIRST ARG104_1_3 :
    MATCH "x++;" -> GOTO ARG104_2_3;
STATE USEFIRST ARG104_2_3 :
    MATCH "x++;" -> GOTO ARG104_3_3;
STATE USEFIRST ARG104_3_3 :
    MATCH "y--;" -> GOTO ARG104_4_3;
STATE USEFIRST ARG104_4_3 :
    MATCH "y--;" -> GOTO ARG104_5_3;
STATE USEFIRST ARG104_5_3 :
    MATCH "y--;" -> GOTO ARG104_6_3;
STATE USEFIRST ARG104_6_3 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG104;
    TRUE -> STOP;

STATE USEFIRST ARG104 :
    MATCH "[100 <= x + n]" -> GOTO ARG105;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG109;
    TRUE -> STOP;

STATE USEFIRST ARG105 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG107;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG109;
    TRUE -> STOP;

STATE USEFIRST ARG107 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG112;
    TRUE -> STOP;

STATE USEFIRST ARG109 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG112;
    TRUE -> STOP;

STATE USEFIRST ARG112 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG113;
    TRUE -> STOP;

STATE USEFIRST ARG113 :
    MATCH "" -> GOTO ARG114;
    TRUE -> STOP;

STATE USEFIRST ARG114 :
    MATCH "[!(!(cond))]" -> GOTO ARG116;
    TRUE -> STOP;

STATE USEFIRST ARG116 :
    MATCH "" -> GOTO ARG118;
    TRUE -> STOP;

STATE USEFIRST ARG118 :
    MATCH "" -> GOTO ARG119;
    TRUE -> STOP;

STATE USEFIRST ARG119 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG120;
    TRUE -> STOP;

STATE USEFIRST ARG120 :
    MATCH "" -> GOTO ARG122;
    TRUE -> STOP;

STATE USEFIRST ARG122 :
    MATCH "[x+y <= 999999]" -> GOTO ARG123;
    TRUE -> STOP;

STATE USEFIRST ARG123 :
    MATCH "x++;" -> GOTO ARG126_1_4;
STATE USEFIRST ARG126_0_4 :
    MATCH "x++;" -> GOTO ARG126_1_4;
STATE USEFIRST ARG126_1_4 :
    MATCH "x++;" -> GOTO ARG126_2_4;
STATE USEFIRST ARG126_2_4 :
    MATCH "x++;" -> GOTO ARG126_3_4;
STATE USEFIRST ARG126_3_4 :
    MATCH "y--;" -> GOTO ARG126_4_4;
STATE USEFIRST ARG126_4_4 :
    MATCH "y--;" -> GOTO ARG126_5_4;
STATE USEFIRST ARG126_5_4 :
    MATCH "y--;" -> GOTO ARG126_6_4;
STATE USEFIRST ARG126_6_4 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG126;
    TRUE -> STOP;

STATE USEFIRST ARG126 :
    MATCH "[100 <= x + n]" -> GOTO ARG127;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG131;
    TRUE -> STOP;

STATE USEFIRST ARG127 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG129;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG131;
    TRUE -> STOP;

STATE USEFIRST ARG129 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG134;
    TRUE -> STOP;

STATE USEFIRST ARG131 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG134;
    TRUE -> STOP;

STATE USEFIRST ARG134 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG135;
    TRUE -> STOP;

STATE USEFIRST ARG135 :
    MATCH "" -> GOTO ARG136;
    TRUE -> STOP;

STATE USEFIRST ARG136 :
    MATCH "[!(!(cond))]" -> GOTO ARG138;
    TRUE -> STOP;

STATE USEFIRST ARG138 :
    MATCH "" -> GOTO ARG140;
    TRUE -> STOP;

STATE USEFIRST ARG140 :
    MATCH "" -> GOTO ARG141;
    TRUE -> STOP;

STATE USEFIRST ARG141 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG142;
    TRUE -> STOP;

STATE USEFIRST ARG142 :
    MATCH "" -> GOTO ARG144;
    TRUE -> STOP;

STATE USEFIRST ARG144 :
    MATCH "[x+y <= 999999]" -> GOTO ARG145;
    TRUE -> STOP;

STATE USEFIRST ARG145 :
    MATCH "x++;" -> GOTO ARG148_1_5;
STATE USEFIRST ARG148_0_5 :
    MATCH "x++;" -> GOTO ARG148_1_5;
STATE USEFIRST ARG148_1_5 :
    MATCH "x++;" -> GOTO ARG148_2_5;
STATE USEFIRST ARG148_2_5 :
    MATCH "x++;" -> GOTO ARG148_3_5;
STATE USEFIRST ARG148_3_5 :
    MATCH "y--;" -> GOTO ARG148_4_5;
STATE USEFIRST ARG148_4_5 :
    MATCH "y--;" -> GOTO ARG148_5_5;
STATE USEFIRST ARG148_5_5 :
    MATCH "y--;" -> GOTO ARG148_6_5;
STATE USEFIRST ARG148_6_5 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG148;
    TRUE -> STOP;

STATE USEFIRST ARG148 :
    MATCH "[100 <= x + n]" -> GOTO ARG149;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG153;
    TRUE -> STOP;

STATE USEFIRST ARG149 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG151;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG153;
    TRUE -> STOP;

STATE USEFIRST ARG151 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG156;
    TRUE -> STOP;

STATE USEFIRST ARG153 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG156;
    TRUE -> STOP;

STATE USEFIRST ARG156 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG157;
    TRUE -> STOP;

STATE USEFIRST ARG157 :
    MATCH "" -> GOTO ARG158;
    TRUE -> STOP;

STATE USEFIRST ARG158 :
    MATCH "[!(cond)]" -> GOTO ARG159;
    TRUE -> STOP;

STATE USEFIRST ARG159 :
    MATCH "ERROR: {abort();}" -> ERROR;
    TRUE -> STOP;

STATE USEFIRST ARG162 :
    TRUE -> STOP;

END AUTOMATON
