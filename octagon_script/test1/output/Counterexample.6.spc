CONTROL AUTOMATON ErrorPath6

INITIAL STATE ARG0;

STATE USEFIRST ARG0 :
    MATCH "" -> GOTO ARG29;
    TRUE -> STOP;

STATE USEFIRST ARG29 :
    MATCH "extern void abort(void);" -> GOTO ARG30_1_1;
STATE USEFIRST ARG30_0_1 :
    MATCH "extern void abort(void);" -> GOTO ARG30_1_1;
STATE USEFIRST ARG30_1_1 :
    MATCH "void __VERIFIER_assert(int cond)" -> GOTO ARG30_2_1;
STATE USEFIRST ARG30_2_1 :
    MATCH "extern int __VERIFIER_nondet_int(void);" -> GOTO ARG30_3_1;
STATE USEFIRST ARG30_3_1 :
    MATCH "extern void __VERIFIER_assume(int);" -> GOTO ARG30_4_1;
STATE USEFIRST ARG30_4_1 :
    MATCH "extern void __VERIFIER_assert(int);" -> GOTO ARG30_5_1;
STATE USEFIRST ARG30_5_1 :
    MATCH "int main ()" -> GOTO ARG30_6_1;
STATE USEFIRST ARG30_6_1 :
    MATCH "" -> GOTO ARG30_7_1;
STATE USEFIRST ARG30_7_1 :
    MATCH "int x = 0;" -> GOTO ARG30_8_1;
STATE USEFIRST ARG30_8_1 :
    MATCH "int n = __VERIFIER_nondet_int();" -> GOTO ARG30_9_1;
STATE USEFIRST ARG30_9_1 :
    MATCH "int n = __VERIFIER_nondet_int();" -> GOTO ARG30;
    TRUE -> STOP;

STATE USEFIRST ARG30 :
    MATCH "[!(n < 100 || n > 1000000)]" -> GOTO ARG32;
    TRUE -> STOP;

STATE USEFIRST ARG32 :
    MATCH "[!(n < 100 || n > 1000000)]" -> GOTO ARG34;
    TRUE -> STOP;

STATE USEFIRST ARG34 :
    MATCH "int y = n;" -> GOTO ARG36_1_2;
STATE USEFIRST ARG36_0_2 :
    MATCH "int y = n;" -> GOTO ARG36_1_2;
STATE USEFIRST ARG36_1_2 :
    MATCH "int runtime_div;" -> GOTO ARG36;
    TRUE -> STOP;

STATE USEFIRST ARG36 :
    MATCH "" -> GOTO ARG250;
    TRUE -> STOP;

STATE USEFIRST ARG250 :
    MATCH "[x+y <= 999999]" -> GOTO ARG251;
    TRUE -> STOP;

STATE USEFIRST ARG251 :
    MATCH "x++;" -> GOTO ARG254_1_3;
STATE USEFIRST ARG254_0_3 :
    MATCH "x++;" -> GOTO ARG254_1_3;
STATE USEFIRST ARG254_1_3 :
    MATCH "x++;" -> GOTO ARG254_2_3;
STATE USEFIRST ARG254_2_3 :
    MATCH "x++;" -> GOTO ARG254_3_3;
STATE USEFIRST ARG254_3_3 :
    MATCH "y--;" -> GOTO ARG254_4_3;
STATE USEFIRST ARG254_4_3 :
    MATCH "y--;" -> GOTO ARG254_5_3;
STATE USEFIRST ARG254_5_3 :
    MATCH "y--;" -> GOTO ARG254_6_3;
STATE USEFIRST ARG254_6_3 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG254;
    TRUE -> STOP;

STATE USEFIRST ARG254 :
    MATCH "[100 <= x + n]" -> GOTO ARG255;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG259;
    TRUE -> STOP;

STATE USEFIRST ARG255 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG257;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG259;
    TRUE -> STOP;

STATE USEFIRST ARG257 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG262;
    TRUE -> STOP;

STATE USEFIRST ARG259 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG262;
    TRUE -> STOP;

STATE USEFIRST ARG262 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG263;
    TRUE -> STOP;

STATE USEFIRST ARG263 :
    MATCH "" -> GOTO ARG264;
    TRUE -> STOP;

STATE USEFIRST ARG264 :
    MATCH "[!(!(cond))]" -> GOTO ARG266;
    TRUE -> STOP;

STATE USEFIRST ARG266 :
    MATCH "" -> GOTO ARG268;
    TRUE -> STOP;

STATE USEFIRST ARG268 :
    MATCH "" -> GOTO ARG269;
    TRUE -> STOP;

STATE USEFIRST ARG269 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG270;
    TRUE -> STOP;

STATE USEFIRST ARG270 :
    MATCH "" -> GOTO ARG272;
    TRUE -> STOP;

STATE USEFIRST ARG272 :
    MATCH "[x+y <= 999999]" -> GOTO ARG273;
    TRUE -> STOP;

STATE USEFIRST ARG273 :
    MATCH "x++;" -> GOTO ARG276_1_4;
STATE USEFIRST ARG276_0_4 :
    MATCH "x++;" -> GOTO ARG276_1_4;
STATE USEFIRST ARG276_1_4 :
    MATCH "x++;" -> GOTO ARG276_2_4;
STATE USEFIRST ARG276_2_4 :
    MATCH "x++;" -> GOTO ARG276_3_4;
STATE USEFIRST ARG276_3_4 :
    MATCH "y--;" -> GOTO ARG276_4_4;
STATE USEFIRST ARG276_4_4 :
    MATCH "y--;" -> GOTO ARG276_5_4;
STATE USEFIRST ARG276_5_4 :
    MATCH "y--;" -> GOTO ARG276_6_4;
STATE USEFIRST ARG276_6_4 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG276;
    TRUE -> STOP;

STATE USEFIRST ARG276 :
    MATCH "[100 <= x + n]" -> GOTO ARG277;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG281;
    TRUE -> STOP;

STATE USEFIRST ARG277 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG279;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG281;
    TRUE -> STOP;

STATE USEFIRST ARG279 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG284;
    TRUE -> STOP;

STATE USEFIRST ARG281 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG284;
    TRUE -> STOP;

STATE USEFIRST ARG284 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG285;
    TRUE -> STOP;

STATE USEFIRST ARG285 :
    MATCH "" -> GOTO ARG286;
    TRUE -> STOP;

STATE USEFIRST ARG286 :
    MATCH "[!(!(cond))]" -> GOTO ARG288;
    TRUE -> STOP;

STATE USEFIRST ARG288 :
    MATCH "" -> GOTO ARG290;
    TRUE -> STOP;

STATE USEFIRST ARG290 :
    MATCH "" -> GOTO ARG291;
    TRUE -> STOP;

STATE USEFIRST ARG291 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG292;
    TRUE -> STOP;

STATE USEFIRST ARG292 :
    MATCH "" -> GOTO ARG294;
    TRUE -> STOP;

STATE USEFIRST ARG294 :
    MATCH "[x+y <= 999999]" -> GOTO ARG295;
    TRUE -> STOP;

STATE USEFIRST ARG295 :
    MATCH "x++;" -> GOTO ARG298_1_5;
STATE USEFIRST ARG298_0_5 :
    MATCH "x++;" -> GOTO ARG298_1_5;
STATE USEFIRST ARG298_1_5 :
    MATCH "x++;" -> GOTO ARG298_2_5;
STATE USEFIRST ARG298_2_5 :
    MATCH "x++;" -> GOTO ARG298_3_5;
STATE USEFIRST ARG298_3_5 :
    MATCH "y--;" -> GOTO ARG298_4_5;
STATE USEFIRST ARG298_4_5 :
    MATCH "y--;" -> GOTO ARG298_5_5;
STATE USEFIRST ARG298_5_5 :
    MATCH "y--;" -> GOTO ARG298_6_5;
STATE USEFIRST ARG298_6_5 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG298;
    TRUE -> STOP;

STATE USEFIRST ARG298 :
    MATCH "[100 <= x + n]" -> GOTO ARG299;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG303;
    TRUE -> STOP;

STATE USEFIRST ARG299 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG301;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG303;
    TRUE -> STOP;

STATE USEFIRST ARG301 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG306;
    TRUE -> STOP;

STATE USEFIRST ARG303 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG306;
    TRUE -> STOP;

STATE USEFIRST ARG306 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG307;
    TRUE -> STOP;

STATE USEFIRST ARG307 :
    MATCH "" -> GOTO ARG308;
    TRUE -> STOP;

STATE USEFIRST ARG308 :
    MATCH "[!(!(cond))]" -> GOTO ARG310;
    TRUE -> STOP;

STATE USEFIRST ARG310 :
    MATCH "" -> GOTO ARG312;
    TRUE -> STOP;

STATE USEFIRST ARG312 :
    MATCH "" -> GOTO ARG313;
    TRUE -> STOP;

STATE USEFIRST ARG313 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG314;
    TRUE -> STOP;

STATE USEFIRST ARG314 :
    MATCH "" -> GOTO ARG316;
    TRUE -> STOP;

STATE USEFIRST ARG316 :
    MATCH "[x+y <= 999999]" -> GOTO ARG317;
    TRUE -> STOP;

STATE USEFIRST ARG317 :
    MATCH "x++;" -> GOTO ARG320_1_6;
STATE USEFIRST ARG320_0_6 :
    MATCH "x++;" -> GOTO ARG320_1_6;
STATE USEFIRST ARG320_1_6 :
    MATCH "x++;" -> GOTO ARG320_2_6;
STATE USEFIRST ARG320_2_6 :
    MATCH "x++;" -> GOTO ARG320_3_6;
STATE USEFIRST ARG320_3_6 :
    MATCH "y--;" -> GOTO ARG320_4_6;
STATE USEFIRST ARG320_4_6 :
    MATCH "y--;" -> GOTO ARG320_5_6;
STATE USEFIRST ARG320_5_6 :
    MATCH "y--;" -> GOTO ARG320_6_6;
STATE USEFIRST ARG320_6_6 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG320;
    TRUE -> STOP;

STATE USEFIRST ARG320 :
    MATCH "[100 <= x + n]" -> GOTO ARG321;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG325;
    TRUE -> STOP;

STATE USEFIRST ARG321 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG323;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG325;
    TRUE -> STOP;

STATE USEFIRST ARG323 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG328;
    TRUE -> STOP;

STATE USEFIRST ARG325 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG328;
    TRUE -> STOP;

STATE USEFIRST ARG328 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG329;
    TRUE -> STOP;

STATE USEFIRST ARG329 :
    MATCH "" -> GOTO ARG330;
    TRUE -> STOP;

STATE USEFIRST ARG330 :
    MATCH "[!(!(cond))]" -> GOTO ARG332;
    TRUE -> STOP;

STATE USEFIRST ARG332 :
    MATCH "" -> GOTO ARG334;
    TRUE -> STOP;

STATE USEFIRST ARG334 :
    MATCH "" -> GOTO ARG335;
    TRUE -> STOP;

STATE USEFIRST ARG335 :
    MATCH "runtime_div = x/(n-y);" -> GOTO ARG336;
    TRUE -> STOP;

STATE USEFIRST ARG336 :
    MATCH "" -> GOTO ARG338;
    TRUE -> STOP;

STATE USEFIRST ARG338 :
    MATCH "[x+y <= 999999]" -> GOTO ARG339;
    TRUE -> STOP;

STATE USEFIRST ARG339 :
    MATCH "x++;" -> GOTO ARG342_1_7;
STATE USEFIRST ARG342_0_7 :
    MATCH "x++;" -> GOTO ARG342_1_7;
STATE USEFIRST ARG342_1_7 :
    MATCH "x++;" -> GOTO ARG342_2_7;
STATE USEFIRST ARG342_2_7 :
    MATCH "x++;" -> GOTO ARG342_3_7;
STATE USEFIRST ARG342_3_7 :
    MATCH "y--;" -> GOTO ARG342_4_7;
STATE USEFIRST ARG342_4_7 :
    MATCH "y--;" -> GOTO ARG342_5_7;
STATE USEFIRST ARG342_5_7 :
    MATCH "y--;" -> GOTO ARG342_6_7;
STATE USEFIRST ARG342_6_7 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG342;
    TRUE -> STOP;

STATE USEFIRST ARG342 :
    MATCH "[100 <= x + n]" -> GOTO ARG343;
    MATCH "[!(100 <= x + n)]" -> GOTO ARG347;
    TRUE -> STOP;

STATE USEFIRST ARG343 :
    MATCH "[x + n <= 0x7fffffff]" -> GOTO ARG345;
    MATCH "[!(x + n <= 0x7fffffff)]" -> GOTO ARG347;
    TRUE -> STOP;

STATE USEFIRST ARG345 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG350;
    TRUE -> STOP;

STATE USEFIRST ARG347 :
    MATCH "100 <= x + n && x + n <= 0x7fffffff" -> GOTO ARG350;
    TRUE -> STOP;

STATE USEFIRST ARG350 :
    MATCH "__VERIFIER_assert(100 <= x + n && x + n <= 0x7fffffff);" -> GOTO ARG351;
    TRUE -> STOP;

STATE USEFIRST ARG351 :
    MATCH "" -> GOTO ARG352;
    TRUE -> STOP;

STATE USEFIRST ARG352 :
    MATCH "[!(cond)]" -> GOTO ARG353;
    TRUE -> STOP;

STATE USEFIRST ARG353 :
    MATCH "ERROR: {abort();}" -> ERROR;
    TRUE -> STOP;

STATE USEFIRST ARG356 :
    TRUE -> STOP;

END AUTOMATON
