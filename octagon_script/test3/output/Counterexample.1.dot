digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N8\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
1 [label="1 @ N114\nmain\n" id="1"]
2 [label="2 @ N13\nmain\n" id="2"]
4 [label="4 @ N16\nmain\n" id="4"]
6 [label="6 @ N14\nmain\n" id="6"]
8 [label="8 @ N19\nmain\n" id="8"]
10 [fillcolor="cornflowerblue" label="10 @ N20\nmain\nAbstractionState: ABS1: true\n" id="10"]
12 [label="12 @ N22\nmain\n" id="12"]
13 [label="13 @ N112\nmain\n" id="13"]
14 [label="14 @ N1\n__VERIFIER_assert entry\n" id="14"]
15 [label="15 @ N2\n__VERIFIER_assert\n" id="15"]
16 [label="16 @ N4\n__VERIFIER_assert\n" id="16"]
19 [fillcolor="red" label="19 @ N5\n__VERIFIER_assert\nAbstractionState: ABS2: true\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="19"]
0 -> 1 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 1"]
1 -> 2 [color="red" label="Lines 7 - 89: \lvoid abort();\lvoid __VERIFIER_assert(int cond);\lint __VERIFIER_nondet_int();\lvoid __VERIFIER_assume(int);\lint main();\lFunction start dummy edge\lint buf[1000000];\lint x = 0;\lint n;\ln = __VERIFIER_nondet_int();\l" id="1 -> 2"]
2 -> 4 [color="red" label="Line 90: \l[!(n < 100)]\l" id="2 -> 4"]
2 -> 7 [label="Line 90: \l[n < 100]\l" id="2 -> 7"]
4 -> 6 [color="red" label="Line 90: \l[!(n > 1000000)]\l" id="4 -> 6"]
4 -> 7 [label="Line 90: \l[n > 1000000]\l" id="4 -> 7"]
6 -> 8 [color="red" label="Lines 92 - 93: \lint y = n;\lint runtime_div;\l" id="6 -> 8"]
8 -> 10 [color="red" label="Line 95: \lwhile\l" id="8 -> 10"]
10 -> 11 [label="Line 95: \l[(x + y) <= 999999]\l" id="10 -> 11"]
10 -> 12 [color="red" label="Line 95: \l[!((x + y) <= 999999)]\l" id="10 -> 12"]
12 -> 13 [color="red" label="Line 120: \lint j = buf[100];\l" id="12 -> 13"]
13 -> 14 [color="red" label="Line 121: \l__VERIFIER_assert((buf[999999]) == 999999)\l" id="13 -> 14"]
14 -> 15 [color="red" label="Line 0: \lFunction start dummy edge\l" id="14 -> 15"]
15 -> 16 [color="red" label="Line 9: \l[cond == 0]\l" id="15 -> 16"]
15 -> 17 [label="Line 9: \l[!(cond == 0)]\l" id="15 -> 17"]
16 -> 19 [color="red" label="Line 10: \lLabel: ERROR\l" id="16 -> 19"]
}
