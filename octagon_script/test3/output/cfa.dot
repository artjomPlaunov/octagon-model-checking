digraph CFA {
8 [shape="circle" label="N8\n112"]
114 [shape="circle" label="N114\n111"]
115 [shape="circle" label="N115\n110"]
116 [shape="circle" label="N116\n109"]
117 [shape="circle" label="N117\n108"]
118 [shape="circle" label="N118\n107"]
119 [shape="circle" label="N119\n106"]
9 [shape="circle" label="N9\n105"]
10 [shape="circle" label="N10\n104"]
11 [shape="circle" label="N11\n103"]
12 [shape="circle" label="N12\n102"]
13 [shape="diamond" label="N13\n101"]
16 [shape="diamond" label="N16\n100"]
14 [shape="circle" label="N14\n97"]
18 [shape="circle" label="N18\n96"]
19 [shape="circle" label="N19\n95"]
20 [shape="doublecircle" label="N20\n94"]
22 [shape="circle" label="N22\n93"]
112 [shape="circle" label="N112\n92"]
1 [shape="circle" label="N1\n6"]
2 [shape="diamond" label="N2\n5"]
3 [shape="circle" label="N3\n1"]
0 [shape="circle" label="N0\n0"]
113 [shape="circle" label="N113\n91"]
7 [shape="circle" label="N7\n90"]
4 [shape="circle" label="N4\n4"]
5 [shape="circle" label="N5\n3"]
120 [shape="circle" label="N120\n0"]
21 [shape="circle" label="N21\n89"]
23 [shape="circle" label="N23\n88"]
24 [shape="diamond" label="N24\n87"]
27 [shape="circle" label="N27\n85"]
28 [shape="diamond" label="N28\n83"]
121 [shape="circle" label="N121\n0"]
29 [shape="circle" label="N29\n82"]
30 [shape="diamond" label="N30\n81"]
33 [shape="circle" label="N33\n79"]
34 [shape="diamond" label="N34\n77"]
122 [shape="circle" label="N122\n0"]
35 [shape="circle" label="N35\n76"]
36 [shape="diamond" label="N36\n75"]
39 [shape="circle" label="N39\n73"]
40 [shape="diamond" label="N40\n71"]
123 [shape="circle" label="N123\n0"]
41 [shape="circle" label="N41\n70"]
42 [shape="circle" label="N42\n69"]
43 [shape="circle" label="N43\n68"]
44 [shape="circle" label="N44\n67"]
45 [shape="circle" label="N45\n66"]
46 [shape="circle" label="N46\n65"]
47 [shape="circle" label="N47\n64"]
48 [shape="circle" label="N48\n63"]
49 [shape="circle" label="N49\n62"]
50 [shape="circle" label="N50\n61"]
51 [shape="diamond" label="N51\n60"]
54 [shape="circle" label="N54\n58"]
55 [shape="diamond" label="N55\n56"]
124 [shape="circle" label="N124\n0"]
56 [shape="circle" label="N56\n55"]
57 [shape="diamond" label="N57\n54"]
60 [shape="circle" label="N60\n52"]
61 [shape="diamond" label="N61\n50"]
125 [shape="circle" label="N125\n0"]
62 [shape="circle" label="N62\n49"]
63 [shape="diamond" label="N63\n48"]
66 [shape="circle" label="N66\n46"]
67 [shape="diamond" label="N67\n44"]
126 [shape="circle" label="N126\n0"]
68 [shape="circle" label="N68\n43"]
69 [shape="diamond" label="N69\n42"]
72 [shape="circle" label="N72\n40"]
73 [shape="diamond" label="N73\n38"]
127 [shape="circle" label="N127\n0"]
74 [shape="circle" label="N74\n37"]
75 [shape="diamond" label="N75\n36"]
78 [shape="circle" label="N78\n34"]
79 [shape="diamond" label="N79\n32"]
128 [shape="circle" label="N128\n0"]
80 [shape="circle" label="N80\n31"]
81 [shape="diamond" label="N81\n30"]
84 [shape="circle" label="N84\n28"]
85 [shape="diamond" label="N85\n26"]
129 [shape="circle" label="N129\n0"]
86 [shape="circle" label="N86\n25"]
87 [shape="diamond" label="N87\n24"]
90 [shape="circle" label="N90\n22"]
91 [shape="diamond" label="N91\n20"]
130 [shape="circle" label="N130\n0"]
92 [shape="circle" label="N92\n19"]
93 [shape="diamond" label="N93\n18"]
96 [shape="circle" label="N96\n16"]
97 [shape="diamond" label="N97\n14"]
131 [shape="circle" label="N131\n0"]
98 [shape="circle" label="N98\n13"]
99 [shape="diamond" label="N99\n12"]
102 [shape="circle" label="N102\n10"]
103 [shape="diamond" label="N103\n8"]
132 [shape="circle" label="N132\n0"]
104 [shape="circle" label="N104\n7"]
105 [shape="diamond" label="N105\n6"]
108 [shape="circle" label="N108\n4"]
109 [shape="diamond" label="N109\n2"]
133 [shape="circle" label="N133\n0"]
110 [shape="circle" label="N110\n1"]
111 [shape="circle" label="N111\n0"]
106 [shape="diamond" label="N106\n5"]
107 [shape="circle" label="N107\n3"]
100 [shape="diamond" label="N100\n11"]
101 [shape="circle" label="N101\n9"]
94 [shape="diamond" label="N94\n17"]
95 [shape="circle" label="N95\n15"]
88 [shape="diamond" label="N88\n23"]
89 [shape="circle" label="N89\n21"]
82 [shape="diamond" label="N82\n29"]
83 [shape="circle" label="N83\n27"]
76 [shape="diamond" label="N76\n35"]
77 [shape="circle" label="N77\n33"]
70 [shape="diamond" label="N70\n41"]
71 [shape="circle" label="N71\n39"]
64 [shape="diamond" label="N64\n47"]
65 [shape="circle" label="N65\n45"]
58 [shape="diamond" label="N58\n53"]
59 [shape="circle" label="N59\n51"]
52 [shape="diamond" label="N52\n59"]
53 [shape="circle" label="N53\n57"]
37 [shape="diamond" label="N37\n74"]
38 [shape="circle" label="N38\n72"]
31 [shape="diamond" label="N31\n80"]
32 [shape="circle" label="N32\n78"]
25 [shape="diamond" label="N25\n86"]
26 [shape="circle" label="N26\n84"]
15 [shape="circle" label="N15\n99"]
134 [shape="circle" label="N134\n0"]
node [shape="circle"]
subgraph cluster___VERIFIER_assert {
label="__VERIFIER_assert()"
1 -> 2 [label="Function start dummy edge"]
2 -> 4 [label="[cond == 0]"]
2 -> 3 [label="[!(cond == 0)]"]
3 -> 0 [label="default return"]
4 -> 5 [label="Label: ERROR"]
5 -> 120 [label="abort();"]}
subgraph cluster_main {
label="main()"
8 -> 114 [label="INIT GLOBAL VARS"]
114 -> 115 [label="void abort();"]
115 -> 116 [label="void __VERIFIER_assert(int cond);"]
116 -> 117 [label="int __VERIFIER_nondet_int();"]
117 -> 118 [label="void __VERIFIER_assume(int);"]
118 -> 119 [label="int main();"]
119 -> 9 [label="Function start dummy edge"]
9 -> 10 [label="int buf[1000000];"]
10 -> 11 [label="int x = 0;"]
11 -> 12 [label="int n;"]
12 -> 13 [label="n = __VERIFIER_nondet_int();"]
13 -> 15 [label="[n < 100]"]
13 -> 16 [label="[!(n < 100)]"]
16 -> 15 [label="[n > 1000000]"]
16 -> 14 [label="[!(n > 1000000)]"]
14 -> 18 [label="int y = n;"]
18 -> 19 [label="int runtime_div;"]
19 -> 20 [label="while"]
20 -> 21 [label="[(x + y) <= 999999]"]
20 -> 22 [label="[!((x + y) <= 999999)]"]
22 -> 112 [label="int j = buf[100];"]
112 -> 113 [label="__VERIFIER_assert((buf[999999]) == 999999);" style="dotted" arrowhead="empty"]
113 -> 7 [label="default return"]
21 -> 23 [label="Label: __FRAMAC_OCTAGON3"]
23 -> 24 [label="int __CPAchecker_TMP_0;"]
24 -> 25 [label="[0 <= (n - y)]"]
24 -> 27 [label="[!(0 <= (n - y))]"]
27 -> 28 [label="__CPAchecker_TMP_0 = 0;"]
28 -> 29 [label="[__CPAchecker_TMP_0 != 0]"]
28 -> 121 [label="[!(__CPAchecker_TMP_0 != 0)]"]
29 -> 30 [label="int __CPAchecker_TMP_1;"]
30 -> 31 [label="[99 <= (x + y)]"]
30 -> 33 [label="[!(99 <= (x + y))]"]
33 -> 34 [label="__CPAchecker_TMP_1 = 0;"]
34 -> 35 [label="[__CPAchecker_TMP_1 != 0]"]
34 -> 122 [label="[!(__CPAchecker_TMP_1 != 0)]"]
35 -> 36 [label="int __CPAchecker_TMP_2;"]
36 -> 37 [label="[99 <= (x + n)]"]
36 -> 39 [label="[!(99 <= (x + n))]"]
39 -> 40 [label="__CPAchecker_TMP_2 = 0;"]
40 -> 41 [label="[__CPAchecker_TMP_2 != 0]"]
40 -> 123 [label="[!(__CPAchecker_TMP_2 != 0)]"]
41 -> 42 [label="const int __CPAchecker_TMP_3 = x;"]
42 -> 43 [label="x = x + 1;"]
43 -> 44 [label="__CPAchecker_TMP_3;"]
44 -> 45 [label="const int __CPAchecker_TMP_4 = y;"]
45 -> 46 [label="y = y - 1;"]
46 -> 47 [label="__CPAchecker_TMP_4;"]
47 -> 48 [label="int i = x + y;"]
48 -> 49 [label="buf[i] = x + y;"]
49 -> 50 [label="Label: __FRAMAC_OCTAGON4"]
50 -> 51 [label="int __CPAchecker_TMP_5;"]
51 -> 52 [label="[1 <= (n - y)]"]
51 -> 54 [label="[!(1 <= (n - y))]"]
54 -> 55 [label="__CPAchecker_TMP_5 = 0;"]
55 -> 56 [label="[__CPAchecker_TMP_5 != 0]"]
55 -> 124 [label="[!(__CPAchecker_TMP_5 != 0)]"]
56 -> 57 [label="int __CPAchecker_TMP_6;"]
57 -> 58 [label="[-2147483647 <= (y - i)]"]
57 -> 60 [label="[!(-2147483647 <= (y - i))]"]
60 -> 61 [label="__CPAchecker_TMP_6 = 0;"]
61 -> 62 [label="[__CPAchecker_TMP_6 != 0]"]
61 -> 125 [label="[!(__CPAchecker_TMP_6 != 0)]"]
62 -> 63 [label="int __CPAchecker_TMP_7;"]
63 -> 64 [label="[-999899 <= (n - i)]"]
63 -> 66 [label="[!(-999899 <= (n - i))]"]
66 -> 67 [label="__CPAchecker_TMP_7 = 0;"]
67 -> 68 [label="[__CPAchecker_TMP_7 != 0]"]
67 -> 126 [label="[!(__CPAchecker_TMP_7 != 0)]"]
68 -> 69 [label="int __CPAchecker_TMP_8;"]
69 -> 70 [label="[1 <= ((buf[i]) - y)]"]
69 -> 72 [label="[!(1 <= ((buf[i]) - y))]"]
72 -> 73 [label="__CPAchecker_TMP_8 = 0;"]
73 -> 74 [label="[__CPAchecker_TMP_8 != 0]"]
73 -> 127 [label="[!(__CPAchecker_TMP_8 != 0)]"]
74 -> 75 [label="int __CPAchecker_TMP_9;"]
75 -> 76 [label="[-999901 <= ((buf[i]) - n)]"]
75 -> 78 [label="[!(-999901 <= ((buf[i]) - n))]"]
78 -> 79 [label="__CPAchecker_TMP_9 = 0;"]
79 -> 80 [label="[__CPAchecker_TMP_9 != 0]"]
79 -> 128 [label="[!(__CPAchecker_TMP_9 != 0)]"]
80 -> 81 [label="int __CPAchecker_TMP_10;"]
81 -> 82 [label="[-999900 <= ((buf[i]) - i)]"]
81 -> 84 [label="[!(-999900 <= ((buf[i]) - i))]"]
84 -> 85 [label="__CPAchecker_TMP_10 = 0;"]
85 -> 86 [label="[__CPAchecker_TMP_10 != 0]"]
85 -> 129 [label="[!(__CPAchecker_TMP_10 != 0)]"]
86 -> 87 [label="int __CPAchecker_TMP_11;"]
87 -> 88 [label="[99 <= (x + y)]"]
87 -> 90 [label="[!(99 <= (x + y))]"]
90 -> 91 [label="__CPAchecker_TMP_11 = 0;"]
91 -> 92 [label="[__CPAchecker_TMP_11 != 0]"]
91 -> 130 [label="[!(__CPAchecker_TMP_11 != 0)]"]
92 -> 93 [label="int __CPAchecker_TMP_12;"]
93 -> 94 [label="[100 <= (x + n)]"]
93 -> 96 [label="[!(100 <= (x + n))]"]
96 -> 97 [label="__CPAchecker_TMP_12 = 0;"]
97 -> 98 [label="[__CPAchecker_TMP_12 != 0]"]
97 -> 131 [label="[!(__CPAchecker_TMP_12 != 0)]"]
98 -> 99 [label="int __CPAchecker_TMP_13;"]
99 -> 100 [label="[-999998 <= (x - i)]"]
99 -> 102 [label="[!(-999998 <= (x - i))]"]
102 -> 103 [label="__CPAchecker_TMP_13 = 0;"]
103 -> 104 [label="[__CPAchecker_TMP_13 != 0]"]
103 -> 132 [label="[!(__CPAchecker_TMP_13 != 0)]"]
104 -> 105 [label="int __CPAchecker_TMP_14;"]
105 -> 106 [label="[-2147483548 <= ((buf[i]) - x)]"]
105 -> 108 [label="[!(-2147483548 <= ((buf[i]) - x))]"]
108 -> 109 [label="__CPAchecker_TMP_14 = 0;"]
109 -> 110 [label="[__CPAchecker_TMP_14 != 0]"]
109 -> 133 [label="[!(__CPAchecker_TMP_14 != 0)]"]
110 -> 111 [label="runtime_div = x / (n - y);"]
111 -> 20 [label=""]
106 -> 107 [label="[((buf[i]) - x) <= 999998]"]
106 -> 108 [label="[!(((buf[i]) - x) <= 999998)]"]
107 -> 109 [label="__CPAchecker_TMP_14 = 1;"]
100 -> 101 [label="[(x - i) <= 2147483548]"]
100 -> 102 [label="[!((x - i) <= 2147483548)]"]
101 -> 103 [label="__CPAchecker_TMP_13 = 1;"]
94 -> 95 [label="[(x + n) <= 2147483647]"]
94 -> 96 [label="[!((x + n) <= 2147483647)]"]
95 -> 97 [label="__CPAchecker_TMP_12 = 1;"]
88 -> 89 [label="[(x + y) <= 999999]"]
88 -> 90 [label="[!((x + y) <= 999999)]"]
89 -> 91 [label="__CPAchecker_TMP_11 = 1;"]
82 -> 83 [label="[((buf[i]) - i) <= 999900]"]
82 -> 84 [label="[!(((buf[i]) - i) <= 999900)]"]
83 -> 85 [label="__CPAchecker_TMP_10 = 1;"]
76 -> 77 [label="[((buf[i]) - n) <= 999899]"]
76 -> 78 [label="[!(((buf[i]) - n) <= 999899)]"]
77 -> 79 [label="__CPAchecker_TMP_9 = 1;"]
70 -> 71 [label="[((buf[i]) - y) <= 2147483647]"]
70 -> 72 [label="[!(((buf[i]) - y) <= 2147483647)]"]
71 -> 73 [label="__CPAchecker_TMP_8 = 1;"]
64 -> 65 [label="[(n - i) <= 999901]"]
64 -> 66 [label="[!((n - i) <= 999901)]"]
65 -> 67 [label="__CPAchecker_TMP_7 = 1;"]
58 -> 59 [label="[(y - i) <= -1]"]
58 -> 60 [label="[!((y - i) <= -1)]"]
59 -> 61 [label="__CPAchecker_TMP_6 = 1;"]
52 -> 53 [label="[(n - y) <= 2147483647]"]
52 -> 54 [label="[!((n - y) <= 2147483647)]"]
53 -> 55 [label="__CPAchecker_TMP_5 = 1;"]
37 -> 38 [label="[(x + n) <= 2147483647]"]
37 -> 39 [label="[!((x + n) <= 2147483647)]"]
38 -> 40 [label="__CPAchecker_TMP_2 = 1;"]
31 -> 32 [label="[(x + y) <= 999999]"]
31 -> 33 [label="[!((x + y) <= 999999)]"]
32 -> 34 [label="__CPAchecker_TMP_1 = 1;"]
25 -> 26 [label="[(n - y) <= 2147483647]"]
25 -> 27 [label="[!((n - y) <= 2147483647)]"]
26 -> 28 [label="__CPAchecker_TMP_0 = 1;"]
15 -> 134 [label="abort();"]}
112 -> 1 [label="__VERIFIER_assert((buf[999999]) == 999999)"]
0 -> 113 [label="Return edge from __VERIFIER_assert to main: __VERIFIER_assert((buf[999999]) == 999999);"]}