digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N8\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
25 [label="25 @ N46\nmain\n" id="25"]
26 [label="26 @ N12\nmain\n" id="26"]
28 [label="28 @ N15\nmain\n" id="28"]
30 [label="30 @ N13\nmain\n" id="30"]
32 [label="32 @ N18\nmain\n" id="32"]
178 [fillcolor="cornflowerblue" label="178 @ N19\nmain\nAbstractionState: ABS22\n" id="178"]
179 [label="179 @ N20\nmain\n" id="179"]
344 [label="344 @ N1\n__VERIFIER_assert entry\n" id="344"]
345 [label="345 @ N2\n__VERIFIER_assert\n" id="345"]
347 [label="347 @ N3\n__VERIFIER_assert\n" id="347"]
349 [label="349 @ N0\n__VERIFIER_assert exit\n" id="349"]
350 [label="350 @ N22\nmain\n" id="350"]
351 [label="351 @ N28\nmain\n" id="351"]
352 [label="352 @ N1\n__VERIFIER_assert entry\n" id="352"]
353 [label="353 @ N2\n__VERIFIER_assert\n" id="353"]
355 [label="355 @ N3\n__VERIFIER_assert\n" id="355"]
357 [label="357 @ N0\n__VERIFIER_assert exit\n" id="357"]
358 [label="358 @ N29\nmain\n" id="358"]
359 [label="359 @ N30\nmain\n" id="359"]
361 [fillcolor="cornflowerblue" label="361 @ N19\nmain\nAbstractionState: ABS41\n" id="361"]
363 [label="363 @ N21\nmain\n" id="363"]
364 [label="364 @ N31\nmain\n" id="364"]
366 [fillcolor="cornflowerblue" label="366 @ N32\nmain\nAbstractionState: ABS42\n" id="366"]
367 [label="367 @ N33\nmain\n" id="367"]
379 [label="379 @ N37\nmain\n" id="379"]
381 [label="381 @ N39\nmain\n" id="381"]
388 [label="388 @ N35\nmain\n" id="388"]
389 [label="389 @ N1\n__VERIFIER_assert entry\n" id="389"]
390 [label="390 @ N2\n__VERIFIER_assert\n" id="390"]
392 [label="392 @ N3\n__VERIFIER_assert\n" id="392"]
394 [label="394 @ N0\n__VERIFIER_assert exit\n" id="394"]
395 [label="395 @ N42\nmain\n" id="395"]
396 [label="396 @ N43\nmain\n" id="396"]
398 [fillcolor="cornflowerblue" label="398 @ N32\nmain\nAbstractionState: ABS45\n" id="398"]
400 [label="400 @ N34\nmain\n" id="400"]
401 [label="401 @ N44\nmain\n" id="401"]
402 [label="402 @ N1\n__VERIFIER_assert entry\n" id="402"]
403 [label="403 @ N2\n__VERIFIER_assert\n" id="403"]
404 [label="404 @ N4\n__VERIFIER_assert\n" id="404"]
407 [fillcolor="red" label="407 @ N5\n__VERIFIER_assert\nAbstractionState: ABS46\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="407"]
380 [label="380 @ N40\nmain\n" id="380"]
383 [label="383 @ N41\nmain\n" id="383"]
378 [label="378 @ N36\nmain\n" id="378"]
386 [label="386 @ N38\nmain\n" id="386"]
0 -> 25 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 25"]
25 -> 26 [color="red" label="Lines 7 - 88: \lvoid abort();\lvoid __VERIFIER_assert(int cond);\lint __VERIFIER_nondet_int();\lvoid __VERIFIER_assume(int);\lint main();\lFunction start dummy edge\lint x = 0;\lint n;\ln = __VERIFIER_nondet_int();\l" id="25 -> 26"]
26 -> 28 [color="red" label="Line 89: \l[!(n < 100)]\l" id="26 -> 28"]
26 -> 31 [label="Line 89: \l[n < 100]\l" id="26 -> 31"]
28 -> 30 [color="red" label="Line 89: \l[!(n > 1000000)]\l" id="28 -> 30"]
28 -> 31 [label="Line 89: \l[n > 1000000]\l" id="28 -> 31"]
30 -> 32 [color="red" label="Lines 91 - 92: \lint y = n;\lint runtime_div;\l" id="30 -> 32"]
32 -> 178 [color="red" label="Line 94: \lwhile\l" id="32 -> 178"]
178 -> 179 [color="red" label="Line 94: \l[(x + y) <= 999999]\l" id="178 -> 179"]
178 -> 180 [label="Line 94: \l[!((x + y) <= 999999)]\l" id="178 -> 180"]
179 -> 344 [color="red" label="Line 95: \l__VERIFIER_assert((x + 1) <= 2147483647)\l" id="179 -> 344"]
344 -> 345 [color="red" label="Line 0: \lFunction start dummy edge\l" id="344 -> 345"]
345 -> 346 [label="Line 9: \l[cond == 0]\l" id="345 -> 346"]
345 -> 347 [color="red" label="Line 9: \l[!(cond == 0)]\l" id="345 -> 347"]
347 -> 349 [color="red" label="Line 0: \ldefault return\l" id="347 -> 349"]
349 -> 350 [color="red" label="Line 95: \lReturn edge from __VERIFIER_assert to main: __VERIFIER_assert((x + 1) <= 2147483647);\l" id="349 -> 350"]
350 -> 351 [color="red" label="Lines 96 - 97: \lconst int __CPAchecker_TMP_0 = x;\lx = x + 1;\l__CPAchecker_TMP_0;\lconst int __CPAchecker_TMP_1 = y;\ly = y - 1;\l__CPAchecker_TMP_1;\l" id="350 -> 351"]
351 -> 352 [color="red" label="Line 98: \l__VERIFIER_assert((n - y) <= 2147483647)\l" id="351 -> 352"]
352 -> 353 [color="red" label="Line 0: \lFunction start dummy edge\l" id="352 -> 353"]
353 -> 354 [label="Line 9: \l[cond == 0]\l" id="353 -> 354"]
353 -> 355 [color="red" label="Line 9: \l[!(cond == 0)]\l" id="353 -> 355"]
355 -> 357 [color="red" label="Line 0: \ldefault return\l" id="355 -> 357"]
357 -> 358 [color="red" label="Line 98: \lReturn edge from __VERIFIER_assert to main: __VERIFIER_assert((n - y) <= 2147483647);\l" id="357 -> 358"]
358 -> 359 [color="red" label="Line 99: \lruntime_div = x / (n - y);\l" id="358 -> 359"]
359 -> 361 [color="red" label="Line 0: \l\l" id="359 -> 361"]
361 -> 362 [label="Line 94: \l[(x + y) <= 999999]\l" id="361 -> 362"]
361 -> 363 [color="red" label="Line 94: \l[!((x + y) <= 999999)]\l" id="361 -> 363"]
363 -> 364 [color="red" label="Line 102: \lint i = x + y;\l" id="363 -> 364"]
364 -> 366 [color="red" label="Line 103: \lwhile\l" id="364 -> 366"]
366 -> 367 [color="red" label="Line 103: \l[(x + y) > 0]\l" id="366 -> 367"]
366 -> 368 [label="Line 103: \l[!((x + y) > 0)]\l" id="366 -> 368"]
367 -> 378 [label="Line 105: \l[x > 0]\l" id="367 -> 378"]
367 -> 379 [color="red" label="Line 105: \l[!(x > 0)]\l" id="367 -> 379"]
379 -> 380 [label="Line 107: \l[y > 0]\l" id="379 -> 380"]
379 -> 381 [color="red" label="Line 107: \l[!(y > 0)]\l" id="379 -> 381"]
381 -> 388 [color="red" label="Line 0: \l\l" id="381 -> 388"]
388 -> 389 [color="red" label="Line 110: \l__VERIFIER_assert((i + 1) <= 2147483647)\l" id="388 -> 389"]
389 -> 390 [color="red" label="Line 0: \lFunction start dummy edge\l" id="389 -> 390"]
390 -> 391 [label="Line 9: \l[cond == 0]\l" id="390 -> 391"]
390 -> 392 [color="red" label="Line 9: \l[!(cond == 0)]\l" id="390 -> 392"]
392 -> 394 [color="red" label="Line 0: \ldefault return\l" id="392 -> 394"]
394 -> 395 [color="red" label="Line 110: \lReturn edge from __VERIFIER_assert to main: __VERIFIER_assert((i + 1) <= 2147483647);\l" id="394 -> 395"]
395 -> 396 [color="red" label="Line 111: \li = i + 1;\l" id="395 -> 396"]
396 -> 398 [color="red" label="Line 0: \l\l" id="396 -> 398"]
398 -> 399 [label="Line 103: \l[(x + y) > 0]\l" id="398 -> 399"]
398 -> 400 [color="red" label="Line 103: \l[!((x + y) > 0)]\l" id="398 -> 400"]
400 -> 401 [color="red" label="Line 113: \lLabel: __FRAMAC_OCTAGON8\l" id="400 -> 401"]
401 -> 402 [color="red" label="Line 119: \l__VERIFIER_assert((((2 * x) + y) + n) >= 100)\l" id="401 -> 402"]
402 -> 403 [color="red" label="Line 0: \lFunction start dummy edge\l" id="402 -> 403"]
403 -> 404 [color="red" label="Line 9: \l[cond == 0]\l" id="403 -> 404"]
403 -> 405 [label="Line 9: \l[!(cond == 0)]\l" id="403 -> 405"]
404 -> 407 [color="red" label="Line 10: \lLabel: ERROR\l" id="404 -> 407"]
380 -> 383 [label="Line 108: \ly = y - 1;\l" id="380 -> 383"]
383 -> 388 [label="Line 0: \l\l" id="383 -> 388"]
378 -> 386 [label="Line 106: \lx = x - 1;\l" id="378 -> 386"]
386 -> 388 [label="Line 0: \l\l" id="386 -> 388"]
}
