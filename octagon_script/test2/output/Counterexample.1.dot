digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N8\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
1 [label="1 @ N52\nmain\n" id="1"]
2 [label="2 @ N12\nmain\n" id="2"]
4 [label="4 @ N15\nmain\n" id="4"]
6 [label="6 @ N13\nmain\n" id="6"]
8 [label="8 @ N18\nmain\n" id="8"]
10 [fillcolor="cornflowerblue" label="10 @ N19\nmain\nAbstractionState: ABS1: true\n" id="10"]
12 [label="12 @ N21\nmain\n" id="12"]
13 [label="13 @ N31\nmain\n" id="13"]
15 [fillcolor="cornflowerblue" label="15 @ N32\nmain\nAbstractionState: ABS2: true\n" id="15"]
17 [label="17 @ N34\nmain\n" id="17"]
18 [label="18 @ N44\nmain\n" id="18"]
19 [label="19 @ N45\nmain\n" id="19"]
24 [label="24 @ N48\nmain\n" id="24"]
27 [label="27 @ N49\nmain\n" id="27"]
28 [label="28 @ N50\nmain\n" id="28"]
30 [label="30 @ N1\n__VERIFIER_assert entry\n" id="30"]
31 [label="31 @ N2\n__VERIFIER_assert\n" id="31"]
32 [label="32 @ N4\n__VERIFIER_assert\n" id="32"]
35 [fillcolor="red" label="35 @ N5\n__VERIFIER_assert\nAbstractionState: ABS3: true\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="35"]
20 [label="20 @ N46\nmain\n" id="20"]
22 [label="22 @ N47\nmain\n" id="22"]
0 -> 1 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 1"]
1 -> 2 [color="red" label="Lines 7 - 88: \lvoid abort();\lvoid __VERIFIER_assert(int cond);\lint __VERIFIER_nondet_int();\lvoid __VERIFIER_assume(int);\lint main();\lFunction start dummy edge\lint x = 0;\lint n;\ln = __VERIFIER_nondet_int();\l" id="1 -> 2"]
2 -> 4 [color="red" label="Line 89: \l[!(n < 100)]\l" id="2 -> 4"]
2 -> 7 [label="Line 89: \l[n < 100]\l" id="2 -> 7"]
4 -> 6 [color="red" label="Line 89: \l[!(n > 1000000)]\l" id="4 -> 6"]
4 -> 7 [label="Line 89: \l[n > 1000000]\l" id="4 -> 7"]
6 -> 8 [color="red" label="Lines 91 - 92: \lint y = n;\lint runtime_div;\l" id="6 -> 8"]
8 -> 10 [color="red" label="Line 94: \lwhile\l" id="8 -> 10"]
10 -> 11 [label="Line 94: \l[(x + y) <= 999999]\l" id="10 -> 11"]
10 -> 12 [color="red" label="Line 94: \l[!((x + y) <= 999999)]\l" id="10 -> 12"]
12 -> 13 [color="red" label="Line 102: \lint i = x + y;\l" id="12 -> 13"]
13 -> 15 [color="red" label="Line 103: \lwhile\l" id="13 -> 15"]
15 -> 16 [label="Line 103: \l[(x + y) > 0]\l" id="15 -> 16"]
15 -> 17 [color="red" label="Line 103: \l[!((x + y) > 0)]\l" id="15 -> 17"]
17 -> 18 [color="red" label="Line 113: \lLabel: __FRAMAC_OCTAGON8\l" id="17 -> 18"]
18 -> 19 [color="red" label="Line 116: \lint __CPAchecker_TMP_2;\l" id="18 -> 19"]
19 -> 20 [label="Line 116: \l[100 <= (x + n)]\l" id="19 -> 20"]
19 -> 24 [color="red" label="Line 116: \l[!(100 <= (x + n))]\l" id="19 -> 24"]
24 -> 27 [color="red" label="Line 0: \l__CPAchecker_TMP_2 = 0;\l" id="24 -> 27"]
27 -> 28 [color="red" label="Line 116: \l[__CPAchecker_TMP_2 != 0]\l" id="27 -> 28"]
27 -> 29 [label="Line 116: \l[!(__CPAchecker_TMP_2 != 0)]\l" id="27 -> 29"]
28 -> 30 [color="red" label="Line 119: \l__VERIFIER_assert((((2 * x) + y) + n) >= 100)\l" id="28 -> 30"]
30 -> 31 [color="red" label="Line 0: \lFunction start dummy edge\l" id="30 -> 31"]
31 -> 32 [color="red" label="Line 9: \l[cond == 0]\l" id="31 -> 32"]
31 -> 33 [label="Line 9: \l[!(cond == 0)]\l" id="31 -> 33"]
32 -> 35 [color="red" label="Line 10: \lLabel: ERROR\l" id="32 -> 35"]
20 -> 22 [label="Line 116: \l[(x + n) <= 2147483647]\l" id="20 -> 22"]
20 -> 24 [label="Line 116: \l[!((x + n) <= 2147483647)]\l" id="20 -> 24"]
22 -> 27 [label="Line 0: \l__CPAchecker_TMP_2 = 1;\l" id="22 -> 27"]
}
