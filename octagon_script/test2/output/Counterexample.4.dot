digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N8\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
36 [label="36 @ N52\nmain\n" id="36"]
37 [label="37 @ N12\nmain\n" id="37"]
39 [label="39 @ N15\nmain\n" id="39"]
41 [label="41 @ N13\nmain\n" id="41"]
43 [label="43 @ N18\nmain\n" id="43"]
142 [fillcolor="cornflowerblue" label="142 @ N19\nmain\nAbstractionState: ABS13\n" id="142"]
144 [label="144 @ N21\nmain\n" id="144"]
145 [label="145 @ N31\nmain\n" id="145"]
147 [fillcolor="cornflowerblue" label="147 @ N32\nmain\nAbstractionState: ABS14\n" id="147"]
148 [label="148 @ N33\nmain\n" id="148"]
171 [label="171 @ N37\nmain\n" id="171"]
173 [label="173 @ N39\nmain\n" id="173"]
180 [label="180 @ N35\nmain\n" id="180"]
181 [label="181 @ N1\n__VERIFIER_assert entry\n" id="181"]
182 [label="182 @ N2\n__VERIFIER_assert\n" id="182"]
184 [label="184 @ N3\n__VERIFIER_assert\n" id="184"]
186 [label="186 @ N0\n__VERIFIER_assert exit\n" id="186"]
187 [label="187 @ N42\nmain\n" id="187"]
188 [label="188 @ N43\nmain\n" id="188"]
190 [fillcolor="cornflowerblue" label="190 @ N32\nmain\nAbstractionState: ABS17\n" id="190"]
191 [label="191 @ N33\nmain\n" id="191"]
214 [label="214 @ N37\nmain\n" id="214"]
216 [label="216 @ N39\nmain\n" id="216"]
223 [label="223 @ N35\nmain\n" id="223"]
224 [label="224 @ N1\n__VERIFIER_assert entry\n" id="224"]
225 [label="225 @ N2\n__VERIFIER_assert\n" id="225"]
227 [label="227 @ N3\n__VERIFIER_assert\n" id="227"]
229 [label="229 @ N0\n__VERIFIER_assert exit\n" id="229"]
230 [label="230 @ N42\nmain\n" id="230"]
231 [label="231 @ N43\nmain\n" id="231"]
233 [fillcolor="cornflowerblue" label="233 @ N32\nmain\nAbstractionState: ABS20\n" id="233"]
235 [label="235 @ N34\nmain\n" id="235"]
236 [label="236 @ N44\nmain\n" id="236"]
237 [label="237 @ N45\nmain\n" id="237"]
242 [label="242 @ N48\nmain\n" id="242"]
245 [label="245 @ N49\nmain\n" id="245"]
246 [label="246 @ N50\nmain\n" id="246"]
248 [label="248 @ N1\n__VERIFIER_assert entry\n" id="248"]
249 [label="249 @ N2\n__VERIFIER_assert\n" id="249"]
250 [label="250 @ N4\n__VERIFIER_assert\n" id="250"]
253 [fillcolor="red" label="253 @ N5\n__VERIFIER_assert\nAbstractionState: ABS21\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="253"]
238 [label="238 @ N46\nmain\n" id="238"]
240 [label="240 @ N47\nmain\n" id="240"]
215 [label="215 @ N40\nmain\n" id="215"]
218 [label="218 @ N41\nmain\n" id="218"]
213 [label="213 @ N36\nmain\n" id="213"]
221 [label="221 @ N38\nmain\n" id="221"]
172 [label="172 @ N40\nmain\n" id="172"]
175 [label="175 @ N41\nmain\n" id="175"]
170 [label="170 @ N36\nmain\n" id="170"]
178 [label="178 @ N38\nmain\n" id="178"]
0 -> 36 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 36"]
36 -> 37 [color="red" label="Lines 7 - 88: \lvoid abort();\lvoid __VERIFIER_assert(int cond);\lint __VERIFIER_nondet_int();\lvoid __VERIFIER_assume(int);\lint main();\lFunction start dummy edge\lint x = 0;\lint n;\ln = __VERIFIER_nondet_int();\l" id="36 -> 37"]
37 -> 39 [color="red" label="Line 89: \l[!(n < 100)]\l" id="37 -> 39"]
37 -> 42 [label="Line 89: \l[n < 100]\l" id="37 -> 42"]
39 -> 41 [color="red" label="Line 89: \l[!(n > 1000000)]\l" id="39 -> 41"]
39 -> 42 [label="Line 89: \l[n > 1000000]\l" id="39 -> 42"]
41 -> 43 [color="red" label="Lines 91 - 92: \lint y = n;\lint runtime_div;\l" id="41 -> 43"]
43 -> 142 [color="red" label="Line 94: \lwhile\l" id="43 -> 142"]
142 -> 143 [label="Line 94: \l[(x + y) <= 999999]\l" id="142 -> 143"]
142 -> 144 [color="red" label="Line 94: \l[!((x + y) <= 999999)]\l" id="142 -> 144"]
144 -> 145 [color="red" label="Line 102: \lint i = x + y;\l" id="144 -> 145"]
145 -> 147 [color="red" label="Line 103: \lwhile\l" id="145 -> 147"]
147 -> 148 [color="red" label="Line 103: \l[(x + y) > 0]\l" id="147 -> 148"]
147 -> 149 [label="Line 103: \l[!((x + y) > 0)]\l" id="147 -> 149"]
148 -> 170 [label="Line 105: \l[x > 0]\l" id="148 -> 170"]
148 -> 171 [color="red" label="Line 105: \l[!(x > 0)]\l" id="148 -> 171"]
171 -> 172 [label="Line 107: \l[y > 0]\l" id="171 -> 172"]
171 -> 173 [color="red" label="Line 107: \l[!(y > 0)]\l" id="171 -> 173"]
173 -> 180 [color="red" label="Line 0: \l\l" id="173 -> 180"]
180 -> 181 [color="red" label="Line 110: \l__VERIFIER_assert((i + 1) <= 2147483647)\l" id="180 -> 181"]
181 -> 182 [color="red" label="Line 0: \lFunction start dummy edge\l" id="181 -> 182"]
182 -> 183 [label="Line 9: \l[cond == 0]\l" id="182 -> 183"]
182 -> 184 [color="red" label="Line 9: \l[!(cond == 0)]\l" id="182 -> 184"]
184 -> 186 [color="red" label="Line 0: \ldefault return\l" id="184 -> 186"]
186 -> 187 [color="red" label="Line 110: \lReturn edge from __VERIFIER_assert to main: __VERIFIER_assert((i + 1) <= 2147483647);\l" id="186 -> 187"]
187 -> 188 [color="red" label="Line 111: \li = i + 1;\l" id="187 -> 188"]
188 -> 190 [color="red" label="Line 0: \l\l" id="188 -> 190"]
190 -> 191 [color="red" label="Line 103: \l[(x + y) > 0]\l" id="190 -> 191"]
190 -> 192 [label="Line 103: \l[!((x + y) > 0)]\l" id="190 -> 192"]
191 -> 213 [label="Line 105: \l[x > 0]\l" id="191 -> 213"]
191 -> 214 [color="red" label="Line 105: \l[!(x > 0)]\l" id="191 -> 214"]
214 -> 215 [label="Line 107: \l[y > 0]\l" id="214 -> 215"]
214 -> 216 [color="red" label="Line 107: \l[!(y > 0)]\l" id="214 -> 216"]
216 -> 223 [color="red" label="Line 0: \l\l" id="216 -> 223"]
223 -> 224 [color="red" label="Line 110: \l__VERIFIER_assert((i + 1) <= 2147483647)\l" id="223 -> 224"]
224 -> 225 [color="red" label="Line 0: \lFunction start dummy edge\l" id="224 -> 225"]
225 -> 226 [label="Line 9: \l[cond == 0]\l" id="225 -> 226"]
225 -> 227 [color="red" label="Line 9: \l[!(cond == 0)]\l" id="225 -> 227"]
227 -> 229 [color="red" label="Line 0: \ldefault return\l" id="227 -> 229"]
229 -> 230 [color="red" label="Line 110: \lReturn edge from __VERIFIER_assert to main: __VERIFIER_assert((i + 1) <= 2147483647);\l" id="229 -> 230"]
230 -> 231 [color="red" label="Line 111: \li = i + 1;\l" id="230 -> 231"]
231 -> 233 [color="red" label="Line 0: \l\l" id="231 -> 233"]
233 -> 234 [label="Line 103: \l[(x + y) > 0]\l" id="233 -> 234"]
233 -> 235 [color="red" label="Line 103: \l[!((x + y) > 0)]\l" id="233 -> 235"]
235 -> 236 [color="red" label="Line 113: \lLabel: __FRAMAC_OCTAGON8\l" id="235 -> 236"]
236 -> 237 [color="red" label="Line 116: \lint __CPAchecker_TMP_2;\l" id="236 -> 237"]
237 -> 238 [label="Line 116: \l[100 <= (x + n)]\l" id="237 -> 238"]
237 -> 242 [color="red" label="Line 116: \l[!(100 <= (x + n))]\l" id="237 -> 242"]
242 -> 245 [color="red" label="Line 0: \l__CPAchecker_TMP_2 = 0;\l" id="242 -> 245"]
245 -> 246 [color="red" label="Line 116: \l[__CPAchecker_TMP_2 != 0]\l" id="245 -> 246"]
245 -> 247 [label="Line 116: \l[!(__CPAchecker_TMP_2 != 0)]\l" id="245 -> 247"]
246 -> 248 [color="red" label="Line 119: \l__VERIFIER_assert((((2 * x) + y) + n) >= 100)\l" id="246 -> 248"]
248 -> 249 [color="red" label="Line 0: \lFunction start dummy edge\l" id="248 -> 249"]
249 -> 250 [color="red" label="Line 9: \l[cond == 0]\l" id="249 -> 250"]
249 -> 251 [label="Line 9: \l[!(cond == 0)]\l" id="249 -> 251"]
250 -> 253 [color="red" label="Line 10: \lLabel: ERROR\l" id="250 -> 253"]
238 -> 240 [label="Line 116: \l[(x + n) <= 2147483647]\l" id="238 -> 240"]
238 -> 242 [label="Line 116: \l[!((x + n) <= 2147483647)]\l" id="238 -> 242"]
240 -> 245 [label="Line 0: \l__CPAchecker_TMP_2 = 1;\l" id="240 -> 245"]
215 -> 218 [label="Line 108: \ly = y - 1;\l" id="215 -> 218"]
218 -> 223 [label="Line 0: \l\l" id="218 -> 223"]
213 -> 221 [label="Line 106: \lx = x - 1;\l" id="213 -> 221"]
221 -> 223 [label="Line 0: \l\l" id="221 -> 223"]
172 -> 175 [label="Line 108: \ly = y - 1;\l" id="172 -> 175"]
175 -> 180 [label="Line 0: \l\l" id="175 -> 180"]
170 -> 178 [label="Line 106: \lx = x - 1;\l" id="170 -> 178"]
178 -> 180 [label="Line 0: \l\l" id="178 -> 180"]
}
