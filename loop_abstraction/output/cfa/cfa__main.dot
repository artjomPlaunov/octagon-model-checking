digraph main {
20 [shape="circle" label="N20\n32"]
42 [shape="circle" label="N42\n31"]
26 [shape="diamond" label="N26\n16"]
28 [shape="circle" label="N28\n15"]
27 [shape="circle" label="N27\n2"]
41 [shape="circle" label="N41\n1"]
29 [shape="diamond" label="N29\n14"]
34 [shape="diamond" label="N34\n13"]
32 [shape="circle" label="N32\n10"]
35 [shape="diamond" label="N35\n8"]
36 [shape="circle" label="N36\n7"]
54 [shape="circle" label="N54\n0"]
39 [shape="diamond" label="N39\n4"]
40 [shape="circle" label="N40\n3"]
55 [shape="circle" label="N55\n0"]
33 [shape="diamond" label="N33\n12"]
30 [shape="diamond" label="N30\n11"]
31 [shape="circle" label="N31\n9"]
19 [shape="circle" label="N19\n0"]
42 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">42</td><td align="left">void abort();</td></tr><tr><td align="right">43</td><td align="left">void __assert_fail(const char *, const char *, unsigned int, const char *);</td></tr><tr><td align="right">44</td><td align="left">void reach_error();</td></tr><tr><td align="right">45</td><td align="left">void assume_abort_if_not(int cond);</td></tr><tr><td align="right">46</td><td align="left">void __VERIFIER_assert(int cond);</td></tr><tr><td align="right">47</td><td align="left">void __VERIFIER_assume(int);</td></tr><tr><td align="right">48</td><td align="left">int __VERIFIER_nondet_int();</td></tr><tr><td align="right">49</td><td align="left">unsigned int __VERIFIER_nondet_uint();</td></tr><tr><td align="right">50</td><td align="left">int main();</td></tr><tr><td align="right">51</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">21</td><td align="left">int A[2048] = &#123; 0 &#125;;</td></tr><tr><td align="right">22</td><td align="left">int B[2048] = &#123; 0 &#125;;</td></tr><tr><td align="right">23</td><td align="left">int i;</td></tr><tr><td align="right">24</td><td align="left">int tmp;</td></tr><tr><td align="right">25</td><td align="left">i = 0;</td></tr></table>>]
42 -> 26[label=""]
36 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">36</td><td align="left">tmp = A[i];</td></tr><tr><td align="right">37</td><td align="left">B[i] = tmp;</td></tr><tr><td align="right">38</td><td align="left">i = i + 1;</td></tr></table>>]
36 -> 39[label=""]
20 -> 42 [label="INIT GLOBAL VARS" fontname="Courier New"]
26 -> 28 [label="[i < 2048]" fontname="Courier New"]
26 -> 27 [label="[!(i < 2048)]" fontname="Courier New"]
100001 [shape="component" label="__VERIFIER_assert"]
27 -> 100001 [label="__VERIFIER_assert((A[1024]) == (B[1024]));" fontname="Courier New"]
100001 -> 41 [label="" fontname="Courier New"]
28 -> 29 [label="int __CPAchecker_TMP_0;" fontname="Courier New"]
29 -> 34 [label="[i >= 0]" fontname="Courier New"]
29 -> 32 [label="[!(i >= 0)]" fontname="Courier New"]
32 -> 35 [label="__CPAchecker_TMP_0 = 0;" fontname="Courier New"]
35 -> 36 [label="[__CPAchecker_TMP_0 != 0]" fontname="Courier New"]
35 -> 54 [label="[!(__CPAchecker_TMP_0 != 0)]" fontname="Courier New"]
39 -> 40 [label="[i >= 2048]" fontname="Courier New"]
39 -> 55 [label="[!(i >= 2048)]" fontname="Courier New"]
34 -> 33 [label="[i < 2048]" fontname="Courier New"]
34 -> 32 [label="[!(i < 2048)]" fontname="Courier New"]
33 -> 30 [label="[(A[i]) == 0]" fontname="Courier New"]
33 -> 32 [label="[!((A[i]) == 0)]" fontname="Courier New"]
30 -> 31 [label="[(B[i]) == 0]" fontname="Courier New"]
30 -> 32 [label="[!((B[i]) == 0)]" fontname="Courier New"]
41 -> 19 [label="default return" fontname="Courier New"]
40 -> 27 [label="" fontname="Courier New"]
31 -> 35 [label="__CPAchecker_TMP_0 = 1;" fontname="Courier New"]
}