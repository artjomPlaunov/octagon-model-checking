digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N141\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
187 [label="187 @ N186\nmain\n" id="187"]
188 [label="188 @ N145\nmain\n" id="188"]
193 [label="193 @ N147\nmain\n" id="193"]
196 [label="196 @ N149\nmain\n" id="196"]
197 [label="197 @ N150\nmain\n" id="197"]
199 [label="199 @ N156\nmain\n" id="199"]
204 [label="204 @ N159\nmain\n" id="204"]
207 [label="207 @ N160\nmain\n" id="207"]
208 [label="208 @ N161\nmain\n" id="208"]
210 [label="210 @ N164\nmain\n" id="210"]
670 [fillcolor="cornflowerblue" label="670 @ N165\nmain\nAbstractionState: ABS22\n" id="670"]
671 [label="671 @ N166\nmain\n" id="671"]
709 [label="709 @ N169\nmain\n" id="709"]
711 [label="711 @ N171\nmain\n" id="711"]
712 [label="712 @ N173\nmain\n" id="712"]
716 [label="716 @ N170\nmain\n" id="716"]
717 [label="717 @ N175\nmain\n" id="717"]
719 [fillcolor="cornflowerblue" label="719 @ N165\nmain\nAbstractionState: ABS24\n" id="719"]
721 [label="721 @ N167\nmain\n" id="721"]
722 [label="722 @ N177\nmain\n" id="722"]
723 [label="723 @ N20\nmp_add entry\n" id="723"]
724 [label="724 @ N48\nmp_add\n" id="724"]
739 [label="739 @ N49\nmp_add\n" id="739"]
740 [label="740 @ N58\nmp_add\n" id="740"]
755 [label="755 @ N59\nmp_add\n" id="755"]
756 [label="756 @ N69\nmp_add\n" id="756"]
758 [fillcolor="cornflowerblue" label="758 @ N70\nmp_add\nAbstractionState: ABS25\n" id="758"]
766 [label="766 @ N71\nmp_add\n" id="766"]
768 [label="768 @ N76\nmp_add\n" id="768"]
792 [label="792 @ N77\nmp_add\n" id="792"]
816 [label="816 @ N91\nmp_add\n" id="816"]
821 [label="821 @ N105\nmp_add\n" id="821"]
826 [label="826 @ N109\nmp_add\n" id="826"]
831 [label="831 @ N112\nmp_add\n" id="831"]
836 [label="836 @ N115\nmp_add\n" id="836"]
841 [label="841 @ N118\nmp_add\n" id="841"]
842 [label="842 @ N121\nmp_add\n" id="842"]
844 [fillcolor="cornflowerblue" label="844 @ N70\nmp_add\nAbstractionState: ABS27\n" id="844"]
846 [label="846 @ N74\nmp_add\n" id="846"]
848 [label="848 @ N73\nmp_add\n" id="848"]
851 [label="851 @ N72\nmp_add\n" id="851"]
854 [fillcolor="cornflowerblue" label="854 @ N122\nmp_add\nAbstractionState: ABS28: true\n" id="854"]
856 [label="856 @ N124\nmp_add\n" id="856"]
857 [label="857 @ N138\nmp_add\n" id="857"]
858 [label="858 @ N19\nmp_add exit\n" id="858"]
859 [label="859 @ N178\nmain\n" id="859"]
1047 [label="1047 @ N11\n__VERIFIER_assert entry\n" id="1047"]
1048 [label="1048 @ N12\n__VERIFIER_assert\n" id="1048"]
1049 [label="1049 @ N14\n__VERIFIER_assert\n" id="1049"]
1052 [fillcolor="red" label="1052 @ N15\n__VERIFIER_assert\nAbstractionState: ABS33\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="1052"]
837 [label="837 @ N119\nmp_add\n" id="837"]
839 [label="839 @ N120\nmp_add\n" id="839"]
832 [label="832 @ N116\nmp_add\n" id="832"]
834 [label="834 @ N117\nmp_add\n" id="834"]
827 [label="827 @ N113\nmp_add\n" id="827"]
829 [label="829 @ N114\nmp_add\n" id="829"]
822 [label="822 @ N110\nmp_add\n" id="822"]
824 [label="824 @ N111\nmp_add\n" id="824"]
817 [label="817 @ N106\nmp_add\n" id="817"]
819 [label="819 @ N108\nmp_add\n" id="819"]
793 [label="793 @ N92\nmp_add\n" id="793"]
799 [label="799 @ N93\nmp_add\n" id="799"]
804 [label="804 @ N96\nmp_add\n" id="804"]
809 [label="809 @ N99\nmp_add\n" id="809"]
811 [label="811 @ N102\nmp_add\n" id="811"]
810 [label="810 @ N103\nmp_add\n" id="810"]
814 [label="814 @ N104\nmp_add\n" id="814"]
805 [label="805 @ N100\nmp_add\n" id="805"]
807 [label="807 @ N101\nmp_add\n" id="807"]
800 [label="800 @ N97\nmp_add\n" id="800"]
802 [label="802 @ N98\nmp_add\n" id="802"]
795 [label="795 @ N94\nmp_add\n" id="795"]
797 [label="797 @ N95\nmp_add\n" id="797"]
769 [label="769 @ N78\nmp_add\n" id="769"]
775 [label="775 @ N79\nmp_add\n" id="775"]
780 [label="780 @ N82\nmp_add\n" id="780"]
785 [label="785 @ N85\nmp_add\n" id="785"]
787 [label="787 @ N88\nmp_add\n" id="787"]
786 [label="786 @ N89\nmp_add\n" id="786"]
790 [label="790 @ N90\nmp_add\n" id="790"]
781 [label="781 @ N86\nmp_add\n" id="781"]
783 [label="783 @ N87\nmp_add\n" id="783"]
776 [label="776 @ N83\nmp_add\n" id="776"]
778 [label="778 @ N84\nmp_add\n" id="778"]
771 [label="771 @ N80\nmp_add\n" id="771"]
773 [label="773 @ N81\nmp_add\n" id="773"]
760 [label="760 @ N74\nmp_add\n" id="760"]
762 [label="762 @ N73\nmp_add\n" id="762"]
741 [label="741 @ N60\nmp_add\n" id="741"]
743 [label="743 @ N61\nmp_add\n" id="743"]
745 [label="745 @ N62\nmp_add\n" id="745"]
744 [label="744 @ N63\nmp_add\n" id="744"]
748 [label="748 @ N64\nmp_add\n" id="748"]
750 [label="750 @ N65\nmp_add\n" id="750"]
749 [label="749 @ N66\nmp_add\n" id="749"]
753 [label="753 @ N67\nmp_add\n" id="753"]
725 [label="725 @ N50\nmp_add\n" id="725"]
727 [label="727 @ N51\nmp_add\n" id="727"]
729 [label="729 @ N52\nmp_add\n" id="729"]
728 [label="728 @ N53\nmp_add\n" id="728"]
732 [label="732 @ N54\nmp_add\n" id="732"]
734 [label="734 @ N55\nmp_add\n" id="734"]
733 [label="733 @ N56\nmp_add\n" id="733"]
737 [label="737 @ N57\nmp_add\n" id="737"]
710 [label="710 @ N172\nmain\n" id="710"]
714 [label="714 @ N174\nmain\n" id="714"]
200 [label="200 @ N157\nmain\n" id="200"]
202 [label="202 @ N158\nmain\n" id="202"]
190 [label="190 @ N146\nmain\n" id="190"]
192 [label="192 @ N148\nmain\n" id="192"]
0 -> 187 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 187"]
187 -> 188 [color="red" label="Lines 7 - 108: \lvoid abort();\lvoid __assert_fail(const char *, const char *, unsigned int, const char *);\lvoid reach_error();\lvoid assume_abort_if_not(int cond);\lvoid __VERIFIER_assert(int cond);\lvoid __VERIFIER_assume(int);\lint __VERIFIER_nondet_int();\lunsigned int __VERIFIER_nondet_uint();\lunsigned int mp_add(unsigned int a, unsigned int b);\lint main();\lFunction start dummy edge\lint flag;\lflag = __VERIFIER_nondet_int();\lint __CPAchecker_TMP_0;\l" id="187 -> 188"]
188 -> 190 [color="red" label="Line 108: \l[!(flag == 0)]\l" id="188 -> 190"]
188 -> 193 [label="Line 108: \l[flag == 0]\l" id="188 -> 193"]
193 -> 196 [label="Line 0: \l__CPAchecker_TMP_0 = 1;\l" id="193 -> 196"]
196 -> 197 [color="red" label="Line 108: \l[__CPAchecker_TMP_0 != 0]\l" id="196 -> 197"]
196 -> 198 [label="Line 108: \l[!(__CPAchecker_TMP_0 != 0)]\l" id="196 -> 198"]
197 -> 199 [color="red" label="Lines 109 - 113: \lint i = 0;\lint x = 0;\lint y = 0;\lint n;\ln = __VERIFIER_nondet_int();\lint __CPAchecker_TMP_1;\l" id="197 -> 199"]
199 -> 200 [label="Line 113: \l[n >= 1000]\l" id="199 -> 200"]
199 -> 204 [color="red" label="Line 113: \l[!(n >= 1000)]\l" id="199 -> 204"]
204 -> 207 [color="red" label="Line 0: \l__CPAchecker_TMP_1 = 0;\l" id="204 -> 207"]
207 -> 208 [color="red" label="Line 113: \l[__CPAchecker_TMP_1 != 0]\l" id="207 -> 208"]
207 -> 209 [label="Line 113: \l[!(__CPAchecker_TMP_1 != 0)]\l" id="207 -> 209"]
208 -> 210 [color="red" label="Lines 115 - 115: \lunsigned int a;\lunsigned int b;\lunsigned int r;\l" id="208 -> 210"]
210 -> 670 [color="red" label="Line 117: \lwhile\l" id="210 -> 670"]
670 -> 671 [color="red" label="Line 117: \l[i < n]\l" id="670 -> 671"]
670 -> 672 [label="Line 117: \l[!(i < n)]\l" id="670 -> 672"]
671 -> 709 [color="red" label="Lines 120 - 121: \lx = x;\ly = y;\l" id="671 -> 709"]
709 -> 710 [label="Line 122: \l[flag == 0]\l" id="709 -> 710"]
709 -> 711 [color="red" label="Line 122: \l[!(flag == 0)]\l" id="709 -> 711"]
711 -> 712 [color="red" label="Line 123: \lx = x + 3;\l" id="711 -> 712"]
712 -> 716 [color="red" label="Line 0: \l\l" id="712 -> 716"]
716 -> 717 [color="red" label="Line 127: \li = i + 1;\l" id="716 -> 717"]
717 -> 719 [color="red" label="Line 0: \l\l" id="717 -> 719"]
719 -> 720 [label="Line 117: \l[i < n]\l" id="719 -> 720"]
719 -> 721 [color="red" label="Line 117: \l[!(i < n)]\l" id="719 -> 721"]
721 -> 722 [color="red" label="Lines 130 - 131: \la = __VERIFIER_nondet_uint();\lb = 234770789;\l" id="721 -> 722"]
722 -> 723 [color="red" label="Line 132: \lmp_add(a, b)\l" id="722 -> 723"]
723 -> 724 [color="red" label="Lines 0 - 43: \lFunction start dummy edge\lunsigned char a0;\lunsigned char a1;\lunsigned char a2;\lunsigned char a3;\lunsigned char b0;\lunsigned char b1;\lunsigned char b2;\lunsigned char b3;\lunsigned char r0;\lunsigned char r1;\lunsigned char r2;\lunsigned char r3;\lunsigned short carry;\lunsigned short partial_sum;\lunsigned int r;\lunsigned char i;\lunsigned char na;\lunsigned char nb;\la0 = a;\la1 = a >> 8;\la2 = a >> 16U;\la3 = a >> 24U;\lb0 = b;\lb1 = b >> 8U;\lb2 = b >> 16U;\lb3 = b >> 24U;\lna = 4U;\l" id="723 -> 724"]
724 -> 725 [label="Line 44: \l[a3 == 0U]\l" id="724 -> 725"]
724 -> 739 [color="red" label="Line 44: \l[!(a3 == 0U)]\l" id="724 -> 739"]
739 -> 740 [color="red" label="Line 53: \lnb = 4U;\l" id="739 -> 740"]
740 -> 741 [label="Line 54: \l[b3 == 0U]\l" id="740 -> 741"]
740 -> 755 [color="red" label="Line 54: \l[!(b3 == 0U)]\l" id="740 -> 755"]
755 -> 756 [color="red" label="Lines 63 - 64: \lcarry = 0U;\li = 0U;\l" id="755 -> 756"]
756 -> 758 [color="red" label="Line 65: \lwhile\l" id="756 -> 758"]
758 -> 760 [label="Line 65: \l[!(i < na)]\l" id="758 -> 760"]
758 -> 766 [color="red" label="Line 65: \l[i < na]\l" id="758 -> 766"]
766 -> 768 [color="red" label="Lines 66 - 67: \lpartial_sum = carry;\lcarry = 0U;\l" id="766 -> 768"]
768 -> 769 [label="Line 68: \l[i < na]\l" id="768 -> 769"]
768 -> 792 [color="red" label="Line 68: \l[!(i < na)]\l" id="768 -> 792"]
792 -> 793 [label="Line 74: \l[i < nb]\l" id="792 -> 793"]
792 -> 816 [color="red" label="Line 74: \l[!(i < nb)]\l" id="792 -> 816"]
816 -> 817 [label="Line 80: \l[partial_sum > 255U]\l" id="816 -> 817"]
816 -> 821 [color="red" label="Line 80: \l[!(partial_sum > 255U)]\l" id="816 -> 821"]
821 -> 822 [label="Line 84: \l[i == 0U]\l" id="821 -> 822"]
821 -> 826 [color="red" label="Line 84: \l[!(i == 0U)]\l" id="821 -> 826"]
826 -> 827 [label="Line 85: \l[i == 1U]\l" id="826 -> 827"]
826 -> 831 [color="red" label="Line 85: \l[!(i == 1U)]\l" id="826 -> 831"]
831 -> 832 [label="Line 86: \l[i == 2U]\l" id="831 -> 832"]
831 -> 836 [color="red" label="Line 86: \l[!(i == 2U)]\l" id="831 -> 836"]
836 -> 837 [label="Line 87: \l[i == 3U]\l" id="836 -> 837"]
836 -> 841 [color="red" label="Line 87: \l[!(i == 3U)]\l" id="836 -> 841"]
841 -> 842 [color="red" label="Line 89: \li = i + 1U;\l" id="841 -> 842"]
842 -> 844 [color="red" label="Line 0: \l\l" id="842 -> 844"]
844 -> 846 [color="red" label="Line 65: \l[!(i < na)]\l" id="844 -> 846"]
844 -> 852 [label="Line 65: \l[i < na]\l" id="844 -> 852"]
846 -> 848 [color="red" label="Line 65: \l[!(i < nb)]\l" id="846 -> 848"]
846 -> 852 [label="Line 65: \l[i < nb]\l" id="846 -> 852"]
848 -> 851 [color="red" label="Line 65: \l[!(carry != 0U)]\l" id="848 -> 851"]
848 -> 852 [label="Line 65: \l[carry != 0U]\l" id="848 -> 852"]
851 -> 854 [color="red" label="Line 92: \lwhile\l" id="851 -> 854"]
854 -> 855 [label="Line 92: \l[i < 4U]\l" id="854 -> 855"]
854 -> 856 [color="red" label="Line 92: \l[!(i < 4U)]\l" id="854 -> 856"]
856 -> 857 [color="red" label="Line 101: \lr = ((r0 | (r1 << 8U)) | (r2 << 16U)) | (((unsigned int)r3) << 24U);\l" id="856 -> 857"]
857 -> 858 [color="red" label="Line 103: \lreturn r;\l" id="857 -> 858"]
858 -> 859 [color="red" label="Line 132: \lReturn edge from mp_add to main: r = mp_add(a, b);\l" id="858 -> 859"]
859 -> 1047 [color="red" label="Line 134: \l__VERIFIER_assert(r == (a + b))\l" id="859 -> 1047"]
1047 -> 1048 [color="red" label="Line 0: \lFunction start dummy edge\l" id="1047 -> 1048"]
1048 -> 1049 [color="red" label="Line 15: \l[cond == 0]\l" id="1048 -> 1049"]
1048 -> 1050 [label="Line 15: \l[!(cond == 0)]\l" id="1048 -> 1050"]
1049 -> 1052 [color="red" label="Line 16: \lLabel: ERROR\l" id="1049 -> 1052"]
837 -> 839 [label="Line 87: \lr3 = (unsigned char)partial_sum;\l" id="837 -> 839"]
839 -> 841 [label="Line 0: \l\l" id="839 -> 841"]
832 -> 834 [label="Line 86: \lr2 = (unsigned char)partial_sum;\l" id="832 -> 834"]
834 -> 836 [label="Line 0: \l\l" id="834 -> 836"]
827 -> 829 [label="Line 85: \lr1 = (unsigned char)partial_sum;\l" id="827 -> 829"]
829 -> 831 [label="Line 0: \l\l" id="829 -> 831"]
822 -> 824 [label="Line 84: \lr0 = (unsigned char)partial_sum;\l" id="822 -> 824"]
824 -> 826 [label="Line 0: \l\l" id="824 -> 826"]
817 -> 819 [label="Lines 81 - 82: \lpartial_sum = partial_sum & 255U;\lcarry = 1U;\l" id="817 -> 819"]
819 -> 821 [label="Line 0: \l\l" id="819 -> 821"]
793 -> 795 [label="Line 75: \l[i == 0U]\l" id="793 -> 795"]
793 -> 799 [label="Line 75: \l[!(i == 0U)]\l" id="793 -> 799"]
799 -> 800 [label="Line 76: \l[i == 1U]\l" id="799 -> 800"]
799 -> 804 [label="Line 76: \l[!(i == 1U)]\l" id="799 -> 804"]
804 -> 805 [label="Line 77: \l[i == 2U]\l" id="804 -> 805"]
804 -> 809 [label="Line 77: \l[!(i == 2U)]\l" id="804 -> 809"]
809 -> 810 [label="Line 78: \l[i == 3U]\l" id="809 -> 810"]
809 -> 811 [label="Line 78: \l[!(i == 3U)]\l" id="809 -> 811"]
811 -> 816 [label="Line 0: \l\l" id="811 -> 816"]
810 -> 814 [label="Line 78: \lpartial_sum = partial_sum + b3;\l" id="810 -> 814"]
814 -> 816 [label="Line 0: \l\l" id="814 -> 816"]
805 -> 807 [label="Line 77: \lpartial_sum = partial_sum + b2;\l" id="805 -> 807"]
807 -> 809 [label="Line 0: \l\l" id="807 -> 809"]
800 -> 802 [label="Line 76: \lpartial_sum = partial_sum + b1;\l" id="800 -> 802"]
802 -> 804 [label="Line 0: \l\l" id="802 -> 804"]
795 -> 797 [label="Line 75: \lpartial_sum = partial_sum + b0;\l" id="795 -> 797"]
797 -> 799 [label="Line 0: \l\l" id="797 -> 799"]
769 -> 771 [label="Line 69: \l[i == 0U]\l" id="769 -> 771"]
769 -> 775 [label="Line 69: \l[!(i == 0U)]\l" id="769 -> 775"]
775 -> 776 [label="Line 70: \l[i == 1U]\l" id="775 -> 776"]
775 -> 780 [label="Line 70: \l[!(i == 1U)]\l" id="775 -> 780"]
780 -> 781 [label="Line 71: \l[i == 2U]\l" id="780 -> 781"]
780 -> 785 [label="Line 71: \l[!(i == 2U)]\l" id="780 -> 785"]
785 -> 786 [label="Line 72: \l[i == 3U]\l" id="785 -> 786"]
785 -> 787 [label="Line 72: \l[!(i == 3U)]\l" id="785 -> 787"]
787 -> 792 [label="Line 0: \l\l" id="787 -> 792"]
786 -> 790 [label="Line 72: \lpartial_sum = partial_sum + a3;\l" id="786 -> 790"]
790 -> 792 [label="Line 0: \l\l" id="790 -> 792"]
781 -> 783 [label="Line 71: \lpartial_sum = partial_sum + a2;\l" id="781 -> 783"]
783 -> 785 [label="Line 0: \l\l" id="783 -> 785"]
776 -> 778 [label="Line 70: \lpartial_sum = partial_sum + a1;\l" id="776 -> 778"]
778 -> 780 [label="Line 0: \l\l" id="778 -> 780"]
771 -> 773 [label="Line 69: \lpartial_sum = partial_sum + a0;\l" id="771 -> 773"]
773 -> 775 [label="Line 0: \l\l" id="773 -> 775"]
760 -> 762 [label="Line 65: \l[!(i < nb)]\l" id="760 -> 762"]
760 -> 766 [label="Line 65: \l[i < nb]\l" id="760 -> 766"]
762 -> 765 [label="Line 65: \l[!(carry != 0U)]\l" id="762 -> 765"]
762 -> 766 [label="Line 65: \l[carry != 0U]\l" id="762 -> 766"]
741 -> 743 [label="Line 55: \lnb = nb - 1;\l" id="741 -> 743"]
743 -> 744 [label="Line 56: \l[b2 == 0U]\l" id="743 -> 744"]
743 -> 745 [label="Line 56: \l[!(b2 == 0U)]\l" id="743 -> 745"]
745 -> 755 [label="Line 0: \l\l" id="745 -> 755"]
744 -> 748 [label="Line 57: \lnb = nb - 1;\l" id="744 -> 748"]
748 -> 749 [label="Line 58: \l[b1 == 0U]\l" id="748 -> 749"]
748 -> 750 [label="Line 58: \l[!(b1 == 0U)]\l" id="748 -> 750"]
750 -> 755 [label="Line 0: \l\l" id="750 -> 755"]
749 -> 753 [label="Line 59: \lnb = nb - 1;\l" id="749 -> 753"]
753 -> 755 [label="Line 0: \l\l" id="753 -> 755"]
725 -> 727 [label="Line 45: \lna = na - 1;\l" id="725 -> 727"]
727 -> 728 [label="Line 46: \l[a2 == 0U]\l" id="727 -> 728"]
727 -> 729 [label="Line 46: \l[!(a2 == 0U)]\l" id="727 -> 729"]
729 -> 739 [label="Line 0: \l\l" id="729 -> 739"]
728 -> 732 [label="Line 47: \lna = na - 1;\l" id="728 -> 732"]
732 -> 733 [label="Line 48: \l[a1 == 0U]\l" id="732 -> 733"]
732 -> 734 [label="Line 48: \l[!(a1 == 0U)]\l" id="732 -> 734"]
734 -> 739 [label="Line 0: \l\l" id="734 -> 739"]
733 -> 737 [label="Line 49: \lna = na - 1;\l" id="733 -> 737"]
737 -> 739 [label="Line 0: \l\l" id="737 -> 739"]
710 -> 714 [label="Line 125: \ly = y + 2;\l" id="710 -> 714"]
714 -> 716 [label="Line 0: \l\l" id="714 -> 716"]
200 -> 202 [label="Line 113: \l[n <= 1000000]\l" id="200 -> 202"]
200 -> 204 [label="Line 113: \l[!(n <= 1000000)]\l" id="200 -> 204"]
202 -> 207 [label="Line 0: \l__CPAchecker_TMP_1 = 1;\l" id="202 -> 207"]
190 -> 192 [color="red" label="Line 108: \l[!(flag == 1)]\l" id="190 -> 192"]
190 -> 193 [label="Line 108: \l[flag == 1]\l" id="190 -> 193"]
192 -> 196 [color="red" label="Line 0: \l__CPAchecker_TMP_0 = 0;\l" id="192 -> 196"]
}
