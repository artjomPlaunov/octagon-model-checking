digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N141\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
187 [label="187 @ N186\nmain\n" id="187"]
188 [label="188 @ N145\nmain\n" id="188"]
193 [label="193 @ N147\nmain\n" id="193"]
196 [label="196 @ N149\nmain\n" id="196"]
197 [label="197 @ N150\nmain\n" id="197"]
199 [label="199 @ N156\nmain\n" id="199"]
204 [label="204 @ N159\nmain\n" id="204"]
207 [label="207 @ N160\nmain\n" id="207"]
208 [label="208 @ N161\nmain\n" id="208"]
210 [label="210 @ N164\nmain\n" id="210"]
212 [fillcolor="cornflowerblue" label="212 @ N165\nmain\nAbstractionState: ABS7: true\n" id="212"]
214 [label="214 @ N167\nmain\n" id="214"]
215 [label="215 @ N177\nmain\n" id="215"]
216 [label="216 @ N20\nmp_add entry\n" id="216"]
217 [label="217 @ N48\nmp_add\n" id="217"]
232 [label="232 @ N49\nmp_add\n" id="232"]
233 [label="233 @ N58\nmp_add\n" id="233"]
248 [label="248 @ N59\nmp_add\n" id="248"]
249 [label="249 @ N69\nmp_add\n" id="249"]
374 [fillcolor="cornflowerblue" label="374 @ N70\nmp_add\nAbstractionState: ABS13\n" id="374"]
382 [label="382 @ N71\nmp_add\n" id="382"]
384 [label="384 @ N76\nmp_add\n" id="384"]
408 [label="408 @ N77\nmp_add\n" id="408"]
432 [label="432 @ N91\nmp_add\n" id="432"]
437 [label="437 @ N105\nmp_add\n" id="437"]
442 [label="442 @ N109\nmp_add\n" id="442"]
447 [label="447 @ N112\nmp_add\n" id="447"]
452 [label="452 @ N115\nmp_add\n" id="452"]
457 [label="457 @ N118\nmp_add\n" id="457"]
458 [label="458 @ N121\nmp_add\n" id="458"]
460 [fillcolor="cornflowerblue" label="460 @ N70\nmp_add\nAbstractionState: ABS15\n" id="460"]
462 [label="462 @ N74\nmp_add\n" id="462"]
464 [label="464 @ N73\nmp_add\n" id="464"]
467 [label="467 @ N72\nmp_add\n" id="467"]
470 [fillcolor="cornflowerblue" label="470 @ N122\nmp_add\nAbstractionState: ABS16: true\n" id="470"]
472 [label="472 @ N124\nmp_add\n" id="472"]
473 [label="473 @ N138\nmp_add\n" id="473"]
474 [label="474 @ N19\nmp_add exit\n" id="474"]
475 [label="475 @ N178\nmain\n" id="475"]
663 [label="663 @ N11\n__VERIFIER_assert entry\n" id="663"]
664 [label="664 @ N12\n__VERIFIER_assert\n" id="664"]
665 [label="665 @ N14\n__VERIFIER_assert\n" id="665"]
668 [fillcolor="red" label="668 @ N15\n__VERIFIER_assert\nAbstractionState: ABS21\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="668"]
453 [label="453 @ N119\nmp_add\n" id="453"]
455 [label="455 @ N120\nmp_add\n" id="455"]
448 [label="448 @ N116\nmp_add\n" id="448"]
450 [label="450 @ N117\nmp_add\n" id="450"]
443 [label="443 @ N113\nmp_add\n" id="443"]
445 [label="445 @ N114\nmp_add\n" id="445"]
438 [label="438 @ N110\nmp_add\n" id="438"]
440 [label="440 @ N111\nmp_add\n" id="440"]
433 [label="433 @ N106\nmp_add\n" id="433"]
435 [label="435 @ N108\nmp_add\n" id="435"]
409 [label="409 @ N92\nmp_add\n" id="409"]
415 [label="415 @ N93\nmp_add\n" id="415"]
420 [label="420 @ N96\nmp_add\n" id="420"]
425 [label="425 @ N99\nmp_add\n" id="425"]
427 [label="427 @ N102\nmp_add\n" id="427"]
426 [label="426 @ N103\nmp_add\n" id="426"]
430 [label="430 @ N104\nmp_add\n" id="430"]
421 [label="421 @ N100\nmp_add\n" id="421"]
423 [label="423 @ N101\nmp_add\n" id="423"]
416 [label="416 @ N97\nmp_add\n" id="416"]
418 [label="418 @ N98\nmp_add\n" id="418"]
411 [label="411 @ N94\nmp_add\n" id="411"]
413 [label="413 @ N95\nmp_add\n" id="413"]
385 [label="385 @ N78\nmp_add\n" id="385"]
391 [label="391 @ N79\nmp_add\n" id="391"]
396 [label="396 @ N82\nmp_add\n" id="396"]
401 [label="401 @ N85\nmp_add\n" id="401"]
403 [label="403 @ N88\nmp_add\n" id="403"]
402 [label="402 @ N89\nmp_add\n" id="402"]
406 [label="406 @ N90\nmp_add\n" id="406"]
397 [label="397 @ N86\nmp_add\n" id="397"]
399 [label="399 @ N87\nmp_add\n" id="399"]
392 [label="392 @ N83\nmp_add\n" id="392"]
394 [label="394 @ N84\nmp_add\n" id="394"]
387 [label="387 @ N80\nmp_add\n" id="387"]
389 [label="389 @ N81\nmp_add\n" id="389"]
376 [label="376 @ N74\nmp_add\n" id="376"]
378 [label="378 @ N73\nmp_add\n" id="378"]
234 [label="234 @ N60\nmp_add\n" id="234"]
236 [label="236 @ N61\nmp_add\n" id="236"]
238 [label="238 @ N62\nmp_add\n" id="238"]
237 [label="237 @ N63\nmp_add\n" id="237"]
241 [label="241 @ N64\nmp_add\n" id="241"]
243 [label="243 @ N65\nmp_add\n" id="243"]
242 [label="242 @ N66\nmp_add\n" id="242"]
246 [label="246 @ N67\nmp_add\n" id="246"]
218 [label="218 @ N50\nmp_add\n" id="218"]
220 [label="220 @ N51\nmp_add\n" id="220"]
222 [label="222 @ N52\nmp_add\n" id="222"]
221 [label="221 @ N53\nmp_add\n" id="221"]
225 [label="225 @ N54\nmp_add\n" id="225"]
227 [label="227 @ N55\nmp_add\n" id="227"]
226 [label="226 @ N56\nmp_add\n" id="226"]
230 [label="230 @ N57\nmp_add\n" id="230"]
200 [label="200 @ N157\nmain\n" id="200"]
202 [label="202 @ N158\nmain\n" id="202"]
190 [label="190 @ N146\nmain\n" id="190"]
192 [label="192 @ N148\nmain\n" id="192"]
0 -> 187 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 187"]
187 -> 188 [color="red" label="Lines 7 - 108: \lvoid abort();\lvoid __assert_fail(const char *, const char *, unsigned int, const char *);\lvoid reach_error();\lvoid assume_abort_if_not(int cond);\lvoid __VERIFIER_assert(int cond);\lvoid __VERIFIER_assume(int);\lint __VERIFIER_nondet_int();\lunsigned int __VERIFIER_nondet_uint();\lunsigned int mp_add(unsigned int a, unsigned int b);\lint main();\lFunction start dummy edge\lint flag;\lflag = __VERIFIER_nondet_int();\lint __CPAchecker_TMP_0;\l" id="187 -> 188"]
188 -> 190 [color="red" label="Line 108: \l[!(flag == 0)]\l" id="188 -> 190"]
188 -> 193 [label="Line 108: \l[flag == 0]\l" id="188 -> 193"]
193 -> 196 [label="Line 0: \l__CPAchecker_TMP_0 = 1;\l" id="193 -> 196"]
196 -> 197 [color="red" label="Line 108: \l[__CPAchecker_TMP_0 != 0]\l" id="196 -> 197"]
196 -> 198 [label="Line 108: \l[!(__CPAchecker_TMP_0 != 0)]\l" id="196 -> 198"]
197 -> 199 [color="red" label="Lines 109 - 113: \lint i = 0;\lint x = 0;\lint y = 0;\lint n;\ln = __VERIFIER_nondet_int();\lint __CPAchecker_TMP_1;\l" id="197 -> 199"]
199 -> 200 [label="Line 113: \l[n >= 1000]\l" id="199 -> 200"]
199 -> 204 [color="red" label="Line 113: \l[!(n >= 1000)]\l" id="199 -> 204"]
204 -> 207 [color="red" label="Line 0: \l__CPAchecker_TMP_1 = 0;\l" id="204 -> 207"]
207 -> 208 [color="red" label="Line 113: \l[__CPAchecker_TMP_1 != 0]\l" id="207 -> 208"]
207 -> 209 [label="Line 113: \l[!(__CPAchecker_TMP_1 != 0)]\l" id="207 -> 209"]
208 -> 210 [color="red" label="Lines 115 - 115: \lunsigned int a;\lunsigned int b;\lunsigned int r;\l" id="208 -> 210"]
210 -> 212 [color="red" label="Line 117: \lwhile\l" id="210 -> 212"]
212 -> 213 [label="Line 117: \l[i < n]\l" id="212 -> 213"]
212 -> 214 [color="red" label="Line 117: \l[!(i < n)]\l" id="212 -> 214"]
214 -> 215 [color="red" label="Lines 130 - 131: \la = __VERIFIER_nondet_uint();\lb = 234770789;\l" id="214 -> 215"]
215 -> 216 [color="red" label="Line 132: \lmp_add(a, b)\l" id="215 -> 216"]
216 -> 217 [color="red" label="Lines 0 - 43: \lFunction start dummy edge\lunsigned char a0;\lunsigned char a1;\lunsigned char a2;\lunsigned char a3;\lunsigned char b0;\lunsigned char b1;\lunsigned char b2;\lunsigned char b3;\lunsigned char r0;\lunsigned char r1;\lunsigned char r2;\lunsigned char r3;\lunsigned short carry;\lunsigned short partial_sum;\lunsigned int r;\lunsigned char i;\lunsigned char na;\lunsigned char nb;\la0 = a;\la1 = a >> 8;\la2 = a >> 16U;\la3 = a >> 24U;\lb0 = b;\lb1 = b >> 8U;\lb2 = b >> 16U;\lb3 = b >> 24U;\lna = 4U;\l" id="216 -> 217"]
217 -> 218 [label="Line 44: \l[a3 == 0U]\l" id="217 -> 218"]
217 -> 232 [color="red" label="Line 44: \l[!(a3 == 0U)]\l" id="217 -> 232"]
232 -> 233 [color="red" label="Line 53: \lnb = 4U;\l" id="232 -> 233"]
233 -> 234 [label="Line 54: \l[b3 == 0U]\l" id="233 -> 234"]
233 -> 248 [color="red" label="Line 54: \l[!(b3 == 0U)]\l" id="233 -> 248"]
248 -> 249 [color="red" label="Lines 63 - 64: \lcarry = 0U;\li = 0U;\l" id="248 -> 249"]
249 -> 374 [color="red" label="Line 65: \lwhile\l" id="249 -> 374"]
374 -> 376 [label="Line 65: \l[!(i < na)]\l" id="374 -> 376"]
374 -> 382 [color="red" label="Line 65: \l[i < na]\l" id="374 -> 382"]
382 -> 384 [color="red" label="Lines 66 - 67: \lpartial_sum = carry;\lcarry = 0U;\l" id="382 -> 384"]
384 -> 385 [label="Line 68: \l[i < na]\l" id="384 -> 385"]
384 -> 408 [color="red" label="Line 68: \l[!(i < na)]\l" id="384 -> 408"]
408 -> 409 [label="Line 74: \l[i < nb]\l" id="408 -> 409"]
408 -> 432 [color="red" label="Line 74: \l[!(i < nb)]\l" id="408 -> 432"]
432 -> 433 [label="Line 80: \l[partial_sum > 255U]\l" id="432 -> 433"]
432 -> 437 [color="red" label="Line 80: \l[!(partial_sum > 255U)]\l" id="432 -> 437"]
437 -> 438 [label="Line 84: \l[i == 0U]\l" id="437 -> 438"]
437 -> 442 [color="red" label="Line 84: \l[!(i == 0U)]\l" id="437 -> 442"]
442 -> 443 [label="Line 85: \l[i == 1U]\l" id="442 -> 443"]
442 -> 447 [color="red" label="Line 85: \l[!(i == 1U)]\l" id="442 -> 447"]
447 -> 448 [label="Line 86: \l[i == 2U]\l" id="447 -> 448"]
447 -> 452 [color="red" label="Line 86: \l[!(i == 2U)]\l" id="447 -> 452"]
452 -> 453 [label="Line 87: \l[i == 3U]\l" id="452 -> 453"]
452 -> 457 [color="red" label="Line 87: \l[!(i == 3U)]\l" id="452 -> 457"]
457 -> 458 [color="red" label="Line 89: \li = i + 1U;\l" id="457 -> 458"]
458 -> 460 [color="red" label="Line 0: \l\l" id="458 -> 460"]
460 -> 462 [color="red" label="Line 65: \l[!(i < na)]\l" id="460 -> 462"]
460 -> 468 [label="Line 65: \l[i < na]\l" id="460 -> 468"]
462 -> 464 [color="red" label="Line 65: \l[!(i < nb)]\l" id="462 -> 464"]
462 -> 468 [label="Line 65: \l[i < nb]\l" id="462 -> 468"]
464 -> 467 [color="red" label="Line 65: \l[!(carry != 0U)]\l" id="464 -> 467"]
464 -> 468 [label="Line 65: \l[carry != 0U]\l" id="464 -> 468"]
467 -> 470 [color="red" label="Line 92: \lwhile\l" id="467 -> 470"]
470 -> 471 [label="Line 92: \l[i < 4U]\l" id="470 -> 471"]
470 -> 472 [color="red" label="Line 92: \l[!(i < 4U)]\l" id="470 -> 472"]
472 -> 473 [color="red" label="Line 101: \lr = ((r0 | (r1 << 8U)) | (r2 << 16U)) | (((unsigned int)r3) << 24U);\l" id="472 -> 473"]
473 -> 474 [color="red" label="Line 103: \lreturn r;\l" id="473 -> 474"]
474 -> 475 [color="red" label="Line 132: \lReturn edge from mp_add to main: r = mp_add(a, b);\l" id="474 -> 475"]
475 -> 663 [color="red" label="Line 134: \l__VERIFIER_assert(r == (a + b))\l" id="475 -> 663"]
663 -> 664 [color="red" label="Line 0: \lFunction start dummy edge\l" id="663 -> 664"]
664 -> 665 [color="red" label="Line 15: \l[cond == 0]\l" id="664 -> 665"]
664 -> 666 [label="Line 15: \l[!(cond == 0)]\l" id="664 -> 666"]
665 -> 668 [color="red" label="Line 16: \lLabel: ERROR\l" id="665 -> 668"]
453 -> 455 [label="Line 87: \lr3 = (unsigned char)partial_sum;\l" id="453 -> 455"]
455 -> 457 [label="Line 0: \l\l" id="455 -> 457"]
448 -> 450 [label="Line 86: \lr2 = (unsigned char)partial_sum;\l" id="448 -> 450"]
450 -> 452 [label="Line 0: \l\l" id="450 -> 452"]
443 -> 445 [label="Line 85: \lr1 = (unsigned char)partial_sum;\l" id="443 -> 445"]
445 -> 447 [label="Line 0: \l\l" id="445 -> 447"]
438 -> 440 [label="Line 84: \lr0 = (unsigned char)partial_sum;\l" id="438 -> 440"]
440 -> 442 [label="Line 0: \l\l" id="440 -> 442"]
433 -> 435 [label="Lines 81 - 82: \lpartial_sum = partial_sum & 255U;\lcarry = 1U;\l" id="433 -> 435"]
435 -> 437 [label="Line 0: \l\l" id="435 -> 437"]
409 -> 411 [label="Line 75: \l[i == 0U]\l" id="409 -> 411"]
409 -> 415 [label="Line 75: \l[!(i == 0U)]\l" id="409 -> 415"]
415 -> 416 [label="Line 76: \l[i == 1U]\l" id="415 -> 416"]
415 -> 420 [label="Line 76: \l[!(i == 1U)]\l" id="415 -> 420"]
420 -> 421 [label="Line 77: \l[i == 2U]\l" id="420 -> 421"]
420 -> 425 [label="Line 77: \l[!(i == 2U)]\l" id="420 -> 425"]
425 -> 426 [label="Line 78: \l[i == 3U]\l" id="425 -> 426"]
425 -> 427 [label="Line 78: \l[!(i == 3U)]\l" id="425 -> 427"]
427 -> 432 [label="Line 0: \l\l" id="427 -> 432"]
426 -> 430 [label="Line 78: \lpartial_sum = partial_sum + b3;\l" id="426 -> 430"]
430 -> 432 [label="Line 0: \l\l" id="430 -> 432"]
421 -> 423 [label="Line 77: \lpartial_sum = partial_sum + b2;\l" id="421 -> 423"]
423 -> 425 [label="Line 0: \l\l" id="423 -> 425"]
416 -> 418 [label="Line 76: \lpartial_sum = partial_sum + b1;\l" id="416 -> 418"]
418 -> 420 [label="Line 0: \l\l" id="418 -> 420"]
411 -> 413 [label="Line 75: \lpartial_sum = partial_sum + b0;\l" id="411 -> 413"]
413 -> 415 [label="Line 0: \l\l" id="413 -> 415"]
385 -> 387 [label="Line 69: \l[i == 0U]\l" id="385 -> 387"]
385 -> 391 [label="Line 69: \l[!(i == 0U)]\l" id="385 -> 391"]
391 -> 392 [label="Line 70: \l[i == 1U]\l" id="391 -> 392"]
391 -> 396 [label="Line 70: \l[!(i == 1U)]\l" id="391 -> 396"]
396 -> 397 [label="Line 71: \l[i == 2U]\l" id="396 -> 397"]
396 -> 401 [label="Line 71: \l[!(i == 2U)]\l" id="396 -> 401"]
401 -> 402 [label="Line 72: \l[i == 3U]\l" id="401 -> 402"]
401 -> 403 [label="Line 72: \l[!(i == 3U)]\l" id="401 -> 403"]
403 -> 408 [label="Line 0: \l\l" id="403 -> 408"]
402 -> 406 [label="Line 72: \lpartial_sum = partial_sum + a3;\l" id="402 -> 406"]
406 -> 408 [label="Line 0: \l\l" id="406 -> 408"]
397 -> 399 [label="Line 71: \lpartial_sum = partial_sum + a2;\l" id="397 -> 399"]
399 -> 401 [label="Line 0: \l\l" id="399 -> 401"]
392 -> 394 [label="Line 70: \lpartial_sum = partial_sum + a1;\l" id="392 -> 394"]
394 -> 396 [label="Line 0: \l\l" id="394 -> 396"]
387 -> 389 [label="Line 69: \lpartial_sum = partial_sum + a0;\l" id="387 -> 389"]
389 -> 391 [label="Line 0: \l\l" id="389 -> 391"]
376 -> 378 [label="Line 65: \l[!(i < nb)]\l" id="376 -> 378"]
376 -> 382 [label="Line 65: \l[i < nb]\l" id="376 -> 382"]
378 -> 381 [label="Line 65: \l[!(carry != 0U)]\l" id="378 -> 381"]
378 -> 382 [label="Line 65: \l[carry != 0U]\l" id="378 -> 382"]
234 -> 236 [label="Line 55: \lnb = nb - 1;\l" id="234 -> 236"]
236 -> 237 [label="Line 56: \l[b2 == 0U]\l" id="236 -> 237"]
236 -> 238 [label="Line 56: \l[!(b2 == 0U)]\l" id="236 -> 238"]
238 -> 248 [label="Line 0: \l\l" id="238 -> 248"]
237 -> 241 [label="Line 57: \lnb = nb - 1;\l" id="237 -> 241"]
241 -> 242 [label="Line 58: \l[b1 == 0U]\l" id="241 -> 242"]
241 -> 243 [label="Line 58: \l[!(b1 == 0U)]\l" id="241 -> 243"]
243 -> 248 [label="Line 0: \l\l" id="243 -> 248"]
242 -> 246 [label="Line 59: \lnb = nb - 1;\l" id="242 -> 246"]
246 -> 248 [label="Line 0: \l\l" id="246 -> 248"]
218 -> 220 [label="Line 45: \lna = na - 1;\l" id="218 -> 220"]
220 -> 221 [label="Line 46: \l[a2 == 0U]\l" id="220 -> 221"]
220 -> 222 [label="Line 46: \l[!(a2 == 0U)]\l" id="220 -> 222"]
222 -> 232 [label="Line 0: \l\l" id="222 -> 232"]
221 -> 225 [label="Line 47: \lna = na - 1;\l" id="221 -> 225"]
225 -> 226 [label="Line 48: \l[a1 == 0U]\l" id="225 -> 226"]
225 -> 227 [label="Line 48: \l[!(a1 == 0U)]\l" id="225 -> 227"]
227 -> 232 [label="Line 0: \l\l" id="227 -> 232"]
226 -> 230 [label="Line 49: \lna = na - 1;\l" id="226 -> 230"]
230 -> 232 [label="Line 0: \l\l" id="230 -> 232"]
200 -> 202 [label="Line 113: \l[n <= 1000000]\l" id="200 -> 202"]
200 -> 204 [label="Line 113: \l[!(n <= 1000000)]\l" id="200 -> 204"]
202 -> 207 [label="Line 0: \l__CPAchecker_TMP_1 = 1;\l" id="202 -> 207"]
190 -> 192 [color="red" label="Line 108: \l[!(flag == 1)]\l" id="190 -> 192"]
190 -> 193 [label="Line 108: \l[flag == 1]\l" id="190 -> 193"]
192 -> 196 [color="red" label="Line 0: \l__CPAchecker_TMP_0 = 0;\l" id="192 -> 196"]
}
