CONTROL AUTOMATON ErrorPath10

INITIAL STATE ARG0;

STATE USEFIRST ARG0 :
    MATCH "" -> GOTO ARG44;
    TRUE -> STOP;

STATE USEFIRST ARG44 :
    MATCH "extern void abort(void);" -> GOTO ARG45_1_1;
STATE USEFIRST ARG45_0_1 :
    MATCH "extern void abort(void);" -> GOTO ARG45_1_1;
STATE USEFIRST ARG45_1_1 :
    MATCH "extern void __assert_fail(const char *, const char *, unsigned int, const char *) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));" -> GOTO ARG45_2_1;
STATE USEFIRST ARG45_2_1 :
    MATCH "void reach_error()" -> GOTO ARG45_3_1;
STATE USEFIRST ARG45_3_1 :
    MATCH "void assume_abort_if_not(int cond)" -> GOTO ARG45_4_1;
STATE USEFIRST ARG45_4_1 :
    MATCH "void __VERIFIER_assert(int cond)" -> GOTO ARG45_5_1;
STATE USEFIRST ARG45_5_1 :
    MATCH "extern void __VERIFIER_assume(int);" -> GOTO ARG45_6_1;
STATE USEFIRST ARG45_6_1 :
    MATCH "int __VERIFIER_nondet_int();" -> GOTO ARG45_7_1;
STATE USEFIRST ARG45_7_1 :
    MATCH "extern unsigned int __VERIFIER_nondet_uint(void);" -> GOTO ARG45_8_1;
STATE USEFIRST ARG45_8_1 :
    MATCH "int main()" -> GOTO ARG45_9_1;
STATE USEFIRST ARG45_9_1 :
    MATCH "" -> GOTO ARG45_10_1;
STATE USEFIRST ARG45_10_1 :
    MATCH "int flag = __VERIFIER_nondet_int();" -> GOTO ARG45_11_1;
STATE USEFIRST ARG45_11_1 :
    MATCH "int flag = __VERIFIER_nondet_int();" -> GOTO ARG45_12_1;
STATE USEFIRST ARG45_12_1 :
    MATCH "__VERIFIER_assume(flag == 0 || flag == 1);" -> GOTO ARG45;
    TRUE -> STOP;

STATE USEFIRST ARG45 :
    MATCH "[!(flag == 0)]" -> GOTO ARG47;
    MATCH "[flag == 0]" -> GOTO ARG50;
    TRUE -> STOP;

STATE USEFIRST ARG47 :
    MATCH "[!(flag == 1)]" -> GOTO ARG49;
    MATCH "[flag == 1]" -> GOTO ARG50;
    TRUE -> STOP;

STATE USEFIRST ARG49 :
    MATCH "flag == 0 || flag == 1" -> GOTO ARG53;
    TRUE -> STOP;

STATE USEFIRST ARG50 :
    MATCH "flag == 0 || flag == 1" -> GOTO ARG53;
    TRUE -> STOP;

STATE USEFIRST ARG53 :
    MATCH "[__VERIFIER_assume(flag == 0 || flag == 1);]" -> GOTO ARG54;
    TRUE -> STOP;

STATE USEFIRST ARG54 :
    MATCH "int i = 0;" -> GOTO ARG56_1_2;
STATE USEFIRST ARG56_0_2 :
    MATCH "int i = 0;" -> GOTO ARG56_1_2;
STATE USEFIRST ARG56_1_2 :
    MATCH "int x = 0;" -> GOTO ARG56_2_2;
STATE USEFIRST ARG56_2_2 :
    MATCH "int y = 0;" -> GOTO ARG56_3_2;
STATE USEFIRST ARG56_3_2 :
    MATCH "int n = __VERIFIER_nondet_int();" -> GOTO ARG56_4_2;
STATE USEFIRST ARG56_4_2 :
    MATCH "int n = __VERIFIER_nondet_int();" -> GOTO ARG56_5_2;
STATE USEFIRST ARG56_5_2 :
    MATCH "__VERIFIER_assume(n >= 1000 && n <= 1000000);" -> GOTO ARG56;
    TRUE -> STOP;

STATE USEFIRST ARG56 :
    MATCH "[n >= 1000]" -> GOTO ARG57;
    MATCH "[!(n >= 1000)]" -> GOTO ARG61;
    TRUE -> STOP;

STATE USEFIRST ARG57 :
    MATCH "[n <= 1000000]" -> GOTO ARG59;
    MATCH "[!(n <= 1000000)]" -> GOTO ARG61;
    TRUE -> STOP;

STATE USEFIRST ARG59 :
    MATCH "n >= 1000 && n <= 1000000" -> GOTO ARG64;
    TRUE -> STOP;

STATE USEFIRST ARG61 :
    MATCH "n >= 1000 && n <= 1000000" -> GOTO ARG64;
    TRUE -> STOP;

STATE USEFIRST ARG64 :
    MATCH "[__VERIFIER_assume(n >= 1000 && n <= 1000000);]" -> GOTO ARG65;
    TRUE -> STOP;

STATE USEFIRST ARG65 :
    MATCH "unsigned int a, b, r;" -> GOTO ARG67_1_3;
STATE USEFIRST ARG67_0_3 :
    MATCH "unsigned int a, b, r;" -> GOTO ARG67_1_3;
STATE USEFIRST ARG67_1_3 :
    MATCH "unsigned int a, b, r;" -> GOTO ARG67_2_3;
STATE USEFIRST ARG67_2_3 :
    MATCH "unsigned int a, b, r;" -> GOTO ARG67;
    TRUE -> STOP;

STATE USEFIRST ARG67 :
    MATCH "" -> GOTO ARG1061;
    TRUE -> STOP;

STATE USEFIRST ARG1061 :
    MATCH "[i < n]" -> GOTO ARG1062;
    TRUE -> STOP;

STATE USEFIRST ARG1062 :
    MATCH "x = x;" -> GOTO ARG1081_1_4;
STATE USEFIRST ARG1081_0_4 :
    MATCH "x = x;" -> GOTO ARG1081_1_4;
STATE USEFIRST ARG1081_1_4 :
    MATCH "y = y;" -> GOTO ARG1081;
    TRUE -> STOP;

STATE USEFIRST ARG1081 :
    MATCH "[!(flag)]" -> GOTO ARG1082;
    MATCH "[flag]" -> GOTO ARG1083;
    TRUE -> STOP;

STATE USEFIRST ARG1082 :
    MATCH "y += 2;" -> GOTO ARG1086;
    TRUE -> STOP;

STATE USEFIRST ARG1083 :
    MATCH "x += 3;" -> GOTO ARG1084;
    TRUE -> STOP;

STATE USEFIRST ARG1084 :
    MATCH "" -> GOTO ARG1088;
    TRUE -> STOP;

STATE USEFIRST ARG1086 :
    MATCH "" -> GOTO ARG1088;
    TRUE -> STOP;

STATE USEFIRST ARG1088 :
    MATCH "i += 1;" -> GOTO ARG1089;
    TRUE -> STOP;

STATE USEFIRST ARG1089 :
    MATCH "" -> GOTO ARG1091;
    TRUE -> STOP;

STATE USEFIRST ARG1091 :
    MATCH "[i < n]" -> GOTO ARG1092;
    TRUE -> STOP;

STATE USEFIRST ARG1092 :
    MATCH "x = x;" -> GOTO ARG1111_1_5;
STATE USEFIRST ARG1111_0_5 :
    MATCH "x = x;" -> GOTO ARG1111_1_5;
STATE USEFIRST ARG1111_1_5 :
    MATCH "y = y;" -> GOTO ARG1111;
    TRUE -> STOP;

STATE USEFIRST ARG1111 :
    MATCH "[!(flag)]" -> GOTO ARG1112;
    MATCH "[flag]" -> GOTO ARG1113;
    TRUE -> STOP;

STATE USEFIRST ARG1112 :
    MATCH "y += 2;" -> GOTO ARG1116;
    TRUE -> STOP;

STATE USEFIRST ARG1113 :
    MATCH "x += 3;" -> GOTO ARG1114;
    TRUE -> STOP;

STATE USEFIRST ARG1114 :
    MATCH "" -> GOTO ARG1118;
    TRUE -> STOP;

STATE USEFIRST ARG1116 :
    MATCH "" -> GOTO ARG1118;
    TRUE -> STOP;

STATE USEFIRST ARG1118 :
    MATCH "i += 1;" -> GOTO ARG1119;
    TRUE -> STOP;

STATE USEFIRST ARG1119 :
    MATCH "" -> GOTO ARG1121;
    TRUE -> STOP;

STATE USEFIRST ARG1121 :
    MATCH "[i < n]" -> GOTO ARG1122;
    TRUE -> STOP;

STATE USEFIRST ARG1122 :
    MATCH "x = x;" -> GOTO ARG1141_1_6;
STATE USEFIRST ARG1141_0_6 :
    MATCH "x = x;" -> GOTO ARG1141_1_6;
STATE USEFIRST ARG1141_1_6 :
    MATCH "y = y;" -> GOTO ARG1141;
    TRUE -> STOP;

STATE USEFIRST ARG1141 :
    MATCH "[!(flag)]" -> GOTO ARG1142;
    MATCH "[flag]" -> GOTO ARG1143;
    TRUE -> STOP;

STATE USEFIRST ARG1142 :
    MATCH "y += 2;" -> GOTO ARG1146;
    TRUE -> STOP;

STATE USEFIRST ARG1143 :
    MATCH "x += 3;" -> GOTO ARG1144;
    TRUE -> STOP;

STATE USEFIRST ARG1144 :
    MATCH "" -> GOTO ARG1148;
    TRUE -> STOP;

STATE USEFIRST ARG1146 :
    MATCH "" -> GOTO ARG1148;
    TRUE -> STOP;

STATE USEFIRST ARG1148 :
    MATCH "i += 1;" -> GOTO ARG1149;
    TRUE -> STOP;

STATE USEFIRST ARG1149 :
    MATCH "" -> GOTO ARG1151;
    TRUE -> STOP;

STATE USEFIRST ARG1151 :
    MATCH "[i < n]" -> GOTO ARG1152;
    TRUE -> STOP;

STATE USEFIRST ARG1152 :
    MATCH "x = x;" -> GOTO ARG1171_1_7;
STATE USEFIRST ARG1171_0_7 :
    MATCH "x = x;" -> GOTO ARG1171_1_7;
STATE USEFIRST ARG1171_1_7 :
    MATCH "y = y;" -> GOTO ARG1171;
    TRUE -> STOP;

STATE USEFIRST ARG1171 :
    MATCH "[!(flag)]" -> GOTO ARG1172;
    MATCH "[flag]" -> GOTO ARG1173;
    TRUE -> STOP;

STATE USEFIRST ARG1172 :
    MATCH "y += 2;" -> GOTO ARG1176;
    TRUE -> STOP;

STATE USEFIRST ARG1173 :
    MATCH "x += 3;" -> GOTO ARG1174;
    TRUE -> STOP;

STATE USEFIRST ARG1174 :
    MATCH "" -> GOTO ARG1178;
    TRUE -> STOP;

STATE USEFIRST ARG1176 :
    MATCH "" -> GOTO ARG1178;
    TRUE -> STOP;

STATE USEFIRST ARG1178 :
    MATCH "i += 1;" -> GOTO ARG1179;
    TRUE -> STOP;

STATE USEFIRST ARG1179 :
    MATCH "" -> GOTO ARG1181;
    TRUE -> STOP;

STATE USEFIRST ARG1181 :
    MATCH "[i < n]" -> GOTO ARG1182;
    TRUE -> STOP;

STATE USEFIRST ARG1182 :
    MATCH "x = x;" -> GOTO ARG1201_1_8;
STATE USEFIRST ARG1201_0_8 :
    MATCH "x = x;" -> GOTO ARG1201_1_8;
STATE USEFIRST ARG1201_1_8 :
    MATCH "y = y;" -> GOTO ARG1201;
    TRUE -> STOP;

STATE USEFIRST ARG1201 :
    MATCH "[!(flag)]" -> GOTO ARG1202;
    MATCH "[flag]" -> GOTO ARG1203;
    TRUE -> STOP;

STATE USEFIRST ARG1202 :
    MATCH "y += 2;" -> GOTO ARG1206;
    TRUE -> STOP;

STATE USEFIRST ARG1203 :
    MATCH "x += 3;" -> GOTO ARG1204;
    TRUE -> STOP;

STATE USEFIRST ARG1204 :
    MATCH "" -> GOTO ARG1208;
    TRUE -> STOP;

STATE USEFIRST ARG1206 :
    MATCH "" -> GOTO ARG1208;
    TRUE -> STOP;

STATE USEFIRST ARG1208 :
    MATCH "i += 1;" -> GOTO ARG1209;
    TRUE -> STOP;

STATE USEFIRST ARG1209 :
    MATCH "" -> GOTO ARG1211;
    TRUE -> STOP;

STATE USEFIRST ARG1211 :
    MATCH "[i < n]" -> GOTO ARG1212;
    TRUE -> STOP;

STATE USEFIRST ARG1212 :
    MATCH "x = x;" -> GOTO ARG1231_1_9;
STATE USEFIRST ARG1231_0_9 :
    MATCH "x = x;" -> GOTO ARG1231_1_9;
STATE USEFIRST ARG1231_1_9 :
    MATCH "y = y;" -> GOTO ARG1231;
    TRUE -> STOP;

STATE USEFIRST ARG1231 :
    MATCH "[!(flag)]" -> GOTO ARG1232;
    MATCH "[flag]" -> GOTO ARG1233;
    TRUE -> STOP;

STATE USEFIRST ARG1232 :
    MATCH "y += 2;" -> GOTO ARG1236;
    TRUE -> STOP;

STATE USEFIRST ARG1233 :
    MATCH "x += 3;" -> GOTO ARG1234;
    TRUE -> STOP;

STATE USEFIRST ARG1234 :
    MATCH "" -> GOTO ARG1238;
    TRUE -> STOP;

STATE USEFIRST ARG1236 :
    MATCH "" -> GOTO ARG1238;
    TRUE -> STOP;

STATE USEFIRST ARG1238 :
    MATCH "i += 1;" -> GOTO ARG1239;
    TRUE -> STOP;

STATE USEFIRST ARG1239 :
    MATCH "" -> GOTO ARG1241;
    TRUE -> STOP;

STATE USEFIRST ARG1241 :
    MATCH "[i < n]" -> GOTO ARG1242;
    TRUE -> STOP;

STATE USEFIRST ARG1242 :
    MATCH "x = x;" -> GOTO ARG1261_1_10;
STATE USEFIRST ARG1261_0_10 :
    MATCH "x = x;" -> GOTO ARG1261_1_10;
STATE USEFIRST ARG1261_1_10 :
    MATCH "y = y;" -> GOTO ARG1261;
    TRUE -> STOP;

STATE USEFIRST ARG1261 :
    MATCH "[!(flag)]" -> GOTO ARG1262;
    MATCH "[flag]" -> GOTO ARG1263;
    TRUE -> STOP;

STATE USEFIRST ARG1262 :
    MATCH "y += 2;" -> GOTO ARG1266;
    TRUE -> STOP;

STATE USEFIRST ARG1263 :
    MATCH "x += 3;" -> GOTO ARG1264;
    TRUE -> STOP;

STATE USEFIRST ARG1264 :
    MATCH "" -> GOTO ARG1268;
    TRUE -> STOP;

STATE USEFIRST ARG1266 :
    MATCH "" -> GOTO ARG1268;
    TRUE -> STOP;

STATE USEFIRST ARG1268 :
    MATCH "i += 1;" -> GOTO ARG1269;
    TRUE -> STOP;

STATE USEFIRST ARG1269 :
    MATCH "" -> GOTO ARG1271;
    TRUE -> STOP;

STATE USEFIRST ARG1271 :
    MATCH "[i < n]" -> GOTO ARG1272;
    TRUE -> STOP;

STATE USEFIRST ARG1272 :
    MATCH "x = x;" -> GOTO ARG1291_1_11;
STATE USEFIRST ARG1291_0_11 :
    MATCH "x = x;" -> GOTO ARG1291_1_11;
STATE USEFIRST ARG1291_1_11 :
    MATCH "y = y;" -> GOTO ARG1291;
    TRUE -> STOP;

STATE USEFIRST ARG1291 :
    MATCH "[!(flag)]" -> GOTO ARG1292;
    MATCH "[flag]" -> GOTO ARG1293;
    TRUE -> STOP;

STATE USEFIRST ARG1292 :
    MATCH "y += 2;" -> GOTO ARG1296;
    TRUE -> STOP;

STATE USEFIRST ARG1293 :
    MATCH "x += 3;" -> GOTO ARG1294;
    TRUE -> STOP;

STATE USEFIRST ARG1294 :
    MATCH "" -> GOTO ARG1298;
    TRUE -> STOP;

STATE USEFIRST ARG1296 :
    MATCH "" -> GOTO ARG1298;
    TRUE -> STOP;

STATE USEFIRST ARG1298 :
    MATCH "i += 1;" -> GOTO ARG1299;
    TRUE -> STOP;

STATE USEFIRST ARG1299 :
    MATCH "" -> GOTO ARG1301;
    TRUE -> STOP;

STATE USEFIRST ARG1301 :
    MATCH "[!(i < n)]" -> GOTO ARG1303;
    TRUE -> STOP;

STATE USEFIRST ARG1303 :
    MATCH "__VERIFIER_assert(x <= 3000003 && y <= 2000002);" -> GOTO ARG1304;
    TRUE -> STOP;

STATE USEFIRST ARG1304 :
    MATCH "[x <= 3000003]" -> GOTO ARG1305;
    MATCH "[!(x <= 3000003)]" -> GOTO ARG1309;
    TRUE -> STOP;

STATE USEFIRST ARG1305 :
    MATCH "[y <= 2000002]" -> GOTO ARG1307;
    MATCH "[!(y <= 2000002)]" -> GOTO ARG1309;
    TRUE -> STOP;

STATE USEFIRST ARG1307 :
    MATCH "x <= 3000003 && y <= 2000002" -> GOTO ARG1312;
    TRUE -> STOP;

STATE USEFIRST ARG1309 :
    MATCH "x <= 3000003 && y <= 2000002" -> GOTO ARG1312;
    TRUE -> STOP;

STATE USEFIRST ARG1312 :
    MATCH "__VERIFIER_assert(x <= 3000003 && y <= 2000002);" -> GOTO ARG1313;
    TRUE -> STOP;

STATE USEFIRST ARG1313 :
    MATCH "" -> GOTO ARG1314;
    TRUE -> STOP;

STATE USEFIRST ARG1314 :
    MATCH "[!(cond)]" -> GOTO ARG1315;
    TRUE -> STOP;

STATE USEFIRST ARG1315 :
    MATCH "ERROR: {reach_error();abort();}" -> ERROR;
    TRUE -> STOP;

STATE USEFIRST ARG1318 :
    TRUE -> STOP;

END AUTOMATON
