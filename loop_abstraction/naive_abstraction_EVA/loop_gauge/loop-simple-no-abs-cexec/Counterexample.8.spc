CONTROL AUTOMATON ErrorPath8

INITIAL STATE ARG0;

STATE USEFIRST ARG0 :
    MATCH "" -> GOTO ARG44;
    TRUE -> STOP;

STATE USEFIRST ARG44 :
    MATCH "extern void abort(void);" -> GOTO ARG45_1_1;
STATE USEFIRST ARG45_0_1 :
    MATCH "extern void abort(void);" -> GOTO ARG45_1_1;
STATE USEFIRST ARG45_1_1 :
    MATCH "extern void __assert_fail(const char *, const char *, unsigned int, const char *) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));" -> GOTO ARG45_2_1;
STATE USEFIRST ARG45_2_1 :
    MATCH "void reach_error()" -> GOTO ARG45_3_1;
STATE USEFIRST ARG45_3_1 :
    MATCH "void assume_abort_if_not(int cond)" -> GOTO ARG45_4_1;
STATE USEFIRST ARG45_4_1 :
    MATCH "void __VERIFIER_assert(int cond)" -> GOTO ARG45_5_1;
STATE USEFIRST ARG45_5_1 :
    MATCH "extern void __VERIFIER_assume(int);" -> GOTO ARG45_6_1;
STATE USEFIRST ARG45_6_1 :
    MATCH "int __VERIFIER_nondet_int();" -> GOTO ARG45_7_1;
STATE USEFIRST ARG45_7_1 :
    MATCH "extern unsigned int __VERIFIER_nondet_uint(void);" -> GOTO ARG45_8_1;
STATE USEFIRST ARG45_8_1 :
    MATCH "int main()" -> GOTO ARG45_9_1;
STATE USEFIRST ARG45_9_1 :
    MATCH "" -> GOTO ARG45_10_1;
STATE USEFIRST ARG45_10_1 :
    MATCH "int flag = __VERIFIER_nondet_int();" -> GOTO ARG45_11_1;
STATE USEFIRST ARG45_11_1 :
    MATCH "int flag = __VERIFIER_nondet_int();" -> GOTO ARG45_12_1;
STATE USEFIRST ARG45_12_1 :
    MATCH "__VERIFIER_assume(flag == 0 || flag == 1);" -> GOTO ARG45;
    TRUE -> STOP;

STATE USEFIRST ARG45 :
    MATCH "[!(flag == 0)]" -> GOTO ARG47;
    MATCH "[flag == 0]" -> GOTO ARG50;
    TRUE -> STOP;

STATE USEFIRST ARG47 :
    MATCH "[!(flag == 1)]" -> GOTO ARG49;
    MATCH "[flag == 1]" -> GOTO ARG50;
    TRUE -> STOP;

STATE USEFIRST ARG49 :
    MATCH "flag == 0 || flag == 1" -> GOTO ARG53;
    TRUE -> STOP;

STATE USEFIRST ARG50 :
    MATCH "flag == 0 || flag == 1" -> GOTO ARG53;
    TRUE -> STOP;

STATE USEFIRST ARG53 :
    MATCH "[__VERIFIER_assume(flag == 0 || flag == 1);]" -> GOTO ARG54;
    TRUE -> STOP;

STATE USEFIRST ARG54 :
    MATCH "int i = 0;" -> GOTO ARG56_1_2;
STATE USEFIRST ARG56_0_2 :
    MATCH "int i = 0;" -> GOTO ARG56_1_2;
STATE USEFIRST ARG56_1_2 :
    MATCH "int x = 0;" -> GOTO ARG56_2_2;
STATE USEFIRST ARG56_2_2 :
    MATCH "int y = 0;" -> GOTO ARG56_3_2;
STATE USEFIRST ARG56_3_2 :
    MATCH "int n = __VERIFIER_nondet_int();" -> GOTO ARG56_4_2;
STATE USEFIRST ARG56_4_2 :
    MATCH "int n = __VERIFIER_nondet_int();" -> GOTO ARG56_5_2;
STATE USEFIRST ARG56_5_2 :
    MATCH "__VERIFIER_assume(n >= 1000 && n <= 1000000);" -> GOTO ARG56;
    TRUE -> STOP;

STATE USEFIRST ARG56 :
    MATCH "[n >= 1000]" -> GOTO ARG57;
    MATCH "[!(n >= 1000)]" -> GOTO ARG61;
    TRUE -> STOP;

STATE USEFIRST ARG57 :
    MATCH "[n <= 1000000]" -> GOTO ARG59;
    MATCH "[!(n <= 1000000)]" -> GOTO ARG61;
    TRUE -> STOP;

STATE USEFIRST ARG59 :
    MATCH "n >= 1000 && n <= 1000000" -> GOTO ARG64;
    TRUE -> STOP;

STATE USEFIRST ARG61 :
    MATCH "n >= 1000 && n <= 1000000" -> GOTO ARG64;
    TRUE -> STOP;

STATE USEFIRST ARG64 :
    MATCH "[__VERIFIER_assume(n >= 1000 && n <= 1000000);]" -> GOTO ARG65;
    TRUE -> STOP;

STATE USEFIRST ARG65 :
    MATCH "unsigned int a, b, r;" -> GOTO ARG67_1_3;
STATE USEFIRST ARG67_0_3 :
    MATCH "unsigned int a, b, r;" -> GOTO ARG67_1_3;
STATE USEFIRST ARG67_1_3 :
    MATCH "unsigned int a, b, r;" -> GOTO ARG67_2_3;
STATE USEFIRST ARG67_2_3 :
    MATCH "unsigned int a, b, r;" -> GOTO ARG67;
    TRUE -> STOP;

STATE USEFIRST ARG67 :
    MATCH "" -> GOTO ARG633;
    TRUE -> STOP;

STATE USEFIRST ARG633 :
    MATCH "[i < n]" -> GOTO ARG634;
    TRUE -> STOP;

STATE USEFIRST ARG634 :
    MATCH "x = x;" -> GOTO ARG653_1_4;
STATE USEFIRST ARG653_0_4 :
    MATCH "x = x;" -> GOTO ARG653_1_4;
STATE USEFIRST ARG653_1_4 :
    MATCH "y = y;" -> GOTO ARG653;
    TRUE -> STOP;

STATE USEFIRST ARG653 :
    MATCH "[!(flag)]" -> GOTO ARG654;
    MATCH "[flag]" -> GOTO ARG655;
    TRUE -> STOP;

STATE USEFIRST ARG654 :
    MATCH "y += 2;" -> GOTO ARG658;
    TRUE -> STOP;

STATE USEFIRST ARG655 :
    MATCH "x += 3;" -> GOTO ARG656;
    TRUE -> STOP;

STATE USEFIRST ARG656 :
    MATCH "" -> GOTO ARG660;
    TRUE -> STOP;

STATE USEFIRST ARG658 :
    MATCH "" -> GOTO ARG660;
    TRUE -> STOP;

STATE USEFIRST ARG660 :
    MATCH "i += 1;" -> GOTO ARG661;
    TRUE -> STOP;

STATE USEFIRST ARG661 :
    MATCH "" -> GOTO ARG663;
    TRUE -> STOP;

STATE USEFIRST ARG663 :
    MATCH "[i < n]" -> GOTO ARG664;
    TRUE -> STOP;

STATE USEFIRST ARG664 :
    MATCH "x = x;" -> GOTO ARG683_1_5;
STATE USEFIRST ARG683_0_5 :
    MATCH "x = x;" -> GOTO ARG683_1_5;
STATE USEFIRST ARG683_1_5 :
    MATCH "y = y;" -> GOTO ARG683;
    TRUE -> STOP;

STATE USEFIRST ARG683 :
    MATCH "[!(flag)]" -> GOTO ARG684;
    MATCH "[flag]" -> GOTO ARG685;
    TRUE -> STOP;

STATE USEFIRST ARG684 :
    MATCH "y += 2;" -> GOTO ARG688;
    TRUE -> STOP;

STATE USEFIRST ARG685 :
    MATCH "x += 3;" -> GOTO ARG686;
    TRUE -> STOP;

STATE USEFIRST ARG686 :
    MATCH "" -> GOTO ARG690;
    TRUE -> STOP;

STATE USEFIRST ARG688 :
    MATCH "" -> GOTO ARG690;
    TRUE -> STOP;

STATE USEFIRST ARG690 :
    MATCH "i += 1;" -> GOTO ARG691;
    TRUE -> STOP;

STATE USEFIRST ARG691 :
    MATCH "" -> GOTO ARG693;
    TRUE -> STOP;

STATE USEFIRST ARG693 :
    MATCH "[i < n]" -> GOTO ARG694;
    TRUE -> STOP;

STATE USEFIRST ARG694 :
    MATCH "x = x;" -> GOTO ARG713_1_6;
STATE USEFIRST ARG713_0_6 :
    MATCH "x = x;" -> GOTO ARG713_1_6;
STATE USEFIRST ARG713_1_6 :
    MATCH "y = y;" -> GOTO ARG713;
    TRUE -> STOP;

STATE USEFIRST ARG713 :
    MATCH "[!(flag)]" -> GOTO ARG714;
    MATCH "[flag]" -> GOTO ARG715;
    TRUE -> STOP;

STATE USEFIRST ARG714 :
    MATCH "y += 2;" -> GOTO ARG718;
    TRUE -> STOP;

STATE USEFIRST ARG715 :
    MATCH "x += 3;" -> GOTO ARG716;
    TRUE -> STOP;

STATE USEFIRST ARG716 :
    MATCH "" -> GOTO ARG720;
    TRUE -> STOP;

STATE USEFIRST ARG718 :
    MATCH "" -> GOTO ARG720;
    TRUE -> STOP;

STATE USEFIRST ARG720 :
    MATCH "i += 1;" -> GOTO ARG721;
    TRUE -> STOP;

STATE USEFIRST ARG721 :
    MATCH "" -> GOTO ARG723;
    TRUE -> STOP;

STATE USEFIRST ARG723 :
    MATCH "[i < n]" -> GOTO ARG724;
    TRUE -> STOP;

STATE USEFIRST ARG724 :
    MATCH "x = x;" -> GOTO ARG743_1_7;
STATE USEFIRST ARG743_0_7 :
    MATCH "x = x;" -> GOTO ARG743_1_7;
STATE USEFIRST ARG743_1_7 :
    MATCH "y = y;" -> GOTO ARG743;
    TRUE -> STOP;

STATE USEFIRST ARG743 :
    MATCH "[!(flag)]" -> GOTO ARG744;
    MATCH "[flag]" -> GOTO ARG745;
    TRUE -> STOP;

STATE USEFIRST ARG744 :
    MATCH "y += 2;" -> GOTO ARG748;
    TRUE -> STOP;

STATE USEFIRST ARG745 :
    MATCH "x += 3;" -> GOTO ARG746;
    TRUE -> STOP;

STATE USEFIRST ARG746 :
    MATCH "" -> GOTO ARG750;
    TRUE -> STOP;

STATE USEFIRST ARG748 :
    MATCH "" -> GOTO ARG750;
    TRUE -> STOP;

STATE USEFIRST ARG750 :
    MATCH "i += 1;" -> GOTO ARG751;
    TRUE -> STOP;

STATE USEFIRST ARG751 :
    MATCH "" -> GOTO ARG753;
    TRUE -> STOP;

STATE USEFIRST ARG753 :
    MATCH "[i < n]" -> GOTO ARG754;
    TRUE -> STOP;

STATE USEFIRST ARG754 :
    MATCH "x = x;" -> GOTO ARG773_1_8;
STATE USEFIRST ARG773_0_8 :
    MATCH "x = x;" -> GOTO ARG773_1_8;
STATE USEFIRST ARG773_1_8 :
    MATCH "y = y;" -> GOTO ARG773;
    TRUE -> STOP;

STATE USEFIRST ARG773 :
    MATCH "[!(flag)]" -> GOTO ARG774;
    MATCH "[flag]" -> GOTO ARG775;
    TRUE -> STOP;

STATE USEFIRST ARG774 :
    MATCH "y += 2;" -> GOTO ARG778;
    TRUE -> STOP;

STATE USEFIRST ARG775 :
    MATCH "x += 3;" -> GOTO ARG776;
    TRUE -> STOP;

STATE USEFIRST ARG776 :
    MATCH "" -> GOTO ARG780;
    TRUE -> STOP;

STATE USEFIRST ARG778 :
    MATCH "" -> GOTO ARG780;
    TRUE -> STOP;

STATE USEFIRST ARG780 :
    MATCH "i += 1;" -> GOTO ARG781;
    TRUE -> STOP;

STATE USEFIRST ARG781 :
    MATCH "" -> GOTO ARG783;
    TRUE -> STOP;

STATE USEFIRST ARG783 :
    MATCH "[i < n]" -> GOTO ARG784;
    TRUE -> STOP;

STATE USEFIRST ARG784 :
    MATCH "x = x;" -> GOTO ARG803_1_9;
STATE USEFIRST ARG803_0_9 :
    MATCH "x = x;" -> GOTO ARG803_1_9;
STATE USEFIRST ARG803_1_9 :
    MATCH "y = y;" -> GOTO ARG803;
    TRUE -> STOP;

STATE USEFIRST ARG803 :
    MATCH "[!(flag)]" -> GOTO ARG804;
    MATCH "[flag]" -> GOTO ARG805;
    TRUE -> STOP;

STATE USEFIRST ARG804 :
    MATCH "y += 2;" -> GOTO ARG808;
    TRUE -> STOP;

STATE USEFIRST ARG805 :
    MATCH "x += 3;" -> GOTO ARG806;
    TRUE -> STOP;

STATE USEFIRST ARG806 :
    MATCH "" -> GOTO ARG810;
    TRUE -> STOP;

STATE USEFIRST ARG808 :
    MATCH "" -> GOTO ARG810;
    TRUE -> STOP;

STATE USEFIRST ARG810 :
    MATCH "i += 1;" -> GOTO ARG811;
    TRUE -> STOP;

STATE USEFIRST ARG811 :
    MATCH "" -> GOTO ARG813;
    TRUE -> STOP;

STATE USEFIRST ARG813 :
    MATCH "[!(i < n)]" -> GOTO ARG815;
    TRUE -> STOP;

STATE USEFIRST ARG815 :
    MATCH "__VERIFIER_assert(x <= 3000003 && y <= 2000002);" -> GOTO ARG816;
    TRUE -> STOP;

STATE USEFIRST ARG816 :
    MATCH "[x <= 3000003]" -> GOTO ARG817;
    MATCH "[!(x <= 3000003)]" -> GOTO ARG821;
    TRUE -> STOP;

STATE USEFIRST ARG817 :
    MATCH "[y <= 2000002]" -> GOTO ARG819;
    MATCH "[!(y <= 2000002)]" -> GOTO ARG821;
    TRUE -> STOP;

STATE USEFIRST ARG819 :
    MATCH "x <= 3000003 && y <= 2000002" -> GOTO ARG824;
    TRUE -> STOP;

STATE USEFIRST ARG821 :
    MATCH "x <= 3000003 && y <= 2000002" -> GOTO ARG824;
    TRUE -> STOP;

STATE USEFIRST ARG824 :
    MATCH "__VERIFIER_assert(x <= 3000003 && y <= 2000002);" -> GOTO ARG825;
    TRUE -> STOP;

STATE USEFIRST ARG825 :
    MATCH "" -> GOTO ARG826;
    TRUE -> STOP;

STATE USEFIRST ARG826 :
    MATCH "[!(cond)]" -> GOTO ARG827;
    TRUE -> STOP;

STATE USEFIRST ARG827 :
    MATCH "ERROR: {reach_error();abort();}" -> ERROR;
    TRUE -> STOP;

STATE USEFIRST ARG830 :
    TRUE -> STOP;

END AUTOMATON
