CONTROL AUTOMATON ErrorPath9

INITIAL STATE ARG0;

STATE USEFIRST ARG0 :
    MATCH "" -> GOTO ARG44;
    TRUE -> STOP;

STATE USEFIRST ARG44 :
    MATCH "extern void abort(void);" -> GOTO ARG45_1_1;
STATE USEFIRST ARG45_0_1 :
    MATCH "extern void abort(void);" -> GOTO ARG45_1_1;
STATE USEFIRST ARG45_1_1 :
    MATCH "extern void __assert_fail(const char *, const char *, unsigned int, const char *) __attribute__ ((__nothrow__ , __leaf__)) __attribute__ ((__noreturn__));" -> GOTO ARG45_2_1;
STATE USEFIRST ARG45_2_1 :
    MATCH "void reach_error()" -> GOTO ARG45_3_1;
STATE USEFIRST ARG45_3_1 :
    MATCH "void assume_abort_if_not(int cond)" -> GOTO ARG45_4_1;
STATE USEFIRST ARG45_4_1 :
    MATCH "void __VERIFIER_assert(int cond)" -> GOTO ARG45_5_1;
STATE USEFIRST ARG45_5_1 :
    MATCH "extern void __VERIFIER_assume(int);" -> GOTO ARG45_6_1;
STATE USEFIRST ARG45_6_1 :
    MATCH "int __VERIFIER_nondet_int();" -> GOTO ARG45_7_1;
STATE USEFIRST ARG45_7_1 :
    MATCH "extern unsigned int __VERIFIER_nondet_uint(void);" -> GOTO ARG45_8_1;
STATE USEFIRST ARG45_8_1 :
    MATCH "int main()" -> GOTO ARG45_9_1;
STATE USEFIRST ARG45_9_1 :
    MATCH "" -> GOTO ARG45_10_1;
STATE USEFIRST ARG45_10_1 :
    MATCH "int flag = __VERIFIER_nondet_int();" -> GOTO ARG45_11_1;
STATE USEFIRST ARG45_11_1 :
    MATCH "int flag = __VERIFIER_nondet_int();" -> GOTO ARG45_12_1;
STATE USEFIRST ARG45_12_1 :
    MATCH "__VERIFIER_assume(flag == 0 || flag == 1);" -> GOTO ARG45;
    TRUE -> STOP;

STATE USEFIRST ARG45 :
    MATCH "[!(flag == 0)]" -> GOTO ARG47;
    MATCH "[flag == 0]" -> GOTO ARG50;
    TRUE -> STOP;

STATE USEFIRST ARG47 :
    MATCH "[!(flag == 1)]" -> GOTO ARG49;
    MATCH "[flag == 1]" -> GOTO ARG50;
    TRUE -> STOP;

STATE USEFIRST ARG49 :
    MATCH "flag == 0 || flag == 1" -> GOTO ARG53;
    TRUE -> STOP;

STATE USEFIRST ARG50 :
    MATCH "flag == 0 || flag == 1" -> GOTO ARG53;
    TRUE -> STOP;

STATE USEFIRST ARG53 :
    MATCH "[__VERIFIER_assume(flag == 0 || flag == 1);]" -> GOTO ARG54;
    TRUE -> STOP;

STATE USEFIRST ARG54 :
    MATCH "int i = 0;" -> GOTO ARG56_1_2;
STATE USEFIRST ARG56_0_2 :
    MATCH "int i = 0;" -> GOTO ARG56_1_2;
STATE USEFIRST ARG56_1_2 :
    MATCH "int x = 0;" -> GOTO ARG56_2_2;
STATE USEFIRST ARG56_2_2 :
    MATCH "int y = 0;" -> GOTO ARG56_3_2;
STATE USEFIRST ARG56_3_2 :
    MATCH "int n = __VERIFIER_nondet_int();" -> GOTO ARG56_4_2;
STATE USEFIRST ARG56_4_2 :
    MATCH "int n = __VERIFIER_nondet_int();" -> GOTO ARG56_5_2;
STATE USEFIRST ARG56_5_2 :
    MATCH "__VERIFIER_assume(n >= 1000 && n <= 1000000);" -> GOTO ARG56;
    TRUE -> STOP;

STATE USEFIRST ARG56 :
    MATCH "[n >= 1000]" -> GOTO ARG57;
    MATCH "[!(n >= 1000)]" -> GOTO ARG61;
    TRUE -> STOP;

STATE USEFIRST ARG57 :
    MATCH "[n <= 1000000]" -> GOTO ARG59;
    MATCH "[!(n <= 1000000)]" -> GOTO ARG61;
    TRUE -> STOP;

STATE USEFIRST ARG59 :
    MATCH "n >= 1000 && n <= 1000000" -> GOTO ARG64;
    TRUE -> STOP;

STATE USEFIRST ARG61 :
    MATCH "n >= 1000 && n <= 1000000" -> GOTO ARG64;
    TRUE -> STOP;

STATE USEFIRST ARG64 :
    MATCH "[__VERIFIER_assume(n >= 1000 && n <= 1000000);]" -> GOTO ARG65;
    TRUE -> STOP;

STATE USEFIRST ARG65 :
    MATCH "unsigned int a, b, r;" -> GOTO ARG67_1_3;
STATE USEFIRST ARG67_0_3 :
    MATCH "unsigned int a, b, r;" -> GOTO ARG67_1_3;
STATE USEFIRST ARG67_1_3 :
    MATCH "unsigned int a, b, r;" -> GOTO ARG67_2_3;
STATE USEFIRST ARG67_2_3 :
    MATCH "unsigned int a, b, r;" -> GOTO ARG67;
    TRUE -> STOP;

STATE USEFIRST ARG67 :
    MATCH "" -> GOTO ARG832;
    TRUE -> STOP;

STATE USEFIRST ARG832 :
    MATCH "[i < n]" -> GOTO ARG833;
    TRUE -> STOP;

STATE USEFIRST ARG833 :
    MATCH "x = x;" -> GOTO ARG852_1_4;
STATE USEFIRST ARG852_0_4 :
    MATCH "x = x;" -> GOTO ARG852_1_4;
STATE USEFIRST ARG852_1_4 :
    MATCH "y = y;" -> GOTO ARG852;
    TRUE -> STOP;

STATE USEFIRST ARG852 :
    MATCH "[!(flag)]" -> GOTO ARG853;
    MATCH "[flag]" -> GOTO ARG854;
    TRUE -> STOP;

STATE USEFIRST ARG853 :
    MATCH "y += 2;" -> GOTO ARG857;
    TRUE -> STOP;

STATE USEFIRST ARG854 :
    MATCH "x += 3;" -> GOTO ARG855;
    TRUE -> STOP;

STATE USEFIRST ARG855 :
    MATCH "" -> GOTO ARG859;
    TRUE -> STOP;

STATE USEFIRST ARG857 :
    MATCH "" -> GOTO ARG859;
    TRUE -> STOP;

STATE USEFIRST ARG859 :
    MATCH "i += 1;" -> GOTO ARG860;
    TRUE -> STOP;

STATE USEFIRST ARG860 :
    MATCH "" -> GOTO ARG862;
    TRUE -> STOP;

STATE USEFIRST ARG862 :
    MATCH "[i < n]" -> GOTO ARG863;
    TRUE -> STOP;

STATE USEFIRST ARG863 :
    MATCH "x = x;" -> GOTO ARG882_1_5;
STATE USEFIRST ARG882_0_5 :
    MATCH "x = x;" -> GOTO ARG882_1_5;
STATE USEFIRST ARG882_1_5 :
    MATCH "y = y;" -> GOTO ARG882;
    TRUE -> STOP;

STATE USEFIRST ARG882 :
    MATCH "[!(flag)]" -> GOTO ARG883;
    MATCH "[flag]" -> GOTO ARG884;
    TRUE -> STOP;

STATE USEFIRST ARG883 :
    MATCH "y += 2;" -> GOTO ARG887;
    TRUE -> STOP;

STATE USEFIRST ARG884 :
    MATCH "x += 3;" -> GOTO ARG885;
    TRUE -> STOP;

STATE USEFIRST ARG885 :
    MATCH "" -> GOTO ARG889;
    TRUE -> STOP;

STATE USEFIRST ARG887 :
    MATCH "" -> GOTO ARG889;
    TRUE -> STOP;

STATE USEFIRST ARG889 :
    MATCH "i += 1;" -> GOTO ARG890;
    TRUE -> STOP;

STATE USEFIRST ARG890 :
    MATCH "" -> GOTO ARG892;
    TRUE -> STOP;

STATE USEFIRST ARG892 :
    MATCH "[i < n]" -> GOTO ARG893;
    TRUE -> STOP;

STATE USEFIRST ARG893 :
    MATCH "x = x;" -> GOTO ARG912_1_6;
STATE USEFIRST ARG912_0_6 :
    MATCH "x = x;" -> GOTO ARG912_1_6;
STATE USEFIRST ARG912_1_6 :
    MATCH "y = y;" -> GOTO ARG912;
    TRUE -> STOP;

STATE USEFIRST ARG912 :
    MATCH "[!(flag)]" -> GOTO ARG913;
    MATCH "[flag]" -> GOTO ARG914;
    TRUE -> STOP;

STATE USEFIRST ARG913 :
    MATCH "y += 2;" -> GOTO ARG917;
    TRUE -> STOP;

STATE USEFIRST ARG914 :
    MATCH "x += 3;" -> GOTO ARG915;
    TRUE -> STOP;

STATE USEFIRST ARG915 :
    MATCH "" -> GOTO ARG919;
    TRUE -> STOP;

STATE USEFIRST ARG917 :
    MATCH "" -> GOTO ARG919;
    TRUE -> STOP;

STATE USEFIRST ARG919 :
    MATCH "i += 1;" -> GOTO ARG920;
    TRUE -> STOP;

STATE USEFIRST ARG920 :
    MATCH "" -> GOTO ARG922;
    TRUE -> STOP;

STATE USEFIRST ARG922 :
    MATCH "[i < n]" -> GOTO ARG923;
    TRUE -> STOP;

STATE USEFIRST ARG923 :
    MATCH "x = x;" -> GOTO ARG942_1_7;
STATE USEFIRST ARG942_0_7 :
    MATCH "x = x;" -> GOTO ARG942_1_7;
STATE USEFIRST ARG942_1_7 :
    MATCH "y = y;" -> GOTO ARG942;
    TRUE -> STOP;

STATE USEFIRST ARG942 :
    MATCH "[!(flag)]" -> GOTO ARG943;
    MATCH "[flag]" -> GOTO ARG944;
    TRUE -> STOP;

STATE USEFIRST ARG943 :
    MATCH "y += 2;" -> GOTO ARG947;
    TRUE -> STOP;

STATE USEFIRST ARG944 :
    MATCH "x += 3;" -> GOTO ARG945;
    TRUE -> STOP;

STATE USEFIRST ARG945 :
    MATCH "" -> GOTO ARG949;
    TRUE -> STOP;

STATE USEFIRST ARG947 :
    MATCH "" -> GOTO ARG949;
    TRUE -> STOP;

STATE USEFIRST ARG949 :
    MATCH "i += 1;" -> GOTO ARG950;
    TRUE -> STOP;

STATE USEFIRST ARG950 :
    MATCH "" -> GOTO ARG952;
    TRUE -> STOP;

STATE USEFIRST ARG952 :
    MATCH "[i < n]" -> GOTO ARG953;
    TRUE -> STOP;

STATE USEFIRST ARG953 :
    MATCH "x = x;" -> GOTO ARG972_1_8;
STATE USEFIRST ARG972_0_8 :
    MATCH "x = x;" -> GOTO ARG972_1_8;
STATE USEFIRST ARG972_1_8 :
    MATCH "y = y;" -> GOTO ARG972;
    TRUE -> STOP;

STATE USEFIRST ARG972 :
    MATCH "[!(flag)]" -> GOTO ARG973;
    MATCH "[flag]" -> GOTO ARG974;
    TRUE -> STOP;

STATE USEFIRST ARG973 :
    MATCH "y += 2;" -> GOTO ARG977;
    TRUE -> STOP;

STATE USEFIRST ARG974 :
    MATCH "x += 3;" -> GOTO ARG975;
    TRUE -> STOP;

STATE USEFIRST ARG975 :
    MATCH "" -> GOTO ARG979;
    TRUE -> STOP;

STATE USEFIRST ARG977 :
    MATCH "" -> GOTO ARG979;
    TRUE -> STOP;

STATE USEFIRST ARG979 :
    MATCH "i += 1;" -> GOTO ARG980;
    TRUE -> STOP;

STATE USEFIRST ARG980 :
    MATCH "" -> GOTO ARG982;
    TRUE -> STOP;

STATE USEFIRST ARG982 :
    MATCH "[i < n]" -> GOTO ARG983;
    TRUE -> STOP;

STATE USEFIRST ARG983 :
    MATCH "x = x;" -> GOTO ARG1002_1_9;
STATE USEFIRST ARG1002_0_9 :
    MATCH "x = x;" -> GOTO ARG1002_1_9;
STATE USEFIRST ARG1002_1_9 :
    MATCH "y = y;" -> GOTO ARG1002;
    TRUE -> STOP;

STATE USEFIRST ARG1002 :
    MATCH "[!(flag)]" -> GOTO ARG1003;
    MATCH "[flag]" -> GOTO ARG1004;
    TRUE -> STOP;

STATE USEFIRST ARG1003 :
    MATCH "y += 2;" -> GOTO ARG1007;
    TRUE -> STOP;

STATE USEFIRST ARG1004 :
    MATCH "x += 3;" -> GOTO ARG1005;
    TRUE -> STOP;

STATE USEFIRST ARG1005 :
    MATCH "" -> GOTO ARG1009;
    TRUE -> STOP;

STATE USEFIRST ARG1007 :
    MATCH "" -> GOTO ARG1009;
    TRUE -> STOP;

STATE USEFIRST ARG1009 :
    MATCH "i += 1;" -> GOTO ARG1010;
    TRUE -> STOP;

STATE USEFIRST ARG1010 :
    MATCH "" -> GOTO ARG1012;
    TRUE -> STOP;

STATE USEFIRST ARG1012 :
    MATCH "[i < n]" -> GOTO ARG1013;
    TRUE -> STOP;

STATE USEFIRST ARG1013 :
    MATCH "x = x;" -> GOTO ARG1032_1_10;
STATE USEFIRST ARG1032_0_10 :
    MATCH "x = x;" -> GOTO ARG1032_1_10;
STATE USEFIRST ARG1032_1_10 :
    MATCH "y = y;" -> GOTO ARG1032;
    TRUE -> STOP;

STATE USEFIRST ARG1032 :
    MATCH "[!(flag)]" -> GOTO ARG1033;
    MATCH "[flag]" -> GOTO ARG1034;
    TRUE -> STOP;

STATE USEFIRST ARG1033 :
    MATCH "y += 2;" -> GOTO ARG1037;
    TRUE -> STOP;

STATE USEFIRST ARG1034 :
    MATCH "x += 3;" -> GOTO ARG1035;
    TRUE -> STOP;

STATE USEFIRST ARG1035 :
    MATCH "" -> GOTO ARG1039;
    TRUE -> STOP;

STATE USEFIRST ARG1037 :
    MATCH "" -> GOTO ARG1039;
    TRUE -> STOP;

STATE USEFIRST ARG1039 :
    MATCH "i += 1;" -> GOTO ARG1040;
    TRUE -> STOP;

STATE USEFIRST ARG1040 :
    MATCH "" -> GOTO ARG1042;
    TRUE -> STOP;

STATE USEFIRST ARG1042 :
    MATCH "[!(i < n)]" -> GOTO ARG1044;
    TRUE -> STOP;

STATE USEFIRST ARG1044 :
    MATCH "__VERIFIER_assert(x <= 3000003 && y <= 2000002);" -> GOTO ARG1045;
    TRUE -> STOP;

STATE USEFIRST ARG1045 :
    MATCH "[x <= 3000003]" -> GOTO ARG1046;
    MATCH "[!(x <= 3000003)]" -> GOTO ARG1050;
    TRUE -> STOP;

STATE USEFIRST ARG1046 :
    MATCH "[y <= 2000002]" -> GOTO ARG1048;
    MATCH "[!(y <= 2000002)]" -> GOTO ARG1050;
    TRUE -> STOP;

STATE USEFIRST ARG1048 :
    MATCH "x <= 3000003 && y <= 2000002" -> GOTO ARG1053;
    TRUE -> STOP;

STATE USEFIRST ARG1050 :
    MATCH "x <= 3000003 && y <= 2000002" -> GOTO ARG1053;
    TRUE -> STOP;

STATE USEFIRST ARG1053 :
    MATCH "__VERIFIER_assert(x <= 3000003 && y <= 2000002);" -> GOTO ARG1054;
    TRUE -> STOP;

STATE USEFIRST ARG1054 :
    MATCH "" -> GOTO ARG1055;
    TRUE -> STOP;

STATE USEFIRST ARG1055 :
    MATCH "[!(cond)]" -> GOTO ARG1056;
    TRUE -> STOP;

STATE USEFIRST ARG1056 :
    MATCH "ERROR: {reach_error();abort();}" -> ERROR;
    TRUE -> STOP;

STATE USEFIRST ARG1059 :
    TRUE -> STOP;

END AUTOMATON
