digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N20\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
44 [label="44 @ N61\nmain\n" id="44"]
45 [label="45 @ N24\nmain\n" id="45"]
50 [label="50 @ N26\nmain\n" id="50"]
53 [label="53 @ N28\nmain\n" id="53"]
54 [label="54 @ N29\nmain\n" id="54"]
56 [label="56 @ N35\nmain\n" id="56"]
61 [label="61 @ N38\nmain\n" id="61"]
64 [label="64 @ N39\nmain\n" id="64"]
65 [label="65 @ N40\nmain\n" id="65"]
67 [label="67 @ N43\nmain\n" id="67"]
216 [fillcolor="cornflowerblue" label="216 @ N44\nmain\nAbstractionState: ABS15\n" id="216"]
217 [label="217 @ N45\nmain\n" id="217"]
236 [label="236 @ N48\nmain\n" id="236"]
238 [label="238 @ N50\nmain\n" id="238"]
239 [label="239 @ N52\nmain\n" id="239"]
243 [label="243 @ N49\nmain\n" id="243"]
244 [label="244 @ N54\nmain\n" id="244"]
246 [fillcolor="cornflowerblue" label="246 @ N44\nmain\nAbstractionState: ABS17\n" id="246"]
247 [label="247 @ N45\nmain\n" id="247"]
266 [label="266 @ N48\nmain\n" id="266"]
268 [label="268 @ N50\nmain\n" id="268"]
269 [label="269 @ N52\nmain\n" id="269"]
273 [label="273 @ N49\nmain\n" id="273"]
274 [label="274 @ N54\nmain\n" id="274"]
276 [fillcolor="cornflowerblue" label="276 @ N44\nmain\nAbstractionState: ABS19\n" id="276"]
277 [label="277 @ N45\nmain\n" id="277"]
296 [label="296 @ N48\nmain\n" id="296"]
298 [label="298 @ N50\nmain\n" id="298"]
299 [label="299 @ N52\nmain\n" id="299"]
303 [label="303 @ N49\nmain\n" id="303"]
304 [label="304 @ N54\nmain\n" id="304"]
306 [fillcolor="cornflowerblue" label="306 @ N44\nmain\nAbstractionState: ABS21\n" id="306"]
308 [label="308 @ N46\nmain\n" id="308"]
309 [label="309 @ N55\nmain\n" id="309"]
314 [label="314 @ N58\nmain\n" id="314"]
317 [label="317 @ N59\nmain\n" id="317"]
318 [label="318 @ N11\n__VERIFIER_assert entry\n" id="318"]
319 [label="319 @ N12\n__VERIFIER_assert\n" id="319"]
320 [label="320 @ N14\n__VERIFIER_assert\n" id="320"]
323 [fillcolor="red" label="323 @ N15\n__VERIFIER_assert\nAbstractionState: ABS22\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="323"]
310 [label="310 @ N56\nmain\n" id="310"]
312 [label="312 @ N57\nmain\n" id="312"]
297 [label="297 @ N51\nmain\n" id="297"]
301 [label="301 @ N53\nmain\n" id="301"]
267 [label="267 @ N51\nmain\n" id="267"]
271 [label="271 @ N53\nmain\n" id="271"]
237 [label="237 @ N51\nmain\n" id="237"]
241 [label="241 @ N53\nmain\n" id="241"]
57 [label="57 @ N36\nmain\n" id="57"]
59 [label="59 @ N37\nmain\n" id="59"]
47 [label="47 @ N25\nmain\n" id="47"]
49 [label="49 @ N27\nmain\n" id="49"]
0 -> 44 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 44"]
44 -> 45 [color="red" label="Lines 7 - 26: \lvoid abort();\lvoid __assert_fail(const char *, const char *, unsigned int, const char *);\lvoid reach_error();\lvoid assume_abort_if_not(int cond);\lvoid __VERIFIER_assert(int cond);\lvoid __VERIFIER_assume(int);\lint __VERIFIER_nondet_int();\lunsigned int __VERIFIER_nondet_uint();\lint main();\lFunction start dummy edge\lint flag;\lflag = __VERIFIER_nondet_int();\lint __CPAchecker_TMP_0;\l" id="44 -> 45"]
45 -> 47 [color="red" label="Line 26: \l[!(flag == 0)]\l" id="45 -> 47"]
45 -> 50 [label="Line 26: \l[flag == 0]\l" id="45 -> 50"]
50 -> 53 [label="Line 0: \l__CPAchecker_TMP_0 = 1;\l" id="50 -> 53"]
53 -> 54 [color="red" label="Line 26: \l[__CPAchecker_TMP_0 != 0]\l" id="53 -> 54"]
53 -> 55 [label="Line 26: \l[!(__CPAchecker_TMP_0 != 0)]\l" id="53 -> 55"]
54 -> 56 [color="red" label="Lines 27 - 31: \lint i = 0;\lint x = 0;\lint y = 0;\lint n;\ln = __VERIFIER_nondet_int();\lint __CPAchecker_TMP_1;\l" id="54 -> 56"]
56 -> 57 [label="Line 31: \l[n >= 1000]\l" id="56 -> 57"]
56 -> 61 [color="red" label="Line 31: \l[!(n >= 1000)]\l" id="56 -> 61"]
61 -> 64 [color="red" label="Line 0: \l__CPAchecker_TMP_1 = 0;\l" id="61 -> 64"]
64 -> 65 [color="red" label="Line 31: \l[__CPAchecker_TMP_1 != 0]\l" id="64 -> 65"]
64 -> 66 [label="Line 31: \l[!(__CPAchecker_TMP_1 != 0)]\l" id="64 -> 66"]
65 -> 67 [color="red" label="Lines 33 - 33: \lunsigned int a;\lunsigned int b;\lunsigned int r;\l" id="65 -> 67"]
67 -> 216 [color="red" label="Line 35: \lwhile\l" id="67 -> 216"]
216 -> 217 [color="red" label="Line 35: \l[i < n]\l" id="216 -> 217"]
216 -> 218 [label="Line 35: \l[!(i < n)]\l" id="216 -> 218"]
217 -> 236 [color="red" label="Lines 36 - 37: \lx = x;\ly = y;\l" id="217 -> 236"]
236 -> 237 [label="Line 38: \l[flag == 0]\l" id="236 -> 237"]
236 -> 238 [color="red" label="Line 38: \l[!(flag == 0)]\l" id="236 -> 238"]
238 -> 239 [color="red" label="Line 39: \lx = x + 3;\l" id="238 -> 239"]
239 -> 243 [color="red" label="Line 0: \l\l" id="239 -> 243"]
243 -> 244 [color="red" label="Line 43: \li = i + 1;\l" id="243 -> 244"]
244 -> 246 [color="red" label="Line 0: \l\l" id="244 -> 246"]
246 -> 247 [color="red" label="Line 35: \l[i < n]\l" id="246 -> 247"]
246 -> 248 [label="Line 35: \l[!(i < n)]\l" id="246 -> 248"]
247 -> 266 [color="red" label="Lines 36 - 37: \lx = x;\ly = y;\l" id="247 -> 266"]
266 -> 267 [label="Line 38: \l[flag == 0]\l" id="266 -> 267"]
266 -> 268 [color="red" label="Line 38: \l[!(flag == 0)]\l" id="266 -> 268"]
268 -> 269 [color="red" label="Line 39: \lx = x + 3;\l" id="268 -> 269"]
269 -> 273 [color="red" label="Line 0: \l\l" id="269 -> 273"]
273 -> 274 [color="red" label="Line 43: \li = i + 1;\l" id="273 -> 274"]
274 -> 276 [color="red" label="Line 0: \l\l" id="274 -> 276"]
276 -> 277 [color="red" label="Line 35: \l[i < n]\l" id="276 -> 277"]
276 -> 278 [label="Line 35: \l[!(i < n)]\l" id="276 -> 278"]
277 -> 296 [color="red" label="Lines 36 - 37: \lx = x;\ly = y;\l" id="277 -> 296"]
296 -> 297 [label="Line 38: \l[flag == 0]\l" id="296 -> 297"]
296 -> 298 [color="red" label="Line 38: \l[!(flag == 0)]\l" id="296 -> 298"]
298 -> 299 [color="red" label="Line 39: \lx = x + 3;\l" id="298 -> 299"]
299 -> 303 [color="red" label="Line 0: \l\l" id="299 -> 303"]
303 -> 304 [color="red" label="Line 43: \li = i + 1;\l" id="303 -> 304"]
304 -> 306 [color="red" label="Line 0: \l\l" id="304 -> 306"]
306 -> 307 [label="Line 35: \l[i < n]\l" id="306 -> 307"]
306 -> 308 [color="red" label="Line 35: \l[!(i < n)]\l" id="306 -> 308"]
308 -> 309 [color="red" label="Line 45: \lint __CPAchecker_TMP_2;\l" id="308 -> 309"]
309 -> 310 [label="Line 45: \l[x <= 3000003]\l" id="309 -> 310"]
309 -> 314 [color="red" label="Line 45: \l[!(x <= 3000003)]\l" id="309 -> 314"]
314 -> 317 [color="red" label="Line 0: \l__CPAchecker_TMP_2 = 0;\l" id="314 -> 317"]
317 -> 318 [color="red" label="Line 45: \l__VERIFIER_assert(__CPAchecker_TMP_2)\l" id="317 -> 318"]
318 -> 319 [color="red" label="Line 0: \lFunction start dummy edge\l" id="318 -> 319"]
319 -> 320 [color="red" label="Line 15: \l[cond == 0]\l" id="319 -> 320"]
319 -> 321 [label="Line 15: \l[!(cond == 0)]\l" id="319 -> 321"]
320 -> 323 [color="red" label="Line 16: \lLabel: ERROR\l" id="320 -> 323"]
310 -> 312 [label="Line 45: \l[y <= 2000002]\l" id="310 -> 312"]
310 -> 314 [label="Line 45: \l[!(y <= 2000002)]\l" id="310 -> 314"]
312 -> 317 [label="Line 0: \l__CPAchecker_TMP_2 = 1;\l" id="312 -> 317"]
297 -> 301 [label="Line 41: \ly = y + 2;\l" id="297 -> 301"]
301 -> 303 [label="Line 0: \l\l" id="301 -> 303"]
267 -> 271 [label="Line 41: \ly = y + 2;\l" id="267 -> 271"]
271 -> 273 [label="Line 0: \l\l" id="271 -> 273"]
237 -> 241 [label="Line 41: \ly = y + 2;\l" id="237 -> 241"]
241 -> 243 [label="Line 0: \l\l" id="241 -> 243"]
57 -> 59 [label="Line 31: \l[n <= 1000000]\l" id="57 -> 59"]
57 -> 61 [label="Line 31: \l[!(n <= 1000000)]\l" id="57 -> 61"]
59 -> 64 [label="Line 0: \l__CPAchecker_TMP_1 = 1;\l" id="59 -> 64"]
47 -> 49 [color="red" label="Line 26: \l[!(flag == 1)]\l" id="47 -> 49"]
47 -> 50 [label="Line 26: \l[flag == 1]\l" id="47 -> 50"]
49 -> 53 [color="red" label="Line 0: \l__CPAchecker_TMP_0 = 0;\l" id="49 -> 53"]
}
