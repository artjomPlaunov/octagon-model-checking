digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N141\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
165 [label="165 @ N171\nmain\n" id="165"]
166 [label="166 @ N150\nmain\n" id="166"]
168 [fillcolor="cornflowerblue" label="168 @ N151\nmain\nAbstractionState: ABS7: true\n" id="168"]
170 [label="170 @ N153\nmain\n" id="170"]
171 [label="171 @ N167\nmain\n" id="171"]
172 [label="172 @ N20\nmp_add entry\n" id="172"]
173 [label="173 @ N48\nmp_add\n" id="173"]
188 [label="188 @ N49\nmp_add\n" id="188"]
189 [label="189 @ N58\nmp_add\n" id="189"]
204 [label="204 @ N59\nmp_add\n" id="204"]
205 [label="205 @ N69\nmp_add\n" id="205"]
330 [fillcolor="cornflowerblue" label="330 @ N70\nmp_add\nAbstractionState: ABS13\n" id="330"]
332 [label="332 @ N74\nmp_add\n" id="332"]
334 [label="334 @ N73\nmp_add\n" id="334"]
337 [label="337 @ N72\nmp_add\n" id="337"]
340 [fillcolor="cornflowerblue" label="340 @ N122\nmp_add\nAbstractionState: ABS14\n" id="340"]
341 [label="341 @ N123\nmp_add\n" id="341"]
350 [label="350 @ N125\nmp_add\n" id="350"]
355 [label="355 @ N128\nmp_add\n" id="355"]
360 [label="360 @ N131\nmp_add\n" id="360"]
365 [label="365 @ N134\nmp_add\n" id="365"]
366 [label="366 @ N137\nmp_add\n" id="366"]
368 [fillcolor="cornflowerblue" label="368 @ N122\nmp_add\nAbstractionState: ABS15\n" id="368"]
370 [label="370 @ N124\nmp_add\n" id="370"]
371 [label="371 @ N138\nmp_add\n" id="371"]
372 [label="372 @ N19\nmp_add exit\n" id="372"]
373 [label="373 @ N168\nmain\n" id="373"]
683 [label="683 @ N11\n__VERIFIER_assert entry\n" id="683"]
684 [label="684 @ N12\n__VERIFIER_assert\n" id="684"]
685 [label="685 @ N14\n__VERIFIER_assert\n" id="685"]
688 [fillcolor="red" label="688 @ N15\n__VERIFIER_assert\nAbstractionState: ABS24\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="688"]
361 [label="361 @ N135\nmp_add\n" id="361"]
363 [label="363 @ N136\nmp_add\n" id="363"]
356 [label="356 @ N132\nmp_add\n" id="356"]
358 [label="358 @ N133\nmp_add\n" id="358"]
351 [label="351 @ N129\nmp_add\n" id="351"]
353 [label="353 @ N130\nmp_add\n" id="353"]
346 [label="346 @ N126\nmp_add\n" id="346"]
348 [label="348 @ N127\nmp_add\n" id="348"]
190 [label="190 @ N60\nmp_add\n" id="190"]
192 [label="192 @ N61\nmp_add\n" id="192"]
194 [label="194 @ N62\nmp_add\n" id="194"]
193 [label="193 @ N63\nmp_add\n" id="193"]
197 [label="197 @ N64\nmp_add\n" id="197"]
199 [label="199 @ N65\nmp_add\n" id="199"]
198 [label="198 @ N66\nmp_add\n" id="198"]
202 [label="202 @ N67\nmp_add\n" id="202"]
174 [label="174 @ N50\nmp_add\n" id="174"]
176 [label="176 @ N51\nmp_add\n" id="176"]
178 [label="178 @ N52\nmp_add\n" id="178"]
177 [label="177 @ N53\nmp_add\n" id="177"]
181 [label="181 @ N54\nmp_add\n" id="181"]
183 [label="183 @ N55\nmp_add\n" id="183"]
182 [label="182 @ N56\nmp_add\n" id="182"]
186 [label="186 @ N57\nmp_add\n" id="186"]
0 -> 165 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 165"]
165 -> 166 [color="red" label="Lines 7 - 112: \lvoid abort();\lvoid __assert_fail(const char *, const char *, unsigned int, const char *);\lvoid reach_error();\lvoid assume_abort_if_not(int cond);\lvoid __VERIFIER_assert(int cond);\lvoid __VERIFIER_assume(int);\lint __VERIFIER_nondet_int();\lunsigned int __VERIFIER_nondet_uint();\lunsigned int mp_add(unsigned int a, unsigned int b);\lint main();\lFunction start dummy edge\lint a;\lint b;\lint r;\lint A[2048] = { 0 };\lint B[2048] = { 0 };\lint i;\lint tmp;\li = 0;\l" id="165 -> 166"]
166 -> 168 [color="red" label="Line 113: \lwhile\l" id="166 -> 168"]
168 -> 169 [label="Line 113: \l[i < 2048]\l" id="168 -> 169"]
168 -> 170 [color="red" label="Line 113: \l[!(i < 2048)]\l" id="168 -> 170"]
170 -> 171 [color="red" label="Lines 121 - 122: \la = __VERIFIER_nondet_uint();\lb = 234770789;\l" id="170 -> 171"]
171 -> 172 [color="red" label="Line 123: \lmp_add(a, b)\l" id="171 -> 172"]
172 -> 173 [color="red" label="Lines 0 - 42: \lFunction start dummy edge\lunsigned char a0;\lunsigned char a1;\lunsigned char a2;\lunsigned char a3;\lunsigned char b0;\lunsigned char b1;\lunsigned char b2;\lunsigned char b3;\lunsigned char r0;\lunsigned char r1;\lunsigned char r2;\lunsigned char r3;\lunsigned short carry;\lunsigned short partial_sum;\lunsigned int r;\lunsigned char i;\lunsigned char na;\lunsigned char nb;\la0 = a;\la1 = a >> 8;\la2 = a >> 16U;\la3 = a >> 24U;\lb0 = b;\lb1 = b >> 8U;\lb2 = b >> 16U;\lb3 = b >> 24U;\lna = 4U;\l" id="172 -> 173"]
173 -> 174 [label="Line 43: \l[a3 == 0U]\l" id="173 -> 174"]
173 -> 188 [color="red" label="Line 43: \l[!(a3 == 0U)]\l" id="173 -> 188"]
188 -> 189 [color="red" label="Line 52: \lnb = 4U;\l" id="188 -> 189"]
189 -> 190 [label="Line 53: \l[b3 == 0U]\l" id="189 -> 190"]
189 -> 204 [color="red" label="Line 53: \l[!(b3 == 0U)]\l" id="189 -> 204"]
204 -> 205 [color="red" label="Lines 62 - 63: \lcarry = 0U;\li = 0U;\l" id="204 -> 205"]
205 -> 330 [color="red" label="Line 64: \lwhile\l" id="205 -> 330"]
330 -> 332 [color="red" label="Line 64: \l[!(i < na)]\l" id="330 -> 332"]
330 -> 338 [label="Line 64: \l[i < na]\l" id="330 -> 338"]
332 -> 334 [color="red" label="Line 64: \l[!(i < nb)]\l" id="332 -> 334"]
332 -> 338 [label="Line 64: \l[i < nb]\l" id="332 -> 338"]
334 -> 337 [color="red" label="Line 64: \l[!(carry != 0U)]\l" id="334 -> 337"]
334 -> 338 [label="Line 64: \l[carry != 0U]\l" id="334 -> 338"]
337 -> 340 [color="red" label="Line 91: \lwhile\l" id="337 -> 340"]
340 -> 341 [color="red" label="Line 91: \l[i < 4U]\l" id="340 -> 341"]
340 -> 342 [label="Line 91: \l[!(i < 4U)]\l" id="340 -> 342"]
341 -> 346 [label="Line 92: \l[i == 0U]\l" id="341 -> 346"]
341 -> 350 [color="red" label="Line 92: \l[!(i == 0U)]\l" id="341 -> 350"]
350 -> 351 [label="Line 93: \l[i == 1U]\l" id="350 -> 351"]
350 -> 355 [color="red" label="Line 93: \l[!(i == 1U)]\l" id="350 -> 355"]
355 -> 356 [label="Line 94: \l[i == 2U]\l" id="355 -> 356"]
355 -> 360 [color="red" label="Line 94: \l[!(i == 2U)]\l" id="355 -> 360"]
360 -> 361 [label="Line 95: \l[i == 3U]\l" id="360 -> 361"]
360 -> 365 [color="red" label="Line 95: \l[!(i == 3U)]\l" id="360 -> 365"]
365 -> 366 [color="red" label="Line 97: \li = i + 1U;\l" id="365 -> 366"]
366 -> 368 [color="red" label="Line 0: \l\l" id="366 -> 368"]
368 -> 369 [label="Line 91: \l[i < 4U]\l" id="368 -> 369"]
368 -> 370 [color="red" label="Line 91: \l[!(i < 4U)]\l" id="368 -> 370"]
370 -> 371 [color="red" label="Line 100: \lr = ((r0 | (r1 << 8U)) | (r2 << 16U)) | (((unsigned int)r3) << 24U);\l" id="370 -> 371"]
371 -> 372 [color="red" label="Line 102: \lreturn r;\l" id="371 -> 372"]
372 -> 373 [color="red" label="Line 123: \lReturn edge from mp_add to main: r = mp_add(a, b);\l" id="372 -> 373"]
373 -> 683 [color="red" label="Line 125: \l__VERIFIER_assert(r == (a + b))\l" id="373 -> 683"]
683 -> 684 [color="red" label="Line 0: \lFunction start dummy edge\l" id="683 -> 684"]
684 -> 685 [color="red" label="Line 15: \l[cond == 0]\l" id="684 -> 685"]
684 -> 686 [label="Line 15: \l[!(cond == 0)]\l" id="684 -> 686"]
685 -> 688 [color="red" label="Line 16: \lLabel: ERROR\l" id="685 -> 688"]
361 -> 363 [label="Line 95: \lr3 = 0U;\l" id="361 -> 363"]
363 -> 365 [label="Line 0: \l\l" id="363 -> 365"]
356 -> 358 [label="Line 94: \lr2 = 0U;\l" id="356 -> 358"]
358 -> 360 [label="Line 0: \l\l" id="358 -> 360"]
351 -> 353 [label="Line 93: \lr1 = 0U;\l" id="351 -> 353"]
353 -> 355 [label="Line 0: \l\l" id="353 -> 355"]
346 -> 348 [label="Line 92: \lr0 = 0U;\l" id="346 -> 348"]
348 -> 350 [label="Line 0: \l\l" id="348 -> 350"]
190 -> 192 [label="Line 54: \lnb = nb - 1;\l" id="190 -> 192"]
192 -> 193 [label="Line 55: \l[b2 == 0U]\l" id="192 -> 193"]
192 -> 194 [label="Line 55: \l[!(b2 == 0U)]\l" id="192 -> 194"]
194 -> 204 [label="Line 0: \l\l" id="194 -> 204"]
193 -> 197 [label="Line 56: \lnb = nb - 1;\l" id="193 -> 197"]
197 -> 198 [label="Line 57: \l[b1 == 0U]\l" id="197 -> 198"]
197 -> 199 [label="Line 57: \l[!(b1 == 0U)]\l" id="197 -> 199"]
199 -> 204 [label="Line 0: \l\l" id="199 -> 204"]
198 -> 202 [label="Line 58: \lnb = nb - 1;\l" id="198 -> 202"]
202 -> 204 [label="Line 0: \l\l" id="202 -> 204"]
174 -> 176 [label="Line 44: \lna = na - 1;\l" id="174 -> 176"]
176 -> 177 [label="Line 45: \l[a2 == 0U]\l" id="176 -> 177"]
176 -> 178 [label="Line 45: \l[!(a2 == 0U)]\l" id="176 -> 178"]
178 -> 188 [label="Line 0: \l\l" id="178 -> 188"]
177 -> 181 [label="Line 46: \lna = na - 1;\l" id="177 -> 181"]
181 -> 182 [label="Line 47: \l[a1 == 0U]\l" id="181 -> 182"]
181 -> 183 [label="Line 47: \l[!(a1 == 0U)]\l" id="181 -> 183"]
183 -> 188 [label="Line 0: \l\l" id="183 -> 188"]
182 -> 186 [label="Line 48: \lna = na - 1;\l" id="182 -> 186"]
186 -> 188 [label="Line 0: \l\l" id="186 -> 188"]
}
