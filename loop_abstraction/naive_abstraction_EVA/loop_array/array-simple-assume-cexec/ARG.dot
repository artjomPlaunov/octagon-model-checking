digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N20\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
13 [label="13 @ N42\nmain\n" id="13"]
14 [label="14 @ N26\nmain\n" id="14"]
26 [fillcolor="cornflowerblue" label="26 @ N27\nmain\nAbstractionState: ABS5\n" id="26"]
28 [label="28 @ N29\nmain\n" id="28"]
29 [label="29 @ N11\n__VERIFIER_assert entry\n" id="29"]
30 [label="30 @ N12\n__VERIFIER_assert\n" id="30"]
32 [label="32 @ N13\n__VERIFIER_assert\n" id="32"]
34 [label="34 @ N10\n__VERIFIER_assert exit\n" id="34"]
35 [label="35 @ N41\nmain\n" id="35"]
36 [label="36 @ N19\nmain exit\n" id="36"]
31 [label="31 @ N14\n__VERIFIER_assert\n" id="31"]
27 [label="27 @ N28\nmain\n" id="27"]
37 [label="37 @ N30\nmain\n" id="37"]
48 [label="48 @ N33\nmain\n" id="48"]
51 [label="51 @ N36\nmain\n" id="51"]
53 [label="53 @ N54\nmain\n" id="53"]
52 [label="52 @ N37\nmain\n" id="52"]
54 [label="54 @ N40\nmain\n" id="54"]
56 [fillcolor="green" label="56 @ N27\nmain\nAbstractionState: ABS7\n" id="56"]
38 [label="38 @ N35\nmain\n" id="38"]
40 [label="40 @ N34\nmain\n" id="40"]
43 [label="43 @ N31\nmain\n" id="43"]
46 [label="46 @ N32\nmain\n" id="46"]
0 -> 13 [label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 13"]
13 -> 14 [label="Lines 7 - 29: \lvoid abort();\lvoid __assert_fail(const char *, const char *, unsigned int, const char *);\lvoid reach_error();\lvoid assume_abort_if_not(int cond);\lvoid __VERIFIER_assert(int cond);\lvoid __VERIFIER_assume(int);\lint __VERIFIER_nondet_int();\lunsigned int __VERIFIER_nondet_uint();\lint main();\lFunction start dummy edge\lint A[2048] = { 0 };\lint B[2048] = { 0 };\lint i;\lint tmp;\li = 0;\l" id="13 -> 14"]
14 -> 26 [label="Line 30: \lwhile\l" id="14 -> 26"]
56 -> 26 [style="dashed" weight="0" label="covered by"]
26 -> 27 [label="Line 30: \l[i < 2048]\l" id="26 -> 27"]
26 -> 28 [label="Line 30: \l[!(i < 2048)]\l" id="26 -> 28"]
28 -> 29 [label="Line 39: \l__VERIFIER_assert((A[1024]) == (B[1024]))\l" id="28 -> 29"]
29 -> 30 [label="Line 0: \lFunction start dummy edge\l" id="29 -> 30"]
30 -> 31 [label="Line 15: \l[cond == 0]\l" id="30 -> 31"]
30 -> 32 [label="Line 15: \l[!(cond == 0)]\l" id="30 -> 32"]
32 -> 34 [label="Line 18: \lreturn;\l" id="32 -> 34"]
34 -> 35 [label="Line 39: \lReturn edge from __VERIFIER_assert to main: __VERIFIER_assert((A[1024]) == (B[1024]));\l" id="34 -> 35"]
35 -> 36 [label="Line 0: \ldefault return\l" id="35 -> 36"]
27 -> 37 [label="Line 31: \lint __CPAchecker_TMP_0;\l" id="27 -> 37"]
37 -> 38 [label="Line 31: \l[i >= 0]\l" id="37 -> 38"]
37 -> 48 [label="Line 31: \l[!(i >= 0)]\l" id="37 -> 48"]
48 -> 51 [label="Line 0: \l__CPAchecker_TMP_0 = 0;\l" id="48 -> 51"]
51 -> 52 [label="Line 31: \l[__CPAchecker_TMP_0 != 0]\l" id="51 -> 52"]
51 -> 53 [label="Line 31: \l[!(__CPAchecker_TMP_0 != 0)]\l" id="51 -> 53"]
52 -> 54 [label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="52 -> 54"]
54 -> 56 [label="Line 0: \l\l" id="54 -> 56"]
38 -> 40 [label="Line 31: \l[i < 2048]\l" id="38 -> 40"]
38 -> 48 [label="Line 31: \l[!(i < 2048)]\l" id="38 -> 48"]
40 -> 43 [label="Line 31: \l[(A[i]) == 0]\l" id="40 -> 43"]
40 -> 48 [label="Line 31: \l[!((A[i]) == 0)]\l" id="40 -> 48"]
43 -> 46 [label="Line 31: \l[(B[i]) == 0]\l" id="43 -> 46"]
43 -> 48 [label="Line 31: \l[!((B[i]) == 0)]\l" id="43 -> 48"]
46 -> 51 [label="Line 0: \l__CPAchecker_TMP_0 = 1;\l" id="46 -> 51"]
}
