IntBool

[assume_abort_if_not::cond]

IntEq

[]

IntAdd

[main::i, mp_add::i, mp_add::na, mp_add::nb]

IntOverflow

[mp_add::r, mp_add::r0, mp_add::partial_sum, mp_add::r3, mp_add::r1, mp_add::r2, mp_add::i, main::b, main::a, mp_add::b0, mp_add::__retval__, mp_add::b3, mp_add::b1, main::i, mp_add::b2, main::tmp, __VERIFIER_assert::cond, main::r, mp_add::carry, main::B[i], mp_add::a, mp_add::b, mp_add::a2, mp_add::a3, mp_add::a0, mp_add::a1, mp_add::na, mp_add::nb]

ALL

[mp_add::r0, mp_add::r, mp_add::partial_sum, mp_add::r3, mp_add::r1, mp_add::r2, mp_add::i, main::b, main::a, mp_add::__retval__, mp_add::b0, mp_add::b3, mp_add::b1, main::i, mp_add::b2, main::tmp, __VERIFIER_assert::cond, assume_abort_if_not::cond, main::r, mp_add::carry, main::B[i], main::B, main::A, mp_add::a, mp_add::b, mp_add::a2, mp_add::a3, mp_add::a0, mp_add::a1, mp_add::na, mp_add::nb]

DEPENDENCIES

[[__VERIFIER_assert::cond, main::a, main::b, main::r, mp_add::__retval__, mp_add::a, mp_add::a0, mp_add::a1, mp_add::a2, mp_add::a3, mp_add::b, mp_add::b0, mp_add::b1, mp_add::b2, mp_add::b3, mp_add::carry, mp_add::partial_sum, mp_add::r, mp_add::r0, mp_add::r1, mp_add::r2, mp_add::r3] --> [0, 1, 8, 16, 24, 255, 234770789],
[assume_abort_if_not::cond] --> [0],
[main::A] --> [2048],
[main::B] --> [2048],
[main::i] --> [0, 1, 2048],
[main::B[i], main::tmp] --> [],
[mp_add::i, mp_add::na, mp_add::nb] --> [0, 1, 2, 3, 4]]

RELEVANT VARS

[mp_add::r, mp_add::r0, mp_add::partial_sum, mp_add::r3, mp_add::r1, mp_add::r2, mp_add::i, main::b, main::a, mp_add::b0, mp_add::__retval__, mp_add::b3, mp_add::b1, mp_add::b2, main::i, main::tmp, __VERIFIER_assert::cond, assume_abort_if_not::cond, mp_add::carry, main::r, main::B, main::A, mp_add::a, mp_add::b, mp_add::a2, mp_add::a3, mp_add::a0, mp_add::a1, mp_add::na, mp_add::nb]

RELEVANT FIELDS

{}
