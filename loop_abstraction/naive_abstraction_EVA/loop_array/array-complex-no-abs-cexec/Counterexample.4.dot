digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N141\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
165 [label="165 @ N162\nmain\n" id="165"]
166 [label="166 @ N150\nmain\n" id="166"]
168 [fillcolor="cornflowerblue" label="168 @ N151\nmain\nAbstractionState: ABS7: true\n" id="168"]
170 [label="170 @ N153\nmain\n" id="170"]
171 [label="171 @ N158\nmain\n" id="171"]
172 [label="172 @ N20\nmp_add entry\n" id="172"]
173 [label="173 @ N48\nmp_add\n" id="173"]
188 [label="188 @ N49\nmp_add\n" id="188"]
189 [label="189 @ N58\nmp_add\n" id="189"]
204 [label="204 @ N59\nmp_add\n" id="204"]
205 [label="205 @ N69\nmp_add\n" id="205"]
690 [fillcolor="cornflowerblue" label="690 @ N70\nmp_add\nAbstractionState: ABS25\n" id="690"]
692 [label="692 @ N74\nmp_add\n" id="692"]
694 [label="694 @ N73\nmp_add\n" id="694"]
697 [label="697 @ N72\nmp_add\n" id="697"]
700 [fillcolor="cornflowerblue" label="700 @ N122\nmp_add\nAbstractionState: ABS26\n" id="700"]
701 [label="701 @ N123\nmp_add\n" id="701"]
710 [label="710 @ N125\nmp_add\n" id="710"]
715 [label="715 @ N128\nmp_add\n" id="715"]
720 [label="720 @ N131\nmp_add\n" id="720"]
725 [label="725 @ N134\nmp_add\n" id="725"]
726 [label="726 @ N137\nmp_add\n" id="726"]
728 [fillcolor="cornflowerblue" label="728 @ N122\nmp_add\nAbstractionState: ABS27\n" id="728"]
729 [label="729 @ N123\nmp_add\n" id="729"]
738 [label="738 @ N125\nmp_add\n" id="738"]
743 [label="743 @ N128\nmp_add\n" id="743"]
748 [label="748 @ N131\nmp_add\n" id="748"]
753 [label="753 @ N134\nmp_add\n" id="753"]
754 [label="754 @ N137\nmp_add\n" id="754"]
756 [fillcolor="cornflowerblue" label="756 @ N122\nmp_add\nAbstractionState: ABS28\n" id="756"]
758 [label="758 @ N124\nmp_add\n" id="758"]
759 [label="759 @ N138\nmp_add\n" id="759"]
760 [label="760 @ N19\nmp_add exit\n" id="760"]
761 [label="761 @ N159\nmain\n" id="761"]
1106 [label="1106 @ N11\n__VERIFIER_assert entry\n" id="1106"]
1107 [label="1107 @ N12\n__VERIFIER_assert\n" id="1107"]
1108 [label="1108 @ N14\n__VERIFIER_assert\n" id="1108"]
1111 [fillcolor="red" label="1111 @ N15\n__VERIFIER_assert\nAbstractionState: ABS39\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="1111"]
749 [label="749 @ N135\nmp_add\n" id="749"]
751 [label="751 @ N136\nmp_add\n" id="751"]
744 [label="744 @ N132\nmp_add\n" id="744"]
746 [label="746 @ N133\nmp_add\n" id="746"]
739 [label="739 @ N129\nmp_add\n" id="739"]
741 [label="741 @ N130\nmp_add\n" id="741"]
734 [label="734 @ N126\nmp_add\n" id="734"]
736 [label="736 @ N127\nmp_add\n" id="736"]
721 [label="721 @ N135\nmp_add\n" id="721"]
723 [label="723 @ N136\nmp_add\n" id="723"]
716 [label="716 @ N132\nmp_add\n" id="716"]
718 [label="718 @ N133\nmp_add\n" id="718"]
711 [label="711 @ N129\nmp_add\n" id="711"]
713 [label="713 @ N130\nmp_add\n" id="713"]
706 [label="706 @ N126\nmp_add\n" id="706"]
708 [label="708 @ N127\nmp_add\n" id="708"]
190 [label="190 @ N60\nmp_add\n" id="190"]
192 [label="192 @ N61\nmp_add\n" id="192"]
194 [label="194 @ N62\nmp_add\n" id="194"]
193 [label="193 @ N63\nmp_add\n" id="193"]
197 [label="197 @ N64\nmp_add\n" id="197"]
199 [label="199 @ N65\nmp_add\n" id="199"]
198 [label="198 @ N66\nmp_add\n" id="198"]
202 [label="202 @ N67\nmp_add\n" id="202"]
174 [label="174 @ N50\nmp_add\n" id="174"]
176 [label="176 @ N51\nmp_add\n" id="176"]
178 [label="178 @ N52\nmp_add\n" id="178"]
177 [label="177 @ N53\nmp_add\n" id="177"]
181 [label="181 @ N54\nmp_add\n" id="181"]
183 [label="183 @ N55\nmp_add\n" id="183"]
182 [label="182 @ N56\nmp_add\n" id="182"]
186 [label="186 @ N57\nmp_add\n" id="186"]
0 -> 165 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 165"]
165 -> 166 [color="red" label="Lines 7 - 112: \lvoid abort();\lvoid __assert_fail(const char *, const char *, unsigned int, const char *);\lvoid reach_error();\lvoid assume_abort_if_not(int cond);\lvoid __VERIFIER_assert(int cond);\lvoid __VERIFIER_assume(int);\lint __VERIFIER_nondet_int();\lunsigned int __VERIFIER_nondet_uint();\lunsigned int mp_add(unsigned int a, unsigned int b);\lint main();\lFunction start dummy edge\lint a;\lint b;\lint r;\lint A[2048] = { 0 };\lint B[2048] = { 0 };\lint i;\lint tmp;\li = 0;\l" id="165 -> 166"]
166 -> 168 [color="red" label="Line 113: \lwhile\l" id="166 -> 168"]
168 -> 169 [label="Line 113: \l[i < 2048]\l" id="168 -> 169"]
168 -> 170 [color="red" label="Line 113: \l[!(i < 2048)]\l" id="168 -> 170"]
170 -> 171 [color="red" label="Lines 121 - 122: \la = __VERIFIER_nondet_uint();\lb = 234770789;\l" id="170 -> 171"]
171 -> 172 [color="red" label="Line 123: \lmp_add(a, b)\l" id="171 -> 172"]
172 -> 173 [color="red" label="Lines 0 - 42: \lFunction start dummy edge\lunsigned char a0;\lunsigned char a1;\lunsigned char a2;\lunsigned char a3;\lunsigned char b0;\lunsigned char b1;\lunsigned char b2;\lunsigned char b3;\lunsigned char r0;\lunsigned char r1;\lunsigned char r2;\lunsigned char r3;\lunsigned short carry;\lunsigned short partial_sum;\lunsigned int r;\lunsigned char i;\lunsigned char na;\lunsigned char nb;\la0 = a;\la1 = a >> 8;\la2 = a >> 16U;\la3 = a >> 24U;\lb0 = b;\lb1 = b >> 8U;\lb2 = b >> 16U;\lb3 = b >> 24U;\lna = 4U;\l" id="172 -> 173"]
173 -> 174 [label="Line 43: \l[a3 == 0U]\l" id="173 -> 174"]
173 -> 188 [color="red" label="Line 43: \l[!(a3 == 0U)]\l" id="173 -> 188"]
188 -> 189 [color="red" label="Line 52: \lnb = 4U;\l" id="188 -> 189"]
189 -> 190 [label="Line 53: \l[b3 == 0U]\l" id="189 -> 190"]
189 -> 204 [color="red" label="Line 53: \l[!(b3 == 0U)]\l" id="189 -> 204"]
204 -> 205 [color="red" label="Lines 62 - 63: \lcarry = 0U;\li = 0U;\l" id="204 -> 205"]
205 -> 690 [color="red" label="Line 64: \lwhile\l" id="205 -> 690"]
690 -> 692 [color="red" label="Line 64: \l[!(i < na)]\l" id="690 -> 692"]
690 -> 698 [label="Line 64: \l[i < na]\l" id="690 -> 698"]
692 -> 694 [color="red" label="Line 64: \l[!(i < nb)]\l" id="692 -> 694"]
692 -> 698 [label="Line 64: \l[i < nb]\l" id="692 -> 698"]
694 -> 697 [color="red" label="Line 64: \l[!(carry != 0U)]\l" id="694 -> 697"]
694 -> 698 [label="Line 64: \l[carry != 0U]\l" id="694 -> 698"]
697 -> 700 [color="red" label="Line 91: \lwhile\l" id="697 -> 700"]
700 -> 701 [color="red" label="Line 91: \l[i < 4U]\l" id="700 -> 701"]
700 -> 702 [label="Line 91: \l[!(i < 4U)]\l" id="700 -> 702"]
701 -> 706 [label="Line 92: \l[i == 0U]\l" id="701 -> 706"]
701 -> 710 [color="red" label="Line 92: \l[!(i == 0U)]\l" id="701 -> 710"]
710 -> 711 [label="Line 93: \l[i == 1U]\l" id="710 -> 711"]
710 -> 715 [color="red" label="Line 93: \l[!(i == 1U)]\l" id="710 -> 715"]
715 -> 716 [label="Line 94: \l[i == 2U]\l" id="715 -> 716"]
715 -> 720 [color="red" label="Line 94: \l[!(i == 2U)]\l" id="715 -> 720"]
720 -> 721 [label="Line 95: \l[i == 3U]\l" id="720 -> 721"]
720 -> 725 [color="red" label="Line 95: \l[!(i == 3U)]\l" id="720 -> 725"]
725 -> 726 [color="red" label="Line 97: \li = i + 1U;\l" id="725 -> 726"]
726 -> 728 [color="red" label="Line 0: \l\l" id="726 -> 728"]
728 -> 729 [color="red" label="Line 91: \l[i < 4U]\l" id="728 -> 729"]
728 -> 730 [label="Line 91: \l[!(i < 4U)]\l" id="728 -> 730"]
729 -> 734 [label="Line 92: \l[i == 0U]\l" id="729 -> 734"]
729 -> 738 [color="red" label="Line 92: \l[!(i == 0U)]\l" id="729 -> 738"]
738 -> 739 [label="Line 93: \l[i == 1U]\l" id="738 -> 739"]
738 -> 743 [color="red" label="Line 93: \l[!(i == 1U)]\l" id="738 -> 743"]
743 -> 744 [label="Line 94: \l[i == 2U]\l" id="743 -> 744"]
743 -> 748 [color="red" label="Line 94: \l[!(i == 2U)]\l" id="743 -> 748"]
748 -> 749 [label="Line 95: \l[i == 3U]\l" id="748 -> 749"]
748 -> 753 [color="red" label="Line 95: \l[!(i == 3U)]\l" id="748 -> 753"]
753 -> 754 [color="red" label="Line 97: \li = i + 1U;\l" id="753 -> 754"]
754 -> 756 [color="red" label="Line 0: \l\l" id="754 -> 756"]
756 -> 757 [label="Line 91: \l[i < 4U]\l" id="756 -> 757"]
756 -> 758 [color="red" label="Line 91: \l[!(i < 4U)]\l" id="756 -> 758"]
758 -> 759 [color="red" label="Line 100: \lr = ((r0 | (r1 << 8U)) | (r2 << 16U)) | (((unsigned int)r3) << 24U);\l" id="758 -> 759"]
759 -> 760 [color="red" label="Line 102: \lreturn r;\l" id="759 -> 760"]
760 -> 761 [color="red" label="Line 123: \lReturn edge from mp_add to main: r = mp_add(a, b);\l" id="760 -> 761"]
761 -> 1106 [color="red" label="Line 125: \l__VERIFIER_assert(r == (a + b))\l" id="761 -> 1106"]
1106 -> 1107 [color="red" label="Line 0: \lFunction start dummy edge\l" id="1106 -> 1107"]
1107 -> 1108 [color="red" label="Line 15: \l[cond == 0]\l" id="1107 -> 1108"]
1107 -> 1109 [label="Line 15: \l[!(cond == 0)]\l" id="1107 -> 1109"]
1108 -> 1111 [color="red" label="Line 16: \lLabel: ERROR\l" id="1108 -> 1111"]
749 -> 751 [label="Line 95: \lr3 = 0U;\l" id="749 -> 751"]
751 -> 753 [label="Line 0: \l\l" id="751 -> 753"]
744 -> 746 [label="Line 94: \lr2 = 0U;\l" id="744 -> 746"]
746 -> 748 [label="Line 0: \l\l" id="746 -> 748"]
739 -> 741 [label="Line 93: \lr1 = 0U;\l" id="739 -> 741"]
741 -> 743 [label="Line 0: \l\l" id="741 -> 743"]
734 -> 736 [label="Line 92: \lr0 = 0U;\l" id="734 -> 736"]
736 -> 738 [label="Line 0: \l\l" id="736 -> 738"]
721 -> 723 [label="Line 95: \lr3 = 0U;\l" id="721 -> 723"]
723 -> 725 [label="Line 0: \l\l" id="723 -> 725"]
716 -> 718 [label="Line 94: \lr2 = 0U;\l" id="716 -> 718"]
718 -> 720 [label="Line 0: \l\l" id="718 -> 720"]
711 -> 713 [label="Line 93: \lr1 = 0U;\l" id="711 -> 713"]
713 -> 715 [label="Line 0: \l\l" id="713 -> 715"]
706 -> 708 [label="Line 92: \lr0 = 0U;\l" id="706 -> 708"]
708 -> 710 [label="Line 0: \l\l" id="708 -> 710"]
190 -> 192 [label="Line 54: \lnb = nb - 1;\l" id="190 -> 192"]
192 -> 193 [label="Line 55: \l[b2 == 0U]\l" id="192 -> 193"]
192 -> 194 [label="Line 55: \l[!(b2 == 0U)]\l" id="192 -> 194"]
194 -> 204 [label="Line 0: \l\l" id="194 -> 204"]
193 -> 197 [label="Line 56: \lnb = nb - 1;\l" id="193 -> 197"]
197 -> 198 [label="Line 57: \l[b1 == 0U]\l" id="197 -> 198"]
197 -> 199 [label="Line 57: \l[!(b1 == 0U)]\l" id="197 -> 199"]
199 -> 204 [label="Line 0: \l\l" id="199 -> 204"]
198 -> 202 [label="Line 58: \lnb = nb - 1;\l" id="198 -> 202"]
202 -> 204 [label="Line 0: \l\l" id="202 -> 204"]
174 -> 176 [label="Line 44: \lna = na - 1;\l" id="174 -> 176"]
176 -> 177 [label="Line 45: \l[a2 == 0U]\l" id="176 -> 177"]
176 -> 178 [label="Line 45: \l[!(a2 == 0U)]\l" id="176 -> 178"]
178 -> 188 [label="Line 0: \l\l" id="178 -> 188"]
177 -> 181 [label="Line 46: \lna = na - 1;\l" id="177 -> 181"]
181 -> 182 [label="Line 47: \l[a1 == 0U]\l" id="181 -> 182"]
181 -> 183 [label="Line 47: \l[!(a1 == 0U)]\l" id="181 -> 183"]
183 -> 188 [label="Line 0: \l\l" id="183 -> 188"]
182 -> 186 [label="Line 48: \lna = na - 1;\l" id="182 -> 186"]
186 -> 188 [label="Line 0: \l\l" id="186 -> 188"]
}
