digraph main {
141 [shape="circle" label="N141\n32"]
162 [shape="circle" label="N162\n31"]
151 [shape="doublecircle" label="N151\n11"]
152 [shape="circle" label="N152\n3"]
153 [shape="circle" label="N153\n10"]
158 [shape="circle" label="N158\n8"]
159 [shape="circle" label="N159\n7"]
160 [shape="circle" label="N160\n6"]
161 [shape="circle" label="N161\n5"]
154 [shape="circle" label="N154\n2"]
140 [shape="circle" label="N140\n4"]
162 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">162</td><td align="left">void abort();</td></tr><tr><td align="right">163</td><td align="left">void __assert_fail(const char *, const char *, unsigned int, const char *);</td></tr><tr><td align="right">164</td><td align="left">void reach_error();</td></tr><tr><td align="right">165</td><td align="left">void assume_abort_if_not(int cond);</td></tr><tr><td align="right">166</td><td align="left">void __VERIFIER_assert(int cond);</td></tr><tr><td align="right">167</td><td align="left">void __VERIFIER_assume(int);</td></tr><tr><td align="right">168</td><td align="left">int __VERIFIER_nondet_int();</td></tr><tr><td align="right">169</td><td align="left">unsigned int __VERIFIER_nondet_uint();</td></tr><tr><td align="right">170</td><td align="left">unsigned int mp_add(unsigned int a, unsigned int b);</td></tr><tr><td align="right">171</td><td align="left">int main();</td></tr><tr><td align="right">172</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">142</td><td align="left">int a;</td></tr><tr><td align="right">143</td><td align="left">int b;</td></tr><tr><td align="right">144</td><td align="left">int r;</td></tr><tr><td align="right">145</td><td align="left">int A[2048] = &#123; 0 &#125;;</td></tr><tr><td align="right">146</td><td align="left">int B[2048] = &#123; 0 &#125;;</td></tr><tr><td align="right">147</td><td align="left">int i;</td></tr><tr><td align="right">148</td><td align="left">int tmp;</td></tr><tr><td align="right">149</td><td align="left">i = 0;</td></tr><tr><td align="right">150</td><td align="left">while</td></tr></table>>]
162 -> 151[label=""]
153 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">153</td><td align="left">a = __VERIFIER_nondet_uint();</td></tr><tr><td align="right">157</td><td align="left">b = 234770789;</td></tr></table>>]
153 -> 158[label=""]
154 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">154</td><td align="left">B[i] = tmp;</td></tr><tr><td align="right">155</td><td align="left">i = i + 1;</td></tr><tr><td align="right">156</td><td align="left"></td></tr></table>>]
154 -> 151[label=""]
141 -> 162 [label="INIT GLOBAL VARS" fontname="Courier New"]
151 -> 152 [label="[i < 2048]" fontname="Courier New"]
151 -> 153 [label="[!(i < 2048)]" fontname="Courier New"]
100001 [shape="component" label="mp_add"]
158 -> 100001 [label="r = mp_add(a, b);" fontname="Courier New"]
100001 -> 159 [label="" fontname="Courier New"]
100002 [shape="component" label="__VERIFIER_assert"]
159 -> 100002 [label="__VERIFIER_assert(r == (a + b));" fontname="Courier New"]
100002 -> 160 [label="" fontname="Courier New"]
100003 [shape="component" label="__VERIFIER_assert"]
160 -> 100003 [label="__VERIFIER_assert((A[1024]) == (B[1024]));" fontname="Courier New"]
100003 -> 161 [label="" fontname="Courier New"]
152 -> 154 [label="tmp = A[i];" fontname="Courier New"]
161 -> 140 [label="default return" fontname="Courier New"]
}