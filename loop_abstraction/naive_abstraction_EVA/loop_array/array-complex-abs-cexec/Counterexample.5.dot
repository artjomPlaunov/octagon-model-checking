digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N20\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
13 [label="13 @ N34\nmain\n" id="13"]
14 [label="14 @ N26\nmain\n" id="14"]
85 [fillcolor="cornflowerblue" label="85 @ N27\nmain\nAbstractionState: ABS15\n" id="85"]
86 [label="86 @ N28\nmain\n" id="86"]
96 [label="96 @ N32\nmain\n" id="96"]
98 [fillcolor="cornflowerblue" label="98 @ N27\nmain\nAbstractionState: ABS17\n" id="98"]
99 [label="99 @ N28\nmain\n" id="99"]
109 [label="109 @ N32\nmain\n" id="109"]
111 [fillcolor="cornflowerblue" label="111 @ N27\nmain\nAbstractionState: ABS19\n" id="111"]
112 [label="112 @ N28\nmain\n" id="112"]
122 [label="122 @ N32\nmain\n" id="122"]
124 [fillcolor="cornflowerblue" label="124 @ N27\nmain\nAbstractionState: ABS21\n" id="124"]
126 [label="126 @ N29\nmain\n" id="126"]
127 [label="127 @ N11\n__VERIFIER_assert entry\n" id="127"]
128 [label="128 @ N12\n__VERIFIER_assert\n" id="128"]
129 [label="129 @ N14\n__VERIFIER_assert\n" id="129"]
132 [fillcolor="red" label="132 @ N15\n__VERIFIER_assert\nAbstractionState: ABS22\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="132"]
0 -> 13 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 13"]
13 -> 14 [color="red" label="Lines 7 - 29: \lvoid abort();\lvoid __assert_fail(const char *, const char *, unsigned int, const char *);\lvoid reach_error();\lvoid assume_abort_if_not(int cond);\lvoid __VERIFIER_assert(int cond);\lvoid __VERIFIER_assume(int);\lint __VERIFIER_nondet_int();\lunsigned int __VERIFIER_nondet_uint();\lint main();\lFunction start dummy edge\lint A[2048] = { 0 };\lint B[2048] = { 0 };\lint i;\lint tmp;\li = 0;\l" id="13 -> 14"]
14 -> 85 [color="red" label="Line 30: \lwhile\l" id="14 -> 85"]
85 -> 86 [color="red" label="Line 30: \l[i < 2048]\l" id="85 -> 86"]
85 -> 87 [label="Line 30: \l[!(i < 2048)]\l" id="85 -> 87"]
86 -> 96 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="86 -> 96"]
96 -> 98 [color="red" label="Line 0: \l\l" id="96 -> 98"]
98 -> 99 [color="red" label="Line 30: \l[i < 2048]\l" id="98 -> 99"]
98 -> 100 [label="Line 30: \l[!(i < 2048)]\l" id="98 -> 100"]
99 -> 109 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="99 -> 109"]
109 -> 111 [color="red" label="Line 0: \l\l" id="109 -> 111"]
111 -> 112 [color="red" label="Line 30: \l[i < 2048]\l" id="111 -> 112"]
111 -> 113 [label="Line 30: \l[!(i < 2048)]\l" id="111 -> 113"]
112 -> 122 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="112 -> 122"]
122 -> 124 [color="red" label="Line 0: \l\l" id="122 -> 124"]
124 -> 125 [label="Line 30: \l[i < 2048]\l" id="124 -> 125"]
124 -> 126 [color="red" label="Line 30: \l[!(i < 2048)]\l" id="124 -> 126"]
126 -> 127 [color="red" label="Line 39: \l__VERIFIER_assert((A[1024]) == (B[1024]))\l" id="126 -> 127"]
127 -> 128 [color="red" label="Line 0: \lFunction start dummy edge\l" id="127 -> 128"]
128 -> 129 [color="red" label="Line 15: \l[cond == 0]\l" id="128 -> 129"]
128 -> 130 [label="Line 15: \l[!(cond == 0)]\l" id="128 -> 130"]
129 -> 132 [color="red" label="Line 16: \lLabel: ERROR\l" id="129 -> 132"]
}
