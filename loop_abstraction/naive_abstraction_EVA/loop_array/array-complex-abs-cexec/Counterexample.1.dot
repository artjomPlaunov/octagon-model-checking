digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N141\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
1 [label="1 @ N170\nmain\n" id="1"]
2 [label="2 @ N150\nmain\n" id="2"]
26 [label="26 @ N151\nmain\n" id="26"]
27 [label="27 @ N166\nmain\n" id="27"]
28 [label="28 @ N20\nmp_add entry\n" id="28"]
29 [label="29 @ N48\nmp_add\n" id="29"]
44 [label="44 @ N49\nmp_add\n" id="44"]
45 [label="45 @ N58\nmp_add\n" id="45"]
60 [label="60 @ N59\nmp_add\n" id="60"]
61 [label="61 @ N69\nmp_add\n" id="61"]
63 [fillcolor="cornflowerblue" label="63 @ N70\nmp_add\nAbstractionState: ABS1: true\n" id="63"]
65 [label="65 @ N74\nmp_add\n" id="65"]
67 [label="67 @ N73\nmp_add\n" id="67"]
70 [label="70 @ N72\nmp_add\n" id="70"]
73 [fillcolor="cornflowerblue" label="73 @ N122\nmp_add\nAbstractionState: ABS2: true\n" id="73"]
75 [label="75 @ N124\nmp_add\n" id="75"]
76 [label="76 @ N138\nmp_add\n" id="76"]
77 [label="77 @ N19\nmp_add exit\n" id="77"]
78 [label="78 @ N167\nmain\n" id="78"]
179 [label="179 @ N11\n__VERIFIER_assert entry\n" id="179"]
180 [label="180 @ N12\n__VERIFIER_assert\n" id="180"]
181 [label="181 @ N14\n__VERIFIER_assert\n" id="181"]
184 [fillcolor="red" label="184 @ N15\n__VERIFIER_assert\nAbstractionState: ABS5: true\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="184"]
46 [label="46 @ N60\nmp_add\n" id="46"]
48 [label="48 @ N61\nmp_add\n" id="48"]
50 [label="50 @ N62\nmp_add\n" id="50"]
49 [label="49 @ N63\nmp_add\n" id="49"]
53 [label="53 @ N64\nmp_add\n" id="53"]
55 [label="55 @ N65\nmp_add\n" id="55"]
54 [label="54 @ N66\nmp_add\n" id="54"]
58 [label="58 @ N67\nmp_add\n" id="58"]
30 [label="30 @ N50\nmp_add\n" id="30"]
32 [label="32 @ N51\nmp_add\n" id="32"]
34 [label="34 @ N52\nmp_add\n" id="34"]
33 [label="33 @ N53\nmp_add\n" id="33"]
37 [label="37 @ N54\nmp_add\n" id="37"]
39 [label="39 @ N55\nmp_add\n" id="39"]
38 [label="38 @ N56\nmp_add\n" id="38"]
42 [label="42 @ N57\nmp_add\n" id="42"]
3 [label="3 @ N152\nmain\n" id="3"]
5 [label="5 @ N153\nmain\n" id="5"]
16 [label="16 @ N156\nmain\n" id="16"]
19 [label="19 @ N159\nmain\n" id="19"]
20 [label="20 @ N160\nmain\n" id="20"]
22 [label="22 @ N163\nmain\n" id="22"]
23 [label="23 @ N164\nmain\n" id="23"]
6 [label="6 @ N158\nmain\n" id="6"]
8 [label="8 @ N157\nmain\n" id="8"]
11 [label="11 @ N154\nmain\n" id="11"]
14 [label="14 @ N155\nmain\n" id="14"]
0 -> 1 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 1"]
1 -> 2 [color="red" label="Lines 7 - 112: \lvoid abort();\lvoid __assert_fail(const char *, const char *, unsigned int, const char *);\lvoid reach_error();\lvoid assume_abort_if_not(int cond);\lvoid __VERIFIER_assert(int cond);\lvoid __VERIFIER_assume(int);\lint __VERIFIER_nondet_int();\lunsigned int __VERIFIER_nondet_uint();\lunsigned int mp_add(unsigned int a, unsigned int b);\lint main();\lFunction start dummy edge\lint a;\lint b;\lint r;\lint A[2048] = { 0 };\lint B[2048] = { 0 };\lint i;\lint tmp;\li = 0;\l" id="1 -> 2"]
2 -> 3 [label="Line 113: \l[i < 2048]\l" id="2 -> 3"]
2 -> 26 [color="red" label="Line 113: \l[!(i < 2048)]\l" id="2 -> 26"]
26 -> 27 [color="red" label="Lines 121 - 122: \la = __VERIFIER_nondet_uint();\lb = 234770789;\l" id="26 -> 27"]
27 -> 28 [color="red" label="Line 123: \lmp_add(a, b)\l" id="27 -> 28"]
28 -> 29 [color="red" label="Lines 0 - 42: \lFunction start dummy edge\lunsigned char a0;\lunsigned char a1;\lunsigned char a2;\lunsigned char a3;\lunsigned char b0;\lunsigned char b1;\lunsigned char b2;\lunsigned char b3;\lunsigned char r0;\lunsigned char r1;\lunsigned char r2;\lunsigned char r3;\lunsigned short carry;\lunsigned short partial_sum;\lunsigned int r;\lunsigned char i;\lunsigned char na;\lunsigned char nb;\la0 = a;\la1 = a >> 8;\la2 = a >> 16U;\la3 = a >> 24U;\lb0 = b;\lb1 = b >> 8U;\lb2 = b >> 16U;\lb3 = b >> 24U;\lna = 4U;\l" id="28 -> 29"]
29 -> 30 [label="Line 43: \l[a3 == 0U]\l" id="29 -> 30"]
29 -> 44 [color="red" label="Line 43: \l[!(a3 == 0U)]\l" id="29 -> 44"]
44 -> 45 [color="red" label="Line 52: \lnb = 4U;\l" id="44 -> 45"]
45 -> 46 [label="Line 53: \l[b3 == 0U]\l" id="45 -> 46"]
45 -> 60 [color="red" label="Line 53: \l[!(b3 == 0U)]\l" id="45 -> 60"]
60 -> 61 [color="red" label="Lines 62 - 63: \lcarry = 0U;\li = 0U;\l" id="60 -> 61"]
61 -> 63 [color="red" label="Line 64: \lwhile\l" id="61 -> 63"]
63 -> 65 [color="red" label="Line 64: \l[!(i < na)]\l" id="63 -> 65"]
63 -> 71 [label="Line 64: \l[i < na]\l" id="63 -> 71"]
65 -> 67 [color="red" label="Line 64: \l[!(i < nb)]\l" id="65 -> 67"]
65 -> 71 [label="Line 64: \l[i < nb]\l" id="65 -> 71"]
67 -> 70 [color="red" label="Line 64: \l[!(carry != 0U)]\l" id="67 -> 70"]
67 -> 71 [label="Line 64: \l[carry != 0U]\l" id="67 -> 71"]
70 -> 73 [color="red" label="Line 91: \lwhile\l" id="70 -> 73"]
73 -> 74 [label="Line 91: \l[i < 4U]\l" id="73 -> 74"]
73 -> 75 [color="red" label="Line 91: \l[!(i < 4U)]\l" id="73 -> 75"]
75 -> 76 [color="red" label="Line 100: \lr = ((r0 | (r1 << 8U)) | (r2 << 16U)) | (((unsigned int)r3) << 24U);\l" id="75 -> 76"]
76 -> 77 [color="red" label="Line 102: \lreturn r;\l" id="76 -> 77"]
77 -> 78 [color="red" label="Line 123: \lReturn edge from mp_add to main: r = mp_add(a, b);\l" id="77 -> 78"]
78 -> 179 [color="red" label="Line 125: \l__VERIFIER_assert(r == (a + b))\l" id="78 -> 179"]
179 -> 180 [color="red" label="Line 0: \lFunction start dummy edge\l" id="179 -> 180"]
180 -> 181 [color="red" label="Line 15: \l[cond == 0]\l" id="180 -> 181"]
180 -> 182 [label="Line 15: \l[!(cond == 0)]\l" id="180 -> 182"]
181 -> 184 [color="red" label="Line 16: \lLabel: ERROR\l" id="181 -> 184"]
46 -> 48 [label="Line 54: \lnb = nb - 1;\l" id="46 -> 48"]
48 -> 49 [label="Line 55: \l[b2 == 0U]\l" id="48 -> 49"]
48 -> 50 [label="Line 55: \l[!(b2 == 0U)]\l" id="48 -> 50"]
50 -> 60 [label="Line 0: \l\l" id="50 -> 60"]
49 -> 53 [label="Line 56: \lnb = nb - 1;\l" id="49 -> 53"]
53 -> 54 [label="Line 57: \l[b1 == 0U]\l" id="53 -> 54"]
53 -> 55 [label="Line 57: \l[!(b1 == 0U)]\l" id="53 -> 55"]
55 -> 60 [label="Line 0: \l\l" id="55 -> 60"]
54 -> 58 [label="Line 58: \lnb = nb - 1;\l" id="54 -> 58"]
58 -> 60 [label="Line 0: \l\l" id="58 -> 60"]
30 -> 32 [label="Line 44: \lna = na - 1;\l" id="30 -> 32"]
32 -> 33 [label="Line 45: \l[a2 == 0U]\l" id="32 -> 33"]
32 -> 34 [label="Line 45: \l[!(a2 == 0U)]\l" id="32 -> 34"]
34 -> 44 [label="Line 0: \l\l" id="34 -> 44"]
33 -> 37 [label="Line 46: \lna = na - 1;\l" id="33 -> 37"]
37 -> 38 [label="Line 47: \l[a1 == 0U]\l" id="37 -> 38"]
37 -> 39 [label="Line 47: \l[!(a1 == 0U)]\l" id="37 -> 39"]
39 -> 44 [label="Line 0: \l\l" id="39 -> 44"]
38 -> 42 [label="Line 48: \lna = na - 1;\l" id="38 -> 42"]
42 -> 44 [label="Line 0: \l\l" id="42 -> 44"]
3 -> 5 [label="Line 114: \lint __CPAchecker_TMP_0;\l" id="3 -> 5"]
5 -> 6 [label="Line 114: \l[i >= 0]\l" id="5 -> 6"]
5 -> 16 [label="Line 114: \l[!(i >= 0)]\l" id="5 -> 16"]
16 -> 19 [label="Line 0: \l__CPAchecker_TMP_0 = 0;\l" id="16 -> 19"]
19 -> 20 [label="Line 114: \l[__CPAchecker_TMP_0 != 0]\l" id="19 -> 20"]
19 -> 21 [label="Line 114: \l[!(__CPAchecker_TMP_0 != 0)]\l" id="19 -> 21"]
20 -> 22 [label="Lines 115 - 117: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="20 -> 22"]
22 -> 23 [label="Line 118: \l[i >= 2048]\l" id="22 -> 23"]
22 -> 24 [label="Line 118: \l[!(i >= 2048)]\l" id="22 -> 24"]
23 -> 26 [label="Line 0: \l\l" id="23 -> 26"]
6 -> 8 [label="Line 114: \l[i < 2048]\l" id="6 -> 8"]
6 -> 16 [label="Line 114: \l[!(i < 2048)]\l" id="6 -> 16"]
8 -> 11 [label="Line 114: \l[(A[i]) == 0]\l" id="8 -> 11"]
8 -> 16 [label="Line 114: \l[!((A[i]) == 0)]\l" id="8 -> 16"]
11 -> 14 [label="Line 114: \l[(B[i]) == 0]\l" id="11 -> 14"]
11 -> 16 [label="Line 114: \l[!((B[i]) == 0)]\l" id="11 -> 16"]
14 -> 19 [label="Line 0: \l__CPAchecker_TMP_0 = 1;\l" id="14 -> 19"]
}
