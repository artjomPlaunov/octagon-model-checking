digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N20\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
13 [label="13 @ N34\nmain\n" id="13"]
14 [label="14 @ N26\nmain\n" id="14"]
460 [fillcolor="cornflowerblue" label="460 @ N27\nmain\nAbstractionState: ABS75\n" id="460"]
461 [label="461 @ N28\nmain\n" id="461"]
471 [label="471 @ N32\nmain\n" id="471"]
473 [fillcolor="cornflowerblue" label="473 @ N27\nmain\nAbstractionState: ABS77\n" id="473"]
474 [label="474 @ N28\nmain\n" id="474"]
484 [label="484 @ N32\nmain\n" id="484"]
486 [fillcolor="cornflowerblue" label="486 @ N27\nmain\nAbstractionState: ABS79\n" id="486"]
487 [label="487 @ N28\nmain\n" id="487"]
497 [label="497 @ N32\nmain\n" id="497"]
499 [fillcolor="cornflowerblue" label="499 @ N27\nmain\nAbstractionState: ABS81\n" id="499"]
500 [label="500 @ N28\nmain\n" id="500"]
510 [label="510 @ N32\nmain\n" id="510"]
512 [fillcolor="cornflowerblue" label="512 @ N27\nmain\nAbstractionState: ABS83\n" id="512"]
513 [label="513 @ N28\nmain\n" id="513"]
523 [label="523 @ N32\nmain\n" id="523"]
525 [fillcolor="cornflowerblue" label="525 @ N27\nmain\nAbstractionState: ABS85\n" id="525"]
526 [label="526 @ N28\nmain\n" id="526"]
536 [label="536 @ N32\nmain\n" id="536"]
538 [fillcolor="cornflowerblue" label="538 @ N27\nmain\nAbstractionState: ABS87\n" id="538"]
539 [label="539 @ N28\nmain\n" id="539"]
549 [label="549 @ N32\nmain\n" id="549"]
551 [fillcolor="cornflowerblue" label="551 @ N27\nmain\nAbstractionState: ABS89\n" id="551"]
552 [label="552 @ N28\nmain\n" id="552"]
562 [label="562 @ N32\nmain\n" id="562"]
564 [fillcolor="cornflowerblue" label="564 @ N27\nmain\nAbstractionState: ABS91\n" id="564"]
566 [label="566 @ N29\nmain\n" id="566"]
567 [label="567 @ N11\n__VERIFIER_assert entry\n" id="567"]
568 [label="568 @ N12\n__VERIFIER_assert\n" id="568"]
569 [label="569 @ N14\n__VERIFIER_assert\n" id="569"]
572 [fillcolor="red" label="572 @ N15\n__VERIFIER_assert\nAbstractionState: ABS92\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="572"]
0 -> 13 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 13"]
13 -> 14 [color="red" label="Lines 7 - 29: \lvoid abort();\lvoid __assert_fail(const char *, const char *, unsigned int, const char *);\lvoid reach_error();\lvoid assume_abort_if_not(int cond);\lvoid __VERIFIER_assert(int cond);\lvoid __VERIFIER_assume(int);\lint __VERIFIER_nondet_int();\lunsigned int __VERIFIER_nondet_uint();\lint main();\lFunction start dummy edge\lint A[2048] = { 0 };\lint B[2048] = { 0 };\lint i;\lint tmp;\li = 0;\l" id="13 -> 14"]
14 -> 460 [color="red" label="Line 30: \lwhile\l" id="14 -> 460"]
460 -> 461 [color="red" label="Line 30: \l[i < 2048]\l" id="460 -> 461"]
460 -> 462 [label="Line 30: \l[!(i < 2048)]\l" id="460 -> 462"]
461 -> 471 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="461 -> 471"]
471 -> 473 [color="red" label="Line 0: \l\l" id="471 -> 473"]
473 -> 474 [color="red" label="Line 30: \l[i < 2048]\l" id="473 -> 474"]
473 -> 475 [label="Line 30: \l[!(i < 2048)]\l" id="473 -> 475"]
474 -> 484 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="474 -> 484"]
484 -> 486 [color="red" label="Line 0: \l\l" id="484 -> 486"]
486 -> 487 [color="red" label="Line 30: \l[i < 2048]\l" id="486 -> 487"]
486 -> 488 [label="Line 30: \l[!(i < 2048)]\l" id="486 -> 488"]
487 -> 497 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="487 -> 497"]
497 -> 499 [color="red" label="Line 0: \l\l" id="497 -> 499"]
499 -> 500 [color="red" label="Line 30: \l[i < 2048]\l" id="499 -> 500"]
499 -> 501 [label="Line 30: \l[!(i < 2048)]\l" id="499 -> 501"]
500 -> 510 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="500 -> 510"]
510 -> 512 [color="red" label="Line 0: \l\l" id="510 -> 512"]
512 -> 513 [color="red" label="Line 30: \l[i < 2048]\l" id="512 -> 513"]
512 -> 514 [label="Line 30: \l[!(i < 2048)]\l" id="512 -> 514"]
513 -> 523 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="513 -> 523"]
523 -> 525 [color="red" label="Line 0: \l\l" id="523 -> 525"]
525 -> 526 [color="red" label="Line 30: \l[i < 2048]\l" id="525 -> 526"]
525 -> 527 [label="Line 30: \l[!(i < 2048)]\l" id="525 -> 527"]
526 -> 536 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="526 -> 536"]
536 -> 538 [color="red" label="Line 0: \l\l" id="536 -> 538"]
538 -> 539 [color="red" label="Line 30: \l[i < 2048]\l" id="538 -> 539"]
538 -> 540 [label="Line 30: \l[!(i < 2048)]\l" id="538 -> 540"]
539 -> 549 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="539 -> 549"]
549 -> 551 [color="red" label="Line 0: \l\l" id="549 -> 551"]
551 -> 552 [color="red" label="Line 30: \l[i < 2048]\l" id="551 -> 552"]
551 -> 553 [label="Line 30: \l[!(i < 2048)]\l" id="551 -> 553"]
552 -> 562 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="552 -> 562"]
562 -> 564 [color="red" label="Line 0: \l\l" id="562 -> 564"]
564 -> 565 [label="Line 30: \l[i < 2048]\l" id="564 -> 565"]
564 -> 566 [color="red" label="Line 30: \l[!(i < 2048)]\l" id="564 -> 566"]
566 -> 567 [color="red" label="Line 39: \l__VERIFIER_assert((A[1024]) == (B[1024]))\l" id="566 -> 567"]
567 -> 568 [color="red" label="Line 0: \lFunction start dummy edge\l" id="567 -> 568"]
568 -> 569 [color="red" label="Line 15: \l[cond == 0]\l" id="568 -> 569"]
568 -> 570 [label="Line 15: \l[!(cond == 0)]\l" id="568 -> 570"]
569 -> 572 [color="red" label="Line 16: \lLabel: ERROR\l" id="569 -> 572"]
}
