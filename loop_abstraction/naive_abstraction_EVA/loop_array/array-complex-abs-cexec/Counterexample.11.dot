digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N20\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
13 [label="13 @ N34\nmain\n" id="13"]
14 [label="14 @ N26\nmain\n" id="14"]
574 [fillcolor="cornflowerblue" label="574 @ N27\nmain\nAbstractionState: ABS93\n" id="574"]
575 [label="575 @ N28\nmain\n" id="575"]
585 [label="585 @ N32\nmain\n" id="585"]
587 [fillcolor="cornflowerblue" label="587 @ N27\nmain\nAbstractionState: ABS95\n" id="587"]
588 [label="588 @ N28\nmain\n" id="588"]
598 [label="598 @ N32\nmain\n" id="598"]
600 [fillcolor="cornflowerblue" label="600 @ N27\nmain\nAbstractionState: ABS97\n" id="600"]
601 [label="601 @ N28\nmain\n" id="601"]
611 [label="611 @ N32\nmain\n" id="611"]
613 [fillcolor="cornflowerblue" label="613 @ N27\nmain\nAbstractionState: ABS99\n" id="613"]
614 [label="614 @ N28\nmain\n" id="614"]
624 [label="624 @ N32\nmain\n" id="624"]
626 [fillcolor="cornflowerblue" label="626 @ N27\nmain\nAbstractionState: ABS101\n" id="626"]
627 [label="627 @ N28\nmain\n" id="627"]
637 [label="637 @ N32\nmain\n" id="637"]
639 [fillcolor="cornflowerblue" label="639 @ N27\nmain\nAbstractionState: ABS103\n" id="639"]
640 [label="640 @ N28\nmain\n" id="640"]
650 [label="650 @ N32\nmain\n" id="650"]
652 [fillcolor="cornflowerblue" label="652 @ N27\nmain\nAbstractionState: ABS105\n" id="652"]
653 [label="653 @ N28\nmain\n" id="653"]
663 [label="663 @ N32\nmain\n" id="663"]
665 [fillcolor="cornflowerblue" label="665 @ N27\nmain\nAbstractionState: ABS107\n" id="665"]
666 [label="666 @ N28\nmain\n" id="666"]
676 [label="676 @ N32\nmain\n" id="676"]
678 [fillcolor="cornflowerblue" label="678 @ N27\nmain\nAbstractionState: ABS109\n" id="678"]
679 [label="679 @ N28\nmain\n" id="679"]
689 [label="689 @ N32\nmain\n" id="689"]
691 [fillcolor="cornflowerblue" label="691 @ N27\nmain\nAbstractionState: ABS111\n" id="691"]
693 [label="693 @ N29\nmain\n" id="693"]
694 [label="694 @ N11\n__VERIFIER_assert entry\n" id="694"]
695 [label="695 @ N12\n__VERIFIER_assert\n" id="695"]
696 [label="696 @ N14\n__VERIFIER_assert\n" id="696"]
699 [fillcolor="red" label="699 @ N15\n__VERIFIER_assert\nAbstractionState: ABS112\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="699"]
0 -> 13 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 13"]
13 -> 14 [color="red" label="Lines 7 - 29: \lvoid abort();\lvoid __assert_fail(const char *, const char *, unsigned int, const char *);\lvoid reach_error();\lvoid assume_abort_if_not(int cond);\lvoid __VERIFIER_assert(int cond);\lvoid __VERIFIER_assume(int);\lint __VERIFIER_nondet_int();\lunsigned int __VERIFIER_nondet_uint();\lint main();\lFunction start dummy edge\lint A[2048] = { 0 };\lint B[2048] = { 0 };\lint i;\lint tmp;\li = 0;\l" id="13 -> 14"]
14 -> 574 [color="red" label="Line 30: \lwhile\l" id="14 -> 574"]
574 -> 575 [color="red" label="Line 30: \l[i < 2048]\l" id="574 -> 575"]
574 -> 576 [label="Line 30: \l[!(i < 2048)]\l" id="574 -> 576"]
575 -> 585 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="575 -> 585"]
585 -> 587 [color="red" label="Line 0: \l\l" id="585 -> 587"]
587 -> 588 [color="red" label="Line 30: \l[i < 2048]\l" id="587 -> 588"]
587 -> 589 [label="Line 30: \l[!(i < 2048)]\l" id="587 -> 589"]
588 -> 598 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="588 -> 598"]
598 -> 600 [color="red" label="Line 0: \l\l" id="598 -> 600"]
600 -> 601 [color="red" label="Line 30: \l[i < 2048]\l" id="600 -> 601"]
600 -> 602 [label="Line 30: \l[!(i < 2048)]\l" id="600 -> 602"]
601 -> 611 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="601 -> 611"]
611 -> 613 [color="red" label="Line 0: \l\l" id="611 -> 613"]
613 -> 614 [color="red" label="Line 30: \l[i < 2048]\l" id="613 -> 614"]
613 -> 615 [label="Line 30: \l[!(i < 2048)]\l" id="613 -> 615"]
614 -> 624 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="614 -> 624"]
624 -> 626 [color="red" label="Line 0: \l\l" id="624 -> 626"]
626 -> 627 [color="red" label="Line 30: \l[i < 2048]\l" id="626 -> 627"]
626 -> 628 [label="Line 30: \l[!(i < 2048)]\l" id="626 -> 628"]
627 -> 637 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="627 -> 637"]
637 -> 639 [color="red" label="Line 0: \l\l" id="637 -> 639"]
639 -> 640 [color="red" label="Line 30: \l[i < 2048]\l" id="639 -> 640"]
639 -> 641 [label="Line 30: \l[!(i < 2048)]\l" id="639 -> 641"]
640 -> 650 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="640 -> 650"]
650 -> 652 [color="red" label="Line 0: \l\l" id="650 -> 652"]
652 -> 653 [color="red" label="Line 30: \l[i < 2048]\l" id="652 -> 653"]
652 -> 654 [label="Line 30: \l[!(i < 2048)]\l" id="652 -> 654"]
653 -> 663 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="653 -> 663"]
663 -> 665 [color="red" label="Line 0: \l\l" id="663 -> 665"]
665 -> 666 [color="red" label="Line 30: \l[i < 2048]\l" id="665 -> 666"]
665 -> 667 [label="Line 30: \l[!(i < 2048)]\l" id="665 -> 667"]
666 -> 676 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="666 -> 676"]
676 -> 678 [color="red" label="Line 0: \l\l" id="676 -> 678"]
678 -> 679 [color="red" label="Line 30: \l[i < 2048]\l" id="678 -> 679"]
678 -> 680 [label="Line 30: \l[!(i < 2048)]\l" id="678 -> 680"]
679 -> 689 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="679 -> 689"]
689 -> 691 [color="red" label="Line 0: \l\l" id="689 -> 691"]
691 -> 692 [label="Line 30: \l[i < 2048]\l" id="691 -> 692"]
691 -> 693 [color="red" label="Line 30: \l[!(i < 2048)]\l" id="691 -> 693"]
693 -> 694 [color="red" label="Line 39: \l__VERIFIER_assert((A[1024]) == (B[1024]))\l" id="693 -> 694"]
694 -> 695 [color="red" label="Line 0: \lFunction start dummy edge\l" id="694 -> 695"]
695 -> 696 [color="red" label="Line 15: \l[cond == 0]\l" id="695 -> 696"]
695 -> 697 [label="Line 15: \l[!(cond == 0)]\l" id="695 -> 697"]
696 -> 699 [color="red" label="Line 16: \lLabel: ERROR\l" id="696 -> 699"]
}
