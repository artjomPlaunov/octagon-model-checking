digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N20\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
13 [label="13 @ N34\nmain\n" id="13"]
14 [label="14 @ N26\nmain\n" id="14"]
134 [fillcolor="cornflowerblue" label="134 @ N27\nmain\nAbstractionState: ABS23\n" id="134"]
135 [label="135 @ N28\nmain\n" id="135"]
145 [label="145 @ N32\nmain\n" id="145"]
147 [fillcolor="cornflowerblue" label="147 @ N27\nmain\nAbstractionState: ABS25\n" id="147"]
148 [label="148 @ N28\nmain\n" id="148"]
158 [label="158 @ N32\nmain\n" id="158"]
160 [fillcolor="cornflowerblue" label="160 @ N27\nmain\nAbstractionState: ABS27\n" id="160"]
161 [label="161 @ N28\nmain\n" id="161"]
171 [label="171 @ N32\nmain\n" id="171"]
173 [fillcolor="cornflowerblue" label="173 @ N27\nmain\nAbstractionState: ABS29\n" id="173"]
174 [label="174 @ N28\nmain\n" id="174"]
184 [label="184 @ N32\nmain\n" id="184"]
186 [fillcolor="cornflowerblue" label="186 @ N27\nmain\nAbstractionState: ABS31\n" id="186"]
188 [label="188 @ N29\nmain\n" id="188"]
189 [label="189 @ N11\n__VERIFIER_assert entry\n" id="189"]
190 [label="190 @ N12\n__VERIFIER_assert\n" id="190"]
191 [label="191 @ N14\n__VERIFIER_assert\n" id="191"]
194 [fillcolor="red" label="194 @ N15\n__VERIFIER_assert\nAbstractionState: ABS32\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="194"]
0 -> 13 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 13"]
13 -> 14 [color="red" label="Lines 7 - 29: \lvoid abort();\lvoid __assert_fail(const char *, const char *, unsigned int, const char *);\lvoid reach_error();\lvoid assume_abort_if_not(int cond);\lvoid __VERIFIER_assert(int cond);\lvoid __VERIFIER_assume(int);\lint __VERIFIER_nondet_int();\lunsigned int __VERIFIER_nondet_uint();\lint main();\lFunction start dummy edge\lint A[2048] = { 0 };\lint B[2048] = { 0 };\lint i;\lint tmp;\li = 0;\l" id="13 -> 14"]
14 -> 134 [color="red" label="Line 30: \lwhile\l" id="14 -> 134"]
134 -> 135 [color="red" label="Line 30: \l[i < 2048]\l" id="134 -> 135"]
134 -> 136 [label="Line 30: \l[!(i < 2048)]\l" id="134 -> 136"]
135 -> 145 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="135 -> 145"]
145 -> 147 [color="red" label="Line 0: \l\l" id="145 -> 147"]
147 -> 148 [color="red" label="Line 30: \l[i < 2048]\l" id="147 -> 148"]
147 -> 149 [label="Line 30: \l[!(i < 2048)]\l" id="147 -> 149"]
148 -> 158 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="148 -> 158"]
158 -> 160 [color="red" label="Line 0: \l\l" id="158 -> 160"]
160 -> 161 [color="red" label="Line 30: \l[i < 2048]\l" id="160 -> 161"]
160 -> 162 [label="Line 30: \l[!(i < 2048)]\l" id="160 -> 162"]
161 -> 171 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="161 -> 171"]
171 -> 173 [color="red" label="Line 0: \l\l" id="171 -> 173"]
173 -> 174 [color="red" label="Line 30: \l[i < 2048]\l" id="173 -> 174"]
173 -> 175 [label="Line 30: \l[!(i < 2048)]\l" id="173 -> 175"]
174 -> 184 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="174 -> 184"]
184 -> 186 [color="red" label="Line 0: \l\l" id="184 -> 186"]
186 -> 187 [label="Line 30: \l[i < 2048]\l" id="186 -> 187"]
186 -> 188 [color="red" label="Line 30: \l[!(i < 2048)]\l" id="186 -> 188"]
188 -> 189 [color="red" label="Line 39: \l__VERIFIER_assert((A[1024]) == (B[1024]))\l" id="188 -> 189"]
189 -> 190 [color="red" label="Line 0: \lFunction start dummy edge\l" id="189 -> 190"]
190 -> 191 [color="red" label="Line 15: \l[cond == 0]\l" id="190 -> 191"]
190 -> 192 [label="Line 15: \l[!(cond == 0)]\l" id="190 -> 192"]
191 -> 194 [color="red" label="Line 16: \lLabel: ERROR\l" id="191 -> 194"]
}
