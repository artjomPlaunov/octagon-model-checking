digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N20\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
13 [label="13 @ N34\nmain\n" id="13"]
14 [label="14 @ N26\nmain\n" id="14"]
49 [fillcolor="cornflowerblue" label="49 @ N27\nmain\nAbstractionState: ABS9\n" id="49"]
50 [label="50 @ N28\nmain\n" id="50"]
60 [label="60 @ N32\nmain\n" id="60"]
62 [fillcolor="cornflowerblue" label="62 @ N27\nmain\nAbstractionState: ABS11\n" id="62"]
63 [label="63 @ N28\nmain\n" id="63"]
73 [label="73 @ N32\nmain\n" id="73"]
75 [fillcolor="cornflowerblue" label="75 @ N27\nmain\nAbstractionState: ABS13\n" id="75"]
77 [label="77 @ N29\nmain\n" id="77"]
78 [label="78 @ N11\n__VERIFIER_assert entry\n" id="78"]
79 [label="79 @ N12\n__VERIFIER_assert\n" id="79"]
80 [label="80 @ N14\n__VERIFIER_assert\n" id="80"]
83 [fillcolor="red" label="83 @ N15\n__VERIFIER_assert\nAbstractionState: ABS14\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="83"]
0 -> 13 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 13"]
13 -> 14 [color="red" label="Lines 7 - 29: \lvoid abort();\lvoid __assert_fail(const char *, const char *, unsigned int, const char *);\lvoid reach_error();\lvoid assume_abort_if_not(int cond);\lvoid __VERIFIER_assert(int cond);\lvoid __VERIFIER_assume(int);\lint __VERIFIER_nondet_int();\lunsigned int __VERIFIER_nondet_uint();\lint main();\lFunction start dummy edge\lint A[2048] = { 0 };\lint B[2048] = { 0 };\lint i;\lint tmp;\li = 0;\l" id="13 -> 14"]
14 -> 49 [color="red" label="Line 30: \lwhile\l" id="14 -> 49"]
49 -> 50 [color="red" label="Line 30: \l[i < 2048]\l" id="49 -> 50"]
49 -> 51 [label="Line 30: \l[!(i < 2048)]\l" id="49 -> 51"]
50 -> 60 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="50 -> 60"]
60 -> 62 [color="red" label="Line 0: \l\l" id="60 -> 62"]
62 -> 63 [color="red" label="Line 30: \l[i < 2048]\l" id="62 -> 63"]
62 -> 64 [label="Line 30: \l[!(i < 2048)]\l" id="62 -> 64"]
63 -> 73 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="63 -> 73"]
73 -> 75 [color="red" label="Line 0: \l\l" id="73 -> 75"]
75 -> 76 [label="Line 30: \l[i < 2048]\l" id="75 -> 76"]
75 -> 77 [color="red" label="Line 30: \l[!(i < 2048)]\l" id="75 -> 77"]
77 -> 78 [color="red" label="Line 39: \l__VERIFIER_assert((A[1024]) == (B[1024]))\l" id="77 -> 78"]
78 -> 79 [color="red" label="Line 0: \lFunction start dummy edge\l" id="78 -> 79"]
79 -> 80 [color="red" label="Line 15: \l[cond == 0]\l" id="79 -> 80"]
79 -> 81 [label="Line 15: \l[!(cond == 0)]\l" id="79 -> 81"]
80 -> 83 [color="red" label="Line 16: \lLabel: ERROR\l" id="80 -> 83"]
}
