digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N141\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
185 [label="185 @ N170\nmain\n" id="185"]
186 [label="186 @ N150\nmain\n" id="186"]
210 [label="210 @ N151\nmain\n" id="210"]
211 [label="211 @ N166\nmain\n" id="211"]
212 [label="212 @ N20\nmp_add entry\n" id="212"]
213 [label="213 @ N48\nmp_add\n" id="213"]
228 [label="228 @ N49\nmp_add\n" id="228"]
229 [label="229 @ N58\nmp_add\n" id="229"]
244 [label="244 @ N59\nmp_add\n" id="244"]
245 [label="245 @ N69\nmp_add\n" id="245"]
230 [label="230 @ N60\nmp_add\n" id="230"]
232 [label="232 @ N61\nmp_add\n" id="232"]
234 [label="234 @ N62\nmp_add\n" id="234"]
233 [label="233 @ N63\nmp_add\n" id="233"]
237 [label="237 @ N64\nmp_add\n" id="237"]
239 [label="239 @ N65\nmp_add\n" id="239"]
238 [label="238 @ N66\nmp_add\n" id="238"]
242 [label="242 @ N67\nmp_add\n" id="242"]
214 [label="214 @ N50\nmp_add\n" id="214"]
216 [label="216 @ N51\nmp_add\n" id="216"]
218 [label="218 @ N52\nmp_add\n" id="218"]
217 [label="217 @ N53\nmp_add\n" id="217"]
221 [label="221 @ N54\nmp_add\n" id="221"]
223 [label="223 @ N55\nmp_add\n" id="223"]
222 [label="222 @ N56\nmp_add\n" id="222"]
226 [label="226 @ N57\nmp_add\n" id="226"]
187 [label="187 @ N152\nmain\n" id="187"]
189 [label="189 @ N153\nmain\n" id="189"]
200 [label="200 @ N156\nmain\n" id="200"]
203 [label="203 @ N159\nmain\n" id="203"]
205 [label="205 @ N183\nmain\n" id="205"]
204 [label="204 @ N160\nmain\n" id="204"]
206 [label="206 @ N163\nmain\n" id="206"]
208 [label="208 @ N184\nmain\n" id="208"]
207 [label="207 @ N164\nmain\n" id="207"]
190 [label="190 @ N158\nmain\n" id="190"]
192 [label="192 @ N157\nmain\n" id="192"]
195 [label="195 @ N154\nmain\n" id="195"]
198 [label="198 @ N155\nmain\n" id="198"]
0 -> 185 [label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 185"]
185 -> 186 [label="Lines 7 - 112: \lvoid abort();\lvoid __assert_fail(const char *, const char *, unsigned int, const char *);\lvoid reach_error();\lvoid assume_abort_if_not(int cond);\lvoid __VERIFIER_assert(int cond);\lvoid __VERIFIER_assume(int);\lint __VERIFIER_nondet_int();\lunsigned int __VERIFIER_nondet_uint();\lunsigned int mp_add(unsigned int a, unsigned int b);\lint main();\lFunction start dummy edge\lint a;\lint b;\lint r;\lint A[2048] = { 0 };\lint B[2048] = { 0 };\lint i;\lint tmp;\li = 0;\l" id="185 -> 186"]
186 -> 187 [label="Line 113: \l[i < 2048]\l" id="186 -> 187"]
186 -> 210 [label="Line 113: \l[!(i < 2048)]\l" id="186 -> 210"]
210 -> 211 [label="Lines 121 - 122: \la = __VERIFIER_nondet_uint();\lb = 234770789;\l" id="210 -> 211"]
211 -> 212 [label="Line 123: \lmp_add(a, b)\l" id="211 -> 212"]
212 -> 213 [label="Lines 0 - 42: \lFunction start dummy edge\lunsigned char a0;\lunsigned char a1;\lunsigned char a2;\lunsigned char a3;\lunsigned char b0;\lunsigned char b1;\lunsigned char b2;\lunsigned char b3;\lunsigned char r0;\lunsigned char r1;\lunsigned char r2;\lunsigned char r3;\lunsigned short carry;\lunsigned short partial_sum;\lunsigned int r;\lunsigned char i;\lunsigned char na;\lunsigned char nb;\la0 = a;\la1 = a >> 8;\la2 = a >> 16U;\la3 = a >> 24U;\lb0 = b;\lb1 = b >> 8U;\lb2 = b >> 16U;\lb3 = b >> 24U;\lna = 4U;\l" id="212 -> 213"]
213 -> 214 [label="Line 43: \l[a3 == 0U]\l" id="213 -> 214"]
213 -> 228 [label="Line 43: \l[!(a3 == 0U)]\l" id="213 -> 228"]
228 -> 229 [label="Line 52: \lnb = 4U;\l" id="228 -> 229"]
229 -> 230 [label="Line 53: \l[b3 == 0U]\l" id="229 -> 230"]
229 -> 244 [label="Line 53: \l[!(b3 == 0U)]\l" id="229 -> 244"]
244 -> 245 [label="Lines 62 - 63: \lcarry = 0U;\li = 0U;\l" id="244 -> 245"]
230 -> 232 [label="Line 54: \lnb = nb - 1;\l" id="230 -> 232"]
232 -> 233 [label="Line 55: \l[b2 == 0U]\l" id="232 -> 233"]
232 -> 234 [label="Line 55: \l[!(b2 == 0U)]\l" id="232 -> 234"]
234 -> 244 [label="Line 0: \l\l" id="234 -> 244"]
233 -> 237 [label="Line 56: \lnb = nb - 1;\l" id="233 -> 237"]
237 -> 238 [label="Line 57: \l[b1 == 0U]\l" id="237 -> 238"]
237 -> 239 [label="Line 57: \l[!(b1 == 0U)]\l" id="237 -> 239"]
239 -> 244 [label="Line 0: \l\l" id="239 -> 244"]
238 -> 242 [label="Line 58: \lnb = nb - 1;\l" id="238 -> 242"]
242 -> 244 [label="Line 0: \l\l" id="242 -> 244"]
214 -> 216 [label="Line 44: \lna = na - 1;\l" id="214 -> 216"]
216 -> 217 [label="Line 45: \l[a2 == 0U]\l" id="216 -> 217"]
216 -> 218 [label="Line 45: \l[!(a2 == 0U)]\l" id="216 -> 218"]
218 -> 228 [label="Line 0: \l\l" id="218 -> 228"]
217 -> 221 [label="Line 46: \lna = na - 1;\l" id="217 -> 221"]
221 -> 222 [label="Line 47: \l[a1 == 0U]\l" id="221 -> 222"]
221 -> 223 [label="Line 47: \l[!(a1 == 0U)]\l" id="221 -> 223"]
223 -> 228 [label="Line 0: \l\l" id="223 -> 228"]
222 -> 226 [label="Line 48: \lna = na - 1;\l" id="222 -> 226"]
226 -> 228 [label="Line 0: \l\l" id="226 -> 228"]
187 -> 189 [label="Line 114: \lint __CPAchecker_TMP_0;\l" id="187 -> 189"]
189 -> 190 [label="Line 114: \l[i >= 0]\l" id="189 -> 190"]
189 -> 200 [label="Line 114: \l[!(i >= 0)]\l" id="189 -> 200"]
200 -> 203 [label="Line 0: \l__CPAchecker_TMP_0 = 0;\l" id="200 -> 203"]
203 -> 204 [label="Line 114: \l[__CPAchecker_TMP_0 != 0]\l" id="203 -> 204"]
203 -> 205 [label="Line 114: \l[!(__CPAchecker_TMP_0 != 0)]\l" id="203 -> 205"]
204 -> 206 [label="Lines 115 - 117: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="204 -> 206"]
206 -> 207 [label="Line 118: \l[i >= 2048]\l" id="206 -> 207"]
206 -> 208 [label="Line 118: \l[!(i >= 2048)]\l" id="206 -> 208"]
207 -> 210 [label="Line 0: \l\l" id="207 -> 210"]
190 -> 192 [label="Line 114: \l[i < 2048]\l" id="190 -> 192"]
190 -> 200 [label="Line 114: \l[!(i < 2048)]\l" id="190 -> 200"]
192 -> 195 [label="Line 114: \l[(A[i]) == 0]\l" id="192 -> 195"]
192 -> 200 [label="Line 114: \l[!((A[i]) == 0)]\l" id="192 -> 200"]
195 -> 198 [label="Line 114: \l[(B[i]) == 0]\l" id="195 -> 198"]
195 -> 200 [label="Line 114: \l[!((B[i]) == 0)]\l" id="195 -> 200"]
198 -> 203 [label="Line 0: \l__CPAchecker_TMP_0 = 1;\l" id="198 -> 203"]
}
