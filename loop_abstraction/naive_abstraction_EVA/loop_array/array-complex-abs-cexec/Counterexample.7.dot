digraph ARG {
node [style="filled" shape="box" color="white"]
0 [fillcolor="cornflowerblue" label="0 @ N20\nmain entry\nAbstractionState: ABS0: true\n" id="0"]
13 [label="13 @ N34\nmain\n" id="13"]
14 [label="14 @ N26\nmain\n" id="14"]
196 [fillcolor="cornflowerblue" label="196 @ N27\nmain\nAbstractionState: ABS33\n" id="196"]
197 [label="197 @ N28\nmain\n" id="197"]
207 [label="207 @ N32\nmain\n" id="207"]
209 [fillcolor="cornflowerblue" label="209 @ N27\nmain\nAbstractionState: ABS35\n" id="209"]
210 [label="210 @ N28\nmain\n" id="210"]
220 [label="220 @ N32\nmain\n" id="220"]
222 [fillcolor="cornflowerblue" label="222 @ N27\nmain\nAbstractionState: ABS37\n" id="222"]
223 [label="223 @ N28\nmain\n" id="223"]
233 [label="233 @ N32\nmain\n" id="233"]
235 [fillcolor="cornflowerblue" label="235 @ N27\nmain\nAbstractionState: ABS39\n" id="235"]
236 [label="236 @ N28\nmain\n" id="236"]
246 [label="246 @ N32\nmain\n" id="246"]
248 [fillcolor="cornflowerblue" label="248 @ N27\nmain\nAbstractionState: ABS41\n" id="248"]
249 [label="249 @ N28\nmain\n" id="249"]
259 [label="259 @ N32\nmain\n" id="259"]
261 [fillcolor="cornflowerblue" label="261 @ N27\nmain\nAbstractionState: ABS43\n" id="261"]
263 [label="263 @ N29\nmain\n" id="263"]
264 [label="264 @ N11\n__VERIFIER_assert entry\n" id="264"]
265 [label="265 @ N12\n__VERIFIER_assert\n" id="265"]
266 [label="266 @ N14\n__VERIFIER_assert\n" id="266"]
269 [fillcolor="red" label="269 @ N15\n__VERIFIER_assert\nAbstractionState: ABS44\n AutomatonState: ErrorLabelAutomaton: _predefinedState_ERROR\n" id="269"]
0 -> 13 [color="red" label="Line 0: \lINIT GLOBAL VARS\l" id="0 -> 13"]
13 -> 14 [color="red" label="Lines 7 - 29: \lvoid abort();\lvoid __assert_fail(const char *, const char *, unsigned int, const char *);\lvoid reach_error();\lvoid assume_abort_if_not(int cond);\lvoid __VERIFIER_assert(int cond);\lvoid __VERIFIER_assume(int);\lint __VERIFIER_nondet_int();\lunsigned int __VERIFIER_nondet_uint();\lint main();\lFunction start dummy edge\lint A[2048] = { 0 };\lint B[2048] = { 0 };\lint i;\lint tmp;\li = 0;\l" id="13 -> 14"]
14 -> 196 [color="red" label="Line 30: \lwhile\l" id="14 -> 196"]
196 -> 197 [color="red" label="Line 30: \l[i < 2048]\l" id="196 -> 197"]
196 -> 198 [label="Line 30: \l[!(i < 2048)]\l" id="196 -> 198"]
197 -> 207 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="197 -> 207"]
207 -> 209 [color="red" label="Line 0: \l\l" id="207 -> 209"]
209 -> 210 [color="red" label="Line 30: \l[i < 2048]\l" id="209 -> 210"]
209 -> 211 [label="Line 30: \l[!(i < 2048)]\l" id="209 -> 211"]
210 -> 220 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="210 -> 220"]
220 -> 222 [color="red" label="Line 0: \l\l" id="220 -> 222"]
222 -> 223 [color="red" label="Line 30: \l[i < 2048]\l" id="222 -> 223"]
222 -> 224 [label="Line 30: \l[!(i < 2048)]\l" id="222 -> 224"]
223 -> 233 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="223 -> 233"]
233 -> 235 [color="red" label="Line 0: \l\l" id="233 -> 235"]
235 -> 236 [color="red" label="Line 30: \l[i < 2048]\l" id="235 -> 236"]
235 -> 237 [label="Line 30: \l[!(i < 2048)]\l" id="235 -> 237"]
236 -> 246 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="236 -> 246"]
246 -> 248 [color="red" label="Line 0: \l\l" id="246 -> 248"]
248 -> 249 [color="red" label="Line 30: \l[i < 2048]\l" id="248 -> 249"]
248 -> 250 [label="Line 30: \l[!(i < 2048)]\l" id="248 -> 250"]
249 -> 259 [color="red" label="Lines 32 - 34: \ltmp = A[i];\lB[i] = tmp;\li = i + 1;\l" id="249 -> 259"]
259 -> 261 [color="red" label="Line 0: \l\l" id="259 -> 261"]
261 -> 262 [label="Line 30: \l[i < 2048]\l" id="261 -> 262"]
261 -> 263 [color="red" label="Line 30: \l[!(i < 2048)]\l" id="261 -> 263"]
263 -> 264 [color="red" label="Line 39: \l__VERIFIER_assert((A[1024]) == (B[1024]))\l" id="263 -> 264"]
264 -> 265 [color="red" label="Line 0: \lFunction start dummy edge\l" id="264 -> 265"]
265 -> 266 [color="red" label="Line 15: \l[cond == 0]\l" id="265 -> 266"]
265 -> 267 [label="Line 15: \l[!(cond == 0)]\l" id="265 -> 267"]
266 -> 269 [color="red" label="Line 16: \lLabel: ERROR\l" id="266 -> 269"]
}
