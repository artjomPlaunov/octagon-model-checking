digraph CFA {
20 [shape="circle" label="N20\n31"]
44 [shape="circle" label="N44\n30"]
45 [shape="circle" label="N45\n29"]
46 [shape="circle" label="N46\n28"]
47 [shape="circle" label="N47\n27"]
48 [shape="circle" label="N48\n26"]
49 [shape="circle" label="N49\n25"]
50 [shape="circle" label="N50\n24"]
51 [shape="circle" label="N51\n23"]
52 [shape="circle" label="N52\n22"]
21 [shape="circle" label="N21\n21"]
22 [shape="circle" label="N22\n20"]
23 [shape="circle" label="N23\n19"]
24 [shape="circle" label="N24\n18"]
25 [shape="circle" label="N25\n17"]
26 [shape="diamond" label="N26\n16"]
28 [shape="circle" label="N28\n15"]
19 [shape="circle" label="N19\n7"]
27 [shape="circle" label="N27\n14"]
30 [shape="circle" label="N30\n13"]
31 [shape="circle" label="N31\n12"]
32 [shape="circle" label="N32\n11"]
33 [shape="doublecircle" label="N33\n10"]
35 [shape="circle" label="N35\n9"]
11 [shape="circle" label="N11\n7"]
12 [shape="diamond" label="N12\n6"]
13 [shape="circle" label="N13\n1"]
10 [shape="circle" label="N10\n0"]
42 [shape="circle" label="N42\n8"]
14 [shape="circle" label="N14\n5"]
15 [shape="circle" label="N15\n4"]
1 [shape="circle" label="N1\n3"]
2 [shape="circle" label="N2\n2"]
55 [shape="circle" label="N55\n0"]
16 [shape="circle" label="N16\n3"]
34 [shape="diamond" label="N34\n6"]
38 [shape="circle" label="N38\n5"]
40 [shape="circle" label="N40\n4"]
36 [shape="circle" label="N36\n1"]
41 [shape="circle" label="N41\n0"]
37 [shape="circle" label="N37\n3"]
39 [shape="circle" label="N39\n2"]
node [shape="circle"]
subgraph cluster___VERIFIER_assert {
label="__VERIFIER_assert()"
11 -> 12 [label="Function start dummy edge"]
12 -> 14 [label="[cond == 0]"]
12 -> 13 [label="[!(cond == 0)]"]
13 -> 10 [label="return;"]
14 -> 15 [label="Label: ERROR"]
15 -> 16 [label="reach_error();" style="dotted" arrowhead="empty"]}
subgraph cluster_assume_abort_if_not {
label="assume_abort_if_not()"
}
subgraph cluster_main {
label="main()"
20 -> 44 [label="INIT GLOBAL VARS"]
44 -> 45 [label="void abort();"]
45 -> 46 [label="void __assert_fail(const char *, const char *, unsigned int, const char *);"]
46 -> 47 [label="void reach_error();"]
47 -> 48 [label="void assume_abort_if_not(int cond);"]
48 -> 49 [label="void __VERIFIER_assert(int cond);"]
49 -> 50 [label="int SIZE = 2000000;"]
50 -> 51 [label="int __VERIFIER_nondet_int();"]
51 -> 52 [label="int main();"]
52 -> 21 [label="Function start dummy edge"]
21 -> 22 [label="unsigned int n;"]
22 -> 23 [label="unsigned int i;"]
23 -> 24 [label="unsigned int j;"]
24 -> 25 [label="unsigned int l = 0;"]
25 -> 26 [label="n = SIZE;"]
26 -> 27 [label="[n <= SIZE]"]
26 -> 28 [label="[!(n <= SIZE)]"]
28 -> 19 [label="return 0;"]
27 -> 30 [label="i = 0;"]
30 -> 31 [label="j = 0;"]
31 -> 32 [label="l = 0;"]
32 -> 33 [label="while"]
33 -> 34 [label="[l < n]"]
33 -> 35 [label="[!(l < n)]"]
35 -> 42 [label="__VERIFIER_assert((i + j) == 2000000);" style="dotted" arrowhead="empty"]
42 -> 19 [label="return 0;"]
34 -> 37 [label="[(l % 2) == 0]"]
34 -> 38 [label="[!((l % 2) == 0)]"]
38 -> 40 [label="j = j + 1;"]
40 -> 36 [label=""]
36 -> 41 [label="l = l + 1;"]
41 -> 33 [label=""]
37 -> 39 [label="i = i + 1;"]
39 -> 36 [label=""]}
subgraph cluster_reach_error {
label="reach_error()"
1 -> 2 [label="Function start dummy edge"]
2 -> 55 [label="__assert_fail(\"0\", \"sumt2.c\", 3, \"reach_error\");"]}
35 -> 11 [label="__VERIFIER_assert((i + j) == 2000000)"]
10 -> 42 [label="Return edge from __VERIFIER_assert to main: __VERIFIER_assert((i + j) == 2000000);"]
15 -> 1 [label="reach_error()"]}