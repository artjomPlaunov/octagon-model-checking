digraph main {
20 [shape="circle" label="N20\n31"]
44 [shape="circle" label="N44\n30"]
26 [shape="diamond" label="N26\n16"]
27 [shape="circle" label="N27\n14"]
28 [shape="circle" label="N28\n15"]
30 [shape="circle" label="N30\n13"]
33 [shape="doublecircle" label="N33\n10"]
34 [shape="diamond" label="N34\n6"]
35 [shape="circle" label="N35\n9"]
42 [shape="circle" label="N42\n8"]
37 [shape="circle" label="N37\n3"]
38 [shape="circle" label="N38\n5"]
36 [shape="circle" label="N36\n1"]
41 [shape="circle" label="N41\n0"]
39 [shape="circle" label="N39\n2"]
19 [shape="circle" label="N19\n7"]
44 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">44</td><td align="left">void abort();</td></tr><tr><td align="right">45</td><td align="left">void __assert_fail(const char *, const char *, unsigned int, const char *);</td></tr><tr><td align="right">46</td><td align="left">void reach_error();</td></tr><tr><td align="right">47</td><td align="left">void assume_abort_if_not(int cond);</td></tr><tr><td align="right">48</td><td align="left">void __VERIFIER_assert(int cond);</td></tr><tr><td align="right">49</td><td align="left">int SIZE = 2000000;</td></tr><tr><td align="right">50</td><td align="left">int __VERIFIER_nondet_int();</td></tr><tr><td align="right">51</td><td align="left">int main();</td></tr><tr><td align="right">52</td><td align="left">Function start dummy edge</td></tr><tr><td align="right">21</td><td align="left">unsigned int n;</td></tr><tr><td align="right">22</td><td align="left">unsigned int i;</td></tr><tr><td align="right">23</td><td align="left">unsigned int j;</td></tr><tr><td align="right">24</td><td align="left">unsigned int l = 0;</td></tr><tr><td align="right">25</td><td align="left">n = SIZE;</td></tr></table>>]
44 -> 26[label=""]
30 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">30</td><td align="left">j = 0;</td></tr><tr><td align="right">31</td><td align="left">l = 0;</td></tr><tr><td align="right">32</td><td align="left">while</td></tr></table>>]
30 -> 33[label=""]
38 [style="filled,bold" penwidth="1" fillcolor="white" fontname="Courier New" shape="Mrecord" label=<<table border="0" cellborder="0" cellpadding="3" bgcolor="white"><tr><td align="right">38</td><td align="left">j = j + 1;</td></tr><tr><td align="right">40</td><td align="left"></td></tr></table>>]
38 -> 36[label=""]
20 -> 44 [label="INIT GLOBAL VARS" fontname="Courier New"]
26 -> 27 [label="[n <= SIZE]" fontname="Courier New"]
26 -> 28 [label="[!(n <= SIZE)]" fontname="Courier New"]
27 -> 30 [label="i = 0;" fontname="Courier New"]
33 -> 34 [label="[l < n]" fontname="Courier New"]
33 -> 35 [label="[!(l < n)]" fontname="Courier New"]
100001 [shape="component" label="__VERIFIER_assert"]
35 -> 100001 [label="__VERIFIER_assert((i + j) == 2000000);" fontname="Courier New"]
100001 -> 42 [label="" fontname="Courier New"]
34 -> 37 [label="[(l % 2) == 0]" fontname="Courier New"]
34 -> 38 [label="[!((l % 2) == 0)]" fontname="Courier New"]
36 -> 41 [label="l = l + 1;" fontname="Courier New"]
37 -> 39 [label="i = i + 1;" fontname="Courier New"]
28 -> 19 [label="return 0;" fontname="Courier New"]
42 -> 19 [label="return 0;" fontname="Courier New"]
41 -> 33 [label="" fontname="Courier New"]
39 -> 36 [label="" fontname="Courier New"]
}